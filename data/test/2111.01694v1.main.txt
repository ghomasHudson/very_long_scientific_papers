##### Contents

-    Abstract
-    1 Introduction
    -    1.1 Research Motivation
    -    1.2 Thesis Overview
        -    1.2.1 Contributions
        -    1.2.2 Organization
        -    1.2.3 Publications
-    2 Small-Signal Stability Analysis
    -    2.1 Introduction
    -    2.2 Power System Model
    -    2.3 Linearized Power System Model
        -    2.3.1 DAE Formulation
        -    2.3.2 ODE Formulation
    -    2.4 Linear System of Differential Equations
        -    2.4.1 Formulation
        -    2.4.2 Matrix Pencil
        -    2.4.3 Solutions
        -    2.4.4 Eigenvalue Problem
            -    2.4.4.1 Formulation
            -    2.4.4.2 Properties
        -    2.4.5 Stability
    -    2.5 Numerical Methods
        -    2.5.1 Eigenvalue Algorithms
        -    2.5.2 Open-Source Libraries
        -    2.5.3 Spectral Transforms
        -    2.5.4 Computational Complexity
    -    2.6 Case Studies
        -    2.6.1 All-Island Irish Transmission System
        -    2.6.2 21,177-bus ENTSO-E
    -    2.7 Concluding Remarks
-    3 Participation Factors
    -    3.1 Introduction
    -    3.2 Classical Participation Factors
        -    3.2.1 Definition
        -    3.2.2 Residues
    -    3.3 Generalized Participation Factors
        -    3.3.1 Formulation
        -    3.3.2 Illustrative Example
    -    3.4 Participation Factors of Algebraic Variables
    -    3.5 Case Studies
        -    3.5.1 Two-Area System
        -    3.5.2 All-Island Irish Transmission System
    -    3.6 Conclusions
-    4 Fractional Order Control
    -    4.1 Introduction
    -    4.2 Essentials of Fractional Calculus
    -    4.3 Power System with Fractional Order Control
        -    4.3.1 Modeling
        -    4.3.2 Stability
        -    4.3.3 Properties of Fractional Order Controllers
        -    4.3.4 Examples
            -    4.3.4.1 Illustrative Example
            -    4.3.4.2 WSCC 9-bus System
    -    4.4 Oustaloup’s Recursive Approximation
        -    4.4.1 Formulation
        -    4.4.2 DAE Model
        -    4.4.3 Steady State Error
        -    4.4.4 Parameters Selection
    -    4.5 Case Studies
        -    4.5.1 WSCC 9-bus System
        -    4.5.2 All-Island Irish Transmission System
    -    4.6 Conclusions
-    5 Time-Delay-based Control
    -    5.1 Introduction
    -    5.2 Spectral Analysis of Time-Delay Systems
        -    5.2.1 Preliminaries
        -    5.2.2 Analytical Study of Second-Order LTI Systems
            -    5.2.2.1 System Description
            -    5.2.2.2 Stability Analysis
            -    5.2.2.3 Delay-Independent Stability
        -    5.2.3 Linear Large-Scale Time-Delay Systems
        -    5.2.4 Non-Linear Large-Scale Time-Delay Systems
    -    5.3 One-Machine Infinite-Bus System
        -    5.3.1 Classical Model
        -    5.3.2 Power System Stabilizer with PR Control
        -    5.3.3 Illustrative Example
    -    5.4 Case Study: IEEE 14-bus System
    -    5.5 Remarks
    -    5.6 Conclusions
-    6 One-Step Delay Approximation
    -    6.1 Introduction
    -    6.2 Implicit Integration of Power Systems
    -    6.3 One-Step-Delay Approximation
    -    6.4 Selection of Variables to be Delayed
        -    6.4.1 Systematic Selection of Variables
        -    6.4.2 Illustrative Examples
            -    6.4.2.1 Center of Inertia
            -    6.4.2.2 Turbine Governor
            -    6.4.2.3 Automatic Generation Control
            -    6.4.2.4 Secondary Voltage Regulation
    -    6.5 Maximum Delay / Time Step
    -    6.6 Case Studies
        -    6.6.1 IEEE 39-bus System
        -    6.6.2 21,177-bus ENTSO-E
    -    6.7 Conclusions
-    7 Conclusions and Future Work
-    A Proofs
    -    A.1 Proof of Theorem 2.19
    -    A.2 Proof of Theorem 3.3.1
    -    A.3 Proof of Theorem
-    B Map of the All-Island Irish Transmission System

###### List of Figures

-    2.1 AIITS: root loci computed with LAPACK
-    2.2 AIITS: shift & invert transform image of the spectrum
-    2.3 AIITS: Cayley transform image of the spectrum
-    2.4 AIITS: root loci obtained with z-PARES
-    3.1 Two-area four-machine system: single-line diagram
-    3.2 AIITS: participation of bus active power injections to Mode 1
-    3.3 AIITS: participation of bus active power injections to Mode 2
-    4.1 PID vs FOPID: from point to plane
-    4.2 FOPI block diagram
-    4.3 Numerical example 1: root loci
-    4.4 WSCC system with FOPSS: most critical eigenvalues
-    4.5 Oustaloup’s recursive approximation block diagram
-    4.6 Bode plot of the ORA
-    4.7 ORA frequency response
-    4.8 WSCC system with AGC: CoI frequency
-    4.9 Active power flow of simplified ESS model
-    4.10 WSCC system with ESS frequency control
-    4.11 WSCC system with ESS frequency control
-    4.12 VSC outer and inner control in dq-frame
-    4.13 WSCC system with STATCOM: voltage at bus 8
-    4.14 AIITS: frequency response following the loss of EWIC
-    4.15 AIITS: impact of FO-AGC on frequency response
-    5.1 OMIB system: single-line diagram
-    5.2 PR control based PSS diagram
-    5.3 Closed-loop linearized OMIB system: stability map
-    5.4 Closed-loop non-linear OMIB system with noisy rotor speed
    measurement
-    5.5 Closed-loop linearized OMIB system: stability map
-    5.6 Closed-loop linearized OMIB system: stability map
-    5.7 Closed-loop non-linear OMIB system with noisy rotor speed
    measurement
-    5.8 IEEE 14-bus system: single-line diagram
-    5.9 Power system stabilizer block diagram
-    5.10 IEEE 14-bus system: stability map
-    5.11 Dual-channel PSS configuration
-    5.12 IEEE 14-bus system: stability map
-    6.1 Types of Jacobian matrices
-    6.2 IEEE 39-bus system: density of Jacobians
-    (a) @xmath s.
-    (a) @xmath s.
-    (a) @xmath s.
-    B.1 AIITS: transmission system map

###### List of Tables

-    2.1 Methods of open-source libraries
-    2.2 Relevant features of open-source libraries
-    2.3 Common linear spectral transforms
-    2.4 Coefficients of special Möbius transformations
-    2.5 Versions and dependencies of open-source libraries
-    2.6 AIITS: dimensions of the LEP and GEP
-    2.7 AIITS: Schur decomposition methods
-    2.8 AIITS: subspace iteration method
-    2.9 AIITS: Krylov subspace methods, LEP
-    2.10 AIITS: Krylov subspace methods, GEP
-    2.11 AIITS: contour integration method
-    2.12 ENTSO-E: statistics
-    2.13 ENTSO-E: impact of the search region of the CIRR method
-    2.14 ENTSO-E: impact of spectral transforms of the CIRR method
-    3.1 Illustrative example: PFs associated to finite modes
-    3.2 Two-area system: critical modes
-    3.3 Sensitivity test for the inter-area mode
-    3.4 Two-area system: PFs
-    3.5 Impact of SVC-POD installation in the critical mode
-    3.6 AIITS: examined modes
-    4.1 Parameters of the ESS lead-lag frequency controllers
-    4.2 Parameters of the STATCOM controllers
-    5.1 IEEE 14-bus system: PSS parameters
-    5.2 Analogy between the dual-channel PSS and the PR controller
-    6.1 IEEE 39-bus system: NNZ Jacobian elements of the original DAE
    system
-    6.2 IEEE 39-bus system without delays: rightmost eigenvalues
-    6.3 IEEE 39-bus system with one-step delay: rightmost eigenvalues
-    6.4 IEEE 39-bus system with one-step-delay: relative errors of
    rightmost eigenvalues
-    6.5 IEEE 39-bus system: Maximum absolute rotor speed trajectory
    mismatches induced by the proposed method
-    6.6 ENTSO-E system: NNZ Jacobian elements

\makenomenclature \printnomenclature

[2cm]

## List of Acronyms and Abbreviations

 AGC 
    Automatic Generation Control

 AIITS 
    All-Island Irish Transmission System

 AVR 
    Automatic Voltage Regulator

 BBD 
    Bordered-Block Diagonal

 CIH 
    Contour Integration with Hankel matrices

 CIRR 
    Contour Integration with Rayleigh-Ritz

 CoI 
    Center of Inertia

 CSR 
    Compressed Sparse Row

 DAE 
    Differential-Algebraic Equation

 DDAE 
    Delay Differential-Algebraic Equation

 DDE 
    Delay Differential Equation

 EMT 
    Electro-Magnetic Transient

 ENTSO-E 
    European Network of Transmission System Operators for Electricity

 ERD 
    Explicitly Restarted and Deflated

 ESS 
    Energy Storage System

 EWIC 
    East-West Inter-Connector

 FACTS 
    Flexible AC Transmission System

 FO 
    Fractional Order

 FOC 
    Fractional-Order Controller

 FOI 
    Fractional-Order Integral

 FOPI 
    Fractional-Order Proportional Integral

 FOPID 
    Fractional-Order Proportional Integral Derivative

 FOPSS 
    Fractional-Order Power System Stabilizer

 GD 
    Generalized Davidson

 GEP 
    Generalized Eigenvalue Problem

 GRPR 
    Generator Reactive Power Regulator

 HVDC 
    High Voltage Direct Current

 IO 
    Integer Order

 ITM 
    Implicit Trapezoidal Method

 JD 
    Jacobi-Davidson

 LEP 
    Linear Eigenvalue Problem

 LM 
    Largest Magnitude

 LRP 
    Largest Real Part

 LTI 
    Linear Time-Invariant

 MPI 
    Message Passing Interface

 NNZ 
    Number of Non-Zero

 ODE 
    Ordinary Differential Equation

 OMIB 
    One-Machine Infinite-Bus

 ORA 
    Oustaloup’s Recursive Approximation

 PDE 
    Partial Differential Equation

 PF 
    Participation Factor

 PI 
    Proportional Integral

 PID 
    Proportional Integral Derivative

 POD 
    Power Oscillation Damper

 PR 
    Proportional Retarded

 PSS 
    Power System Stabilizer

 RCI 
    Reverse Communication Interface

 RL 
    Riemann-Liouville

 RoCoF 
    Rate of Change of Frequency

 SM 
    Smallest Magnitude

 SSSA 
    Small-Signal Stability Analysis

 STATCOM 
    STATic synchronous COMpensator

 SVC 
    Static Var Compensator

 SVR 
    Secondary Voltage Regulation

 TDI 
    Time Domain Integration

 TG 
    Turbine Governor

 VSC 
    Voltage Source Converter

 WADC 
    Wide-Area Damping Controller

 WAMS 
    Wide-Area Measurement System

 WSCC 
    Western Systems Coordinating Council

## Notation

This section states the notation adopted throughout the thesis.

\xpatchcmd \labeling

##### Vectors and Matrices \labeling

xxxxxxx

scalar

vector

matrix

matrix transpose

matrix conjugate transpose (Hermitian)

identity matrix of dimensions @xmath

zero matrix of dimensions @xmath

##### Sets and Units \labeling

xxxxxxx

@xmath time continuously differentiable functions

complex numbers

unit imaginary number

imaginary numbers

natural numbers

real numbers

integer numbers

##### Time and Frequency Domain \labeling

xxxxxxx

time domain quantity

first order derivative

second order derivative

@xmath -th order derivative (of fractional order or of integer order
@xmath )

frequency domain quantity

Laplace transform

complex Laplace variable

spectral transform

##### Eigenvalues and Eigenvectors \labeling

xxxxxxx

natural frequency of eigenvalue

element of right eigenvector

right eigenvector

right modal matrix

element of left eigenvector

left eigenvector

left modal matrix

damping ratio of eigenvalue

eigenvalue

imaginary part of eigenvalue @xmath

real part of eigenvalue @xmath

multiplicity of infinite eigenvalue

number of finite eigenvalues

participation factor

participation matrix

##### Parameters \labeling

xxxxxxx

susceptance

constant

damping coefficient

conductance

time step size

control gain

mechanical starting time

resistance

droop constant of primary frequency control

time constant

reactance

time delay

##### Variables and Functions \labeling

xxxxxxx

electromotive force

active power

reactive power

time

input signal

voltage magnitude

Lyapunov function

output signal

state variable

algebraic variable

angular position

voltage phase angle

torque

angular speed

##### Superscripts and Subscripts \labeling

xxxxxxx

direct axis of the @xmath transform

delayed quantity

mechanical

minimum

maximum

initial condition

quadrature axis of the @xmath transform

rotor

reference

stator

## Chapter 1 Introduction

### 1.1 Research Motivation

Electric power systems around the world are currently undergoing a deep
structural transformation. Arguably the most important change is the
gradual replacement of conventional synchronous generator-based fossil
fuel power plants – that have been dominating the dynamic response of
power systems for more than a century now – by converter-based,
intermittent renewable energy resources, such as wind and solar
photovoltaic generation. Other significant changes are the increasing
flexibility of energy consumption – partially due to the electrification
of transportation and heating systems –, as well as the integration of
power networks along with digital technologies and communication
systems. Meanwhile, there is a continuous expansion of national
distribution and transmission networks, as well as of international
interconnections and power exchanges, especially by means of High
Voltage Direct Current ( HVDC ) connections.

As dynamical systems, power systems are large-scale, highly non-linear
systems which include continuous, discrete and stochastic variables.
Moreover, following from the aforementioned changes, the size,
uncertainty and dynamic complexity of power systems are further
increasing. Therefore, stability assessment, optimal control synthesis,
and accurate and efficient computer-based simulation of power systems
are challenging tasks which, in order to be adequately addressed,
require the development of ad hoc analytical and numerical tools.

Undoubtedly, the most successful method for assessing the dynamic
behavior of a power system model after a disturbance is to carry out a
numerical time domain simulation. On the other hand, assessing the
overall performance of a power system by means of time domain
simulations requires considering a large number of disturbances and
scenarios. Even so, and despite some efforts that have been made, see
e.g. [ ajjarapu:11 ] , time domain analysis typically does not answer
crucial quantitative questions such as: What is the stability margin of
the system? What are the properties, e.g. natural frequency and damping,
of the most critical for the stability dynamic modes? What are the
couplings between the critical modes and the variables of the power
system? These questions are typically addressed by means of stability
analysis.

Power system stability is defined as the ability of an electric power
system, for a given initial operating condition, to regain a state of
operating equilibrium after being subjected to a physical disturbance,
with most system variables bounded so that practically the entire system
remains intact [ stability:04 ] . There are various mechanisms that may
lead a power system to instability. For this reason, power system
stability has been classified in categories, which helps identify the
causes of instability and simplify the analysis by using appropriate
models and tools. Following from [ stability:04 ] , the ability of a
power system, following a disturbance, to maintain (i) synchronism,
defines rotor angle stability ; (ii) steady voltages at all buses,
defines voltage stability ; and (iii) steady frequency, i.e. balanced
generation and load, defines frequency stability . Due to the the
increasing penetration of power electronic converter interfaced
technologies, this classification has been recently revisited in [
stability:20 ] , to include two new types of stability, namely, (iv)
resonance stability , which is concerned with resonances of
electromechanical and electrical nature; and (v) converter-driven
stability , which is concerned with fast and slow interactions caused by
the operation of power electronic converters. Finally, from a
system-theoretic point of view, the conditions that may lead a dynamical
system and hence also a power system to collapse after a disturbance
are, ultimately, three, as follows: (i) a post-disturbance operating
equilibrium does not exist; (ii) a post-disturbance equilibrium exists
but it can not be reached, because the trajectory that the system
follows is unstable; and (iii) a post-disturbance equilibrium exists but
it is unstable.

Among the various stability analysis techniques available for power
systems, this thesis focuses in particular on Small-Signal Stability
Analysis ( SSSA ), which studies the third condition, i.e. the stability
of equilibria. SSSA has been mostly used for the analysis of rotor angle
stability of small-disturbances. However, the definition and most
importantly the tools of SSSA also apply to other types of power system
stability. In particular, resonance stability, both torsional and
electrical, as well as the fast-interaction converter-driven stability,
can be studied and addressed using SSSA . The main advantage of SSSA is
that, provided that a stationary condition exists, it can be always
applied to a system, as opposed to other stability analysis techniques,
such as Lyapunov’s energy function, which cannot be defined for all
systems. On the other hand, SSSA is valid only in the neighborhood of an
examined stationary point and thus it is not suitable for assessing the
stability following a large disturbance. Despite this limitation, SSSA
provides valuable insights on a power system model by capturing its
structural characteristics and hence, it is a fundamental component of
power system dynamic analysis. Among other applications, SSSA has been
employed in power systems as a tool for modal analysis, see e.g. [
arriaga:82_1 , hamdan:86 , arriaga:89 ] , control design, see e.g. [
chow:00 , heydt:04 , gurrala:10 ] , and numerical analysis, see e.g. [
ajjarapu:06 , milano:psa:16 ] . The objective of this thesis is to
explore all three above directions. In particular, the thesis employs
SSSA techniques to feature novel aspects in modal participation
analysis, automatic control design, and time domain integration.

### 1.2 Thesis Overview

#### 1.2.1 Contributions

The main goal of this thesis is to contribute to the stability analysis
and control of power systems by developing a handful of novel analytical
and computational tools, based on SSSA . In particular, the main
contributions of the thesis are in three directions, namely, modal
participation analysis, automatic control design, and time domain
integration.

##### Modal Participation Analysis

Modal analysis studies the properties of a dynamical system in the
frequency domain. An important component of power system modal analysis
is participation analysis , which is an approach to efficiently
determine the sensitivities of the dynamic modes of a power system model
to variations of its variables. In its classical formulation, modal
participation analysis quantifies the coupling of the states of a linear
system of Ordinary Differential Equations with its dynamic modes
(eigenvalues of the state matrix), and is considered a standard tool of
power system SSSA [ arriaga:82_1 ] . The non-linear power system model
for angle and voltage stability analysis, however, is typically
formulated as a set of Differential-Algebraic Equations . That is, it
also includes a variety of algebraic equations and variables, e.g. power
and/or current flows in network branches, that constrain the system and
define its dynamics. To study the impact of algebraic variables on the
system dynamic response through participation factors is one of the
scopes of this thesis. Such a study is relevant since, very often, the
measurements taken on the transmission network and used by local and
wide area controllers are modeled as algebraic variables.

This thesis proposes a measure for the modal participation of the
algebraic variables of a power system model in its dynamic modes,
through the definition of appropriate input-output vectors of the
system’s state-space representation. To this aim, an alternative
interpretation of the classical participation factors as
eigen-sensitivities is also proposed. The new interpretation removes the
basic assumptions of classical participation analysis, since it assumes
that the power system is modeled as singular system of differential
equations with eigenvalue multiplicities.

##### Control Design

Proper control design is crucial to ensure a stable operation of a power
system. This thesis employs SSSA techniques for the purpose of control
design in two ways: (i) by studying an extension of classical control
theory which stems from the theory of fractional order differential
equations; (ii) by exploring the impact of delay-based controllers on
power system stability.

1.   Fractional Order Control:

    The selection of a proper control scheme is a critical decision
    during a control design. With this regard, despite the recent
    developments in the theory of robust and advanced control, see [
    zhou:99 , camacho:07 ] , the vast majority of controllers employed
    in industrial applications are still based on classical schemes,
    such as the Proportional Integral Derivative ( PID ) controller.
    This is mostly due to the fact that classical control schemes
    combine simple structure, easy tuning, and overall good performance.
    With this in mind, the thesis investigates a promising extension of
    classical controllers, which stems from the theory of fractional
    calculus. Fractional calculus is the mathematical analysis that
    studies differentials and integrals of non-integer order. Control
    schemes based on fractional calculus have gained momentum in power
    system applications due to their ability to enhance performance and
    increase the stability margin, under the presence of topological
    changes, parameter uncertainty and noise.

    In this thesis, a theory on how to carry out SSSA of power systems
    with exact fractional dynamics is developed. In addition, a
    step-by-step analytical study on the modeling and parameters
    selection of Oustaloup’s Recursive Approximation ( ORA )-based
    Fractional-Order Controllers is provided. Finally, the thesis
    carries out a systematic analysis of FOC applications to power
    system controllers. These include automatic generation control of
    synchronous machines; frequency control of a converter-interfaced
    energy storage system; and voltage control through a static
    synchronous compensator.

2.   Delay-based Control:

    Measurement and communication delays in local Power System
    Stabilizers and Wide-Area Damping Controllers are known to be a
    potential threat for the overall dynamic performance of power
    systems [ heydt:2002 , heydt_stochastic:08 , delay1 , muyang:wams ]
    . How to properly study the impact of delays through accurate yet
    robust numerical techniques is still an open and active field of
    research. In spite of their bad reputation, delays are not always
    detrimental, but can also have unexpectedly beneficial effects on
    the stability of dynamical systems [ Sipahi2011_CSM ,
    Pyragas:1992-PLA , Sipahi:2005-AUTOMATICA , Stepan:1989-BOOK ,
    Abdallah:1993 ] . It has been shown, for example, that intentionally
    inserting a certain amount of delay in a feedback control system can
    enhance disturbance rejection capabilities, improve response time,
    and add the required damping to avoid undesired oscillations in a
    closed-loop system, see, e.g. [ Olgac:2005 ] . More recently,
    analytical tuning techniques have been proposed to adjust time
    delays and controller gains to achieve fast response [
    Ramirez:2015-ISA , Ramirez:2016-TAC , Ramirez:2017-SICON ] . These
    new results motivate the use of intentional time delays as part of
    controllers, e.g. to effectively suppress poorly damped synchronous
    machine electromechanical oscillations.

    In this thesis, the structure of stability crossing boundaries and
    the damping characteristics in the delay-controller gain parameter
    space of power systems with delay-based control are featured using
    two complementary approaches. First, through an analytical proof-of
    concept, by using the one-machine infinite-bus system. Second,
    through a numerical analysis on a larger, more realistic system. The
    main novel result of these studies is that proper design of a
    two-channel PSS allows unifying disconnected stability regions.

##### Time Domain Integration

The power system model for rotor-angle and voltage stability analysis is
conventionally formulated as a set of non-linear DAE s . These equations
are mutually dependent due to the meshed topology of transmission
networks and the action of secondary controllers.

This thesis proposes a technique to decouple the power system DAE s by
introducing a delay that is equal to the time step of the numerical
integration. Such delay, while not altering the overall dynamic response
of the system, allows reducing the coupling of the DAE s by removing
off-diagonal elements of the system Jacobian matrix. The impact of the
proposed one-step-delay approximation on the accuracy, convergence and
computational burden of the time domain integration routine are
rigorously and systematically discussed. In addition, a method to
identify the elements of a power system DAE model that can be delayed by
one time step, as well as a technique to estimate the maximum admissible
delay, so that the approximation is within a given tolerance are
provided.

* * *

Simulations in this thesis are carried out using the Python-based power
system analysis software tool Dome [ vancouver ] . These include
solution of power flow problems, SSSA , and time domain simulations. In
addition, the models and techniques developed in the course of this
thesis are implemented and included in Dome.

#### 1.2.2 Organization

The remainder of the thesis is organized as follows.

Chapter 2 provides the fundamentals of SSSA , which are then utilized
throughout the thesis. The formulation, eigenvalue analysis and
stability condition of linearized power systems are presented. In
addition, the chapter provides an overview of existing algorithms, and a
comprehensive comparison of available open-source libraries, that are
suitable for the solution of non-Hermitian eigenvalue problems.

Chapter 3 focuses on modal participation analysis as a measure of the
coupling between the variables and dynamic modes of a power system.
Classical definitions of participation factors are provided first. The
modal participation analysis of a power system modeled as a singular
system of differential equations with eigenvalue multiplicities, as well
as a new interpretation of participation factors as eigensensitivities,
are presented next. Then, the chapter proposes an approach to determine
the participation of algebraic variables in power system dynamic modes,
which considers adequate input/output variables of the system’s
state-space representation. Both the linear and generalized eigenvalue
problems are considered for the calculation of the participation
factors. An illustrative example on the two-area system, as well as a
study on the 1,479-bus All-Island Irish Transmission System ( AIITS )
model are carried out to support the theory and illustrate the features
of the proposed approach.

Chapter 4 presents the theoretical foundation and practical
implementation aspects of FOC s for power system applications. First,
essential definitions and concepts from fractional calculus are
described. Second, mathematical theory on the stability analysis of
power systems with inclusion of FOC s is presented. Next, Chapter 4
discusses the software implementation of FOC s based on the ORA method.
A variety of examples of ORA -based FOC s are illustrated, namely,
integral FOC for Automatic Generation Control ( AGC ); lead-lag FOC for
frequency regulation of an Energy Storage System ( ESS ); and multiple
Proportional Integral ( PI ) FOC s for voltage regulation provided by a
STATic synchronous COMpensator ( STATCOM ). The Western Systems
Coordinating Council ( WSCC ) 9-bus test system and the 1,479-bus AIITS
model are employed to test and compare the examined FOC s with their
integer-order versions.

Chapter 5 discusses how to utilize intentional time delays as part of
controllers to improve the damping characteristics in electromechanical
oscillations of power system synchronous machines. First, stability
theory on the spectral analysis of small and large time-delay systems is
provided. The control parameter settings for which time delays in PSS s
improve the small-signal stability of a power system are systematically
identified. Analytical results are presented by applying a Proportional
Retarded ( PR ) control scheme to the One-Machine Infinite-Bus ( OMIB )
electromechanical power system model. Finally, to demonstrate the
opportunities in more realistic models, the obtained results are tested
via numerical analysis on the IEEE 14-bus system.

Chapter 6 proposes the inclusion of a delay – equal to the time step of
the numerical integration – to reduce the coupling of the equations of
the non-linear DAE power system model. At first, the conventional
implicit numerical integration of power systems is described.
Subsequently, the proposed one-step delay approximation is presented.
The selection of the variables that when subjected to one-step delay
leave practically unchanged the system trajectories, as well as
estimation of the maximum admissible delay, are discussed using
small-signal stability analysis. Finally, the proposed approach is
evaluated in terms of accuracy, convergence and computational burden, by
means of (i) the IEEE 39-bus system; (ii) the 21,177-bus model of the
European Network of Transmission System Operators for Electricity (
ENTSO-E ).

Finally, Chapter 7 summarizes the most relevant conclusions of the
thesis and suggests directions for future work.

#### 1.2.3 Publications

This section provides the list of publications that gave rise to the
work presented in this thesis.

#### Journal papers

##### (Closely related to the content of the thesis)

1.   G. Tzounas , R. Sipahi, and F. Milano, Damping power system
    electromechanical oscillations using time delays, IEEE Transactions
    on Circuits and Systems I: Regular Papers, accepted in Feb. 2021, in
    press.

2.   G. Tzounas , I. Dassios, M. Liu, and F. Milano, Comparison of
    numerical methods and open-source libraries for eigenvalue analysis
    of large-scale power systems, Applied Sciences, MDPI, Special Issue:
    Methods in Dynamical Systems, Mathematics of Networks, and
    Optimization for Modelling in Engineering , vol. 10, no. 21, 7592,
    Oct. 2020. DOI: 10.3390/app10217592 .

3.   G. Tzounas , F. Milano, Delay-based decoupling of power system
    models for transient stability analysis, IEEE Transactions on Power
    Systems, vol. 36, no 1, pp. 464-473, Jan. 2021. DOI:
    10.1109/TPWRS.2020.3009172 .

4.  I. Dassios,  G. Tzounas , F. Milano, Generalized fractional
    controller for singular systems of differential equations, Journal
    of Computational and Applied Mathematics, Elsevier, vol. 378, Nov.
    2020. DOI: 10.1016/j.cam.2020.112919 .

5.   G. Tzounas , I. Dassios, M. A. A. Murad, F. Milano, Theory and
    implementation of fractional order controllers for power system
    applications, IEEE Transactions on Power Systems, vol. 35, no. 6,
    pp. 4622-4631, Nov. 2020. DOI: 10.1109/TPWRS.2020.2999415 .

6.   G. Tzounas , I. Dassios, F. Milano, Modal participation factors of
    algebraic variables, IEEE Transactions on Power Systems, vol. 35,
    no. 1, pp. 742-750, Jan. 2020. DOI: 10.1109/TPWRS.2019.2931965 .

7.  I. Dassios,  G. Tzounas , F. Milano, Participation factors for
    singular systems of differential equations, Circuits, Systems, and
    Signal Processing, Springer, vol. 39, no. 1, pp. 83-110, Jan. 2020.
    DOI: 10.1007/s00034-019-01183-1 .

##### (Other)

1.  I. Dassios,  G. Tzounas , F. Milano, Robust stability criterion for
    perturbed singular systems of linearized differential equations,
    Journal of Computational and Applied Mathematics, Elsevier, vol.
    381, Jan. 2021. DOI: 10.1016/j.cam.2020.113032 .

2.  M. Liu, I. Dassios,  G. Tzounas , F. Milano, Model-independent
    derivative control delay compensation methods for power systems,
    Energies, MDPI, Special Issue: Advanced Solutions for Monitoring,
    Protection and Control of Modern Power Transmission System , vol.
    13, no. 2, Jan. 2020. DOI: 10.3390/en13020342 .

3.  I. Dassios,  G. Tzounas , and F. Milano, The Möbius transform effect
    in singular systems of differential equations, Applied Mathematics
    and Computation, Elsevier, vol. 361, pp. 338-353, Nov. 2019. DOI:
    10.1016/j.amc.2019.05.047 .

4.  M. Liu, I. Dassios,  G. Tzounas , and F. Milano, Stability analysis
    of power systems with inclusion of realistic-modeling WAMS delays,
    IEEE Transactions on Power Systems, vol. 34, no. 1, pp. 627-636,
    Jan. 2019. DOI: 10.1109/tpwrs.2018.2865559 .

#### Books

1.  F. Milano, I. Dassios, M. Liu, and  G. Tzounas , Eigenvalue Problems
    in Power Systems , CRC Press, Taylor & Francis Group, 2020. ISBN:
    9780367343675 .

#### Conference Papers

1.  M. A. A. Murad,  G. Tzounas and F. Milano, Modeling and simulation
    of fractional order PI control limiters for power systems, 21st IFAC
    World Congress (IFAC 2020), Berlin, Germany, 12-17 Jul. 2020.

2.   G. Tzounas and F. Milano, Impact of the estimation of synchronous
    machine rotor speeds on wide area damping controllers, IEEE PES
    General Meeting, Atlanta, GA, 4-8 Aug. 2019. DOI:
    10.1109/pesgm40551.2019.8973611 .

3.  M. A. A. Murad,  G. Tzounas , M. Liu, and F. Milano, Frequency
    control through voltage regulation of power system using SVC
    devices, IEEE PES General Meeting, Atlanta, GA, 4-8 Aug. 2019. DOI:
    10.1109/pesgm40551.2019.8973807 .

4.   G. Tzounas , M. Liu, M. A. A. Murad, and F. Milano, Impact of
    realistic bus frequency measurements on wide-area power system
    stabilizers, IEEE PowerTech, Milano, Italy, 23-27 Jun. 2019. DOI:
    10.1109/ptc.2019.8810695 .

5.  M. Liu,  G. Tzounas , and F. Milano, A model-independent delay
    compensation method for power systems, IEEE PowerTech, Milano,
    Italy, 23-27 Jun. 2019. DOI: 10.1109/ptc.2019.8810975 .

6.   G. Tzounas , M. Liu, M. A. A. Murad, and F. Milano, Stability
    analysis of wide area damping controllers with multiple time delays,
    10th Symposium on Control of Power and Energy Systems (IFAC CPES),
    Tokyo, Japan, 4-6 Sep. 2018. DOI: 10.1016/j.ifacol.2018.11.753 .

## Chapter 2 Small-Signal Stability Analysis

### 2.1 Introduction

The objective of this chapter is to provide definitions, formulations,
theorems, and software tools related to SSSA and linearized power
systems. The chapter is organized as follows. Section 2.2 describes the
formulation of power system models for transient stability analysis.
Section 2.3 discusses the power system model linearized around an
equilibrium. Section 2.4 provides the outlines of linear systems of
differential equations. In particular, this section discusses the
definition of matrix pencils, the solution, the formulation and
properties of the Linear Eigenvalue Problem ( LEP ) and Generalized
Eigenvalue Problem ( GEP ) and defines asymptotic stability. The most
relevant numerical methods and open-source libraries for the solution of
the eigenvalue problems that arise in power systems are discussed in
Section 2.5 . A comprehensive comparison of these libraries is carried
out through two real-world power system models in the case studies
discussed in Section 2.6 . Finally, conclusions are drawn in Section 2.7
.

### 2.2 Power System Model

The power system model for transient stability analysis can be
formulated as a set of non-linear, semi-implicit DAE s , as follows [
semi:2016 ] :

  -- -------- -------- -- -------
     @xmath   @xmath      (2.1)
  -- -------- -------- -- -------

where @xmath , @xmath ; @xmath , @xmath , are the state variables,
@xmath , @xmath , are the algebraic variables; @xmath , @xmath , are
controlled and/or uncontrolled inputs; @xmath , @xmath , are assumed to
be constant matrices; and @xmath is the simulation time. Finally, @xmath
denotes the zero matrix of dimensions @xmath .

In the formulation of ( 2.1 ), discrete variables are modeled
implicitly, i.e. each discontinuous change in the system leads to a new
continuous set of equations in the form of ( 2.1 ). In addition, dynamic
components of ( 2.1 ) are modeled following the phasor or quasi
sinusoidal approximation. That is, the three phases of AC electric
networks and machines are assumed symmetric; stator transients of
electric machines, as well as Electro-Magnetic Transient ( EMT )
phenomena of transmission lines are ignored.

A special case of ( 2.1 ) is when

  -- -------- -------- -- -------
     @xmath   @xmath      (2.2)
  -- -------- -------- -- -------

where @xmath denotes the @xmath identity matrix. This case leads to an
explicit set of DAE s , that is the formulation most commonly employed
for transient stability analysis. In this thesis, the more general form
of ( 2.1 ) is used, unless otherwise explicitly stated.

### 2.3 Linearized Power System Model

#### 2.3.1 DAE Formulation

The objective of SSSA is to study the stability properties of a power
system model around an equilibrium point. An equilibrium point @xmath of
( 2.1 ) satisfies:

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

For sufficiently small disturbances, ( 2.1 ) can be linearized around
@xmath for the purpose of analysis, as follows:

  -- -------- -------- -- -------
     @xmath   @xmath      (2.3)
  -- -------- -------- -- -------

where @xmath , @xmath , @xmath ; @xmath , @xmath , @xmath , @xmath ,
@xmath , @xmath , are the Jacobian matrices calculated at @xmath .
Obtaining the linear DAE system ( 2.3 ) from ( 2.1 ) is straightforward,
by considering Taylor’s expansion and ignoring all derivative terms of
order higher than one. System ( 2.3 ) is an autonomous linear system,
i.e. the elements of the Jacobian matrices are not functions of time
@xmath . This system can be rewritten in the following form:

  -- -------- -- -------
     @xmath      (2.4)
  -- -------- -- -------

where

  -- -------- --
     @xmath   
  -- -------- --

In the special case of ( 2.2 ), system ( 2.3 ) takes the following
explicit DAE form:

  -- -------- -------- -- -------
     @xmath   @xmath      (2.5)
  -- -------- -------- -- -------

In this case, matrix @xmath has the diagonal form:

  -- -------- --
     @xmath   
  -- -------- --

#### 2.3.2 ODE Formulation

Under the assumption that @xmath is not singular, system ( 2.5 ) can be
reduced to a system of ODE s , by eliminating the deviations of the
algebraic variables. Rewrite ( 2.5 ) as:

  -- -------- -------- -- -------
     @xmath   @xmath      (2.6)
     @xmath   @xmath      (2.7)
  -- -------- -------- -- -------

Solving ( 2.7 ) for @xmath yields:

  -- -------- -------- -- -------
     @xmath   @xmath      (2.8)
  -- -------- -------- -- -------

Substitution of ( 2.8 ) in ( 2.6 ) leads to the following linear system:

  -- -------- -- -------
     @xmath      (2.9)
  -- -------- -- -------

where @xmath , @xmath , are the state matrix and input matrix,
respectively, of the ODE system. System ( 2.9 ) is the model
conventionally used in power system SSSA .

In general, ( 2.9 ) (or ( 2.3 )) can be employed to accurately assess
the small-signal stability of the non-linear power system model ( 2.1 ).
An exception occurs at points where the system undergoes structural
changes, e.g. at bifurcation points, where linearization as a technique
to assess the stability of equilibria is inconclusive and where, thus,
the non-linear dynamics of the system must be taken into account.

### 2.4 Linear System of Differential Equations

#### 2.4.1 Formulation

The properties of a linearized power system model can be systematically
studied using theory of linear differential equations. To this aim, this
section considers the following system:

  -- -------- -- --------
     @xmath      (2.10)
  -- -------- -- --------

where @xmath , @xmath .

Matrix @xmath in ( 2.10 ) can be:

-   non-singular, i.e. @xmath . This is the case of the ODE power system
    model ( 2.9 ). In particular, ( 2.9 ) can be obtained from ( 2.10 )
    for @xmath , @xmath , @xmath , @xmath , @xmath .

-   singular, i.e. @xmath . This is the case of the DAE power system
    model ( 2.3 ). In particular, ( 2.3 ) can be obtained from ( 2.10 )
    for @xmath , @xmath , @xmath , @xmath , @xmath .

In case that @xmath in ( 2.10 ) is a singular matrix, system ( 2.10 ) is
called a singular system of differential equations. Singular systems are
relevant in many fields of engineering, such as automatic control,
circuits, and robotic systems [ Dai , Lew , Du ] . Note that, the theory
of singular systems of differential equations involves a class of
systems that is more general than ( 2.10 ), e.g. it includes systems
with non-square matrices. However, for the needs of this thesis, it is
adequate to study systems in the form of ( 2.10 ). The reader interested
in a comprehensive theory on singular systems of differential equations
may refer to [ gantmacher:59 ] , while some applications of that theory
to power systems can be found in [ book:eigenvalue , moebius ,
dassios:robust ] .

This section studies next some important properties of system ( 2.10 ),
and in particular, defines its matrix pencil, discusses existence and
uniqueness of its solutions, and provides the conditions for its
stability.

#### 2.4.2 Matrix Pencil

Applying the Laplace transform to ( 2.10 ), one gets:

  -- -------- -- --------
     @xmath      (2.11)
  -- -------- -- --------

where @xmath denotes the complex Laplace variable. Employing Laplace
transform properties, one has:

  -- -------- -- --------
     @xmath      (2.12)
  -- -------- -- --------

or, equivalently,

  -- -------- -- --------
     @xmath      (2.13)
  -- -------- -- --------

The structure of the polynomial matrix @xmath , hereafter referred as
the matrix pencil of system ( 2.10 ), defines the existence of solutions
and the stability properties of ( 2.10 ).

This thesis considers only matrix pencils that are regular , i.e. the
associated matrices are square and, in addition, @xmath , where @xmath
is a polynomial of @xmath of degree @xmath . This is, in fact, the form
of matrix pencils that most commonly appear for the purpose of power
system SSSA .

#### 2.4.3 Solutions \remark

( Existence of Solutions ). Consider system ( 2.10 ) with @xmath . Then,
@xmath is invertible and ( 2.13 ) can always be solved for @xmath as:

  -- -------- --
     @xmath   
  -- -------- --

Consequently, a solution @xmath always exists and is given by:

  -- -- -- --------
           (2.14)
  -- -- -- --------

\remark

( Uniqueness of Solutions ). There are two types of initial conditions
(0): consistent and non-consistent . If @xmath is non-singular, then for
any given initial conditions the solution is unique. However, it is not
guaranteed that for given initial conditions a singular system with a
regular pencil has a unique solution. In this case, if the given initial
conditions are consistent, then the solution is unique. Otherwise, there
are infinitely many solutions, the general solution ( 2.14 ) holds for
@xmath and the system is called impulsive .

#### 2.4.4 Eigenvalue Problem

##### 2.4.4.1 Formulation

The stability of ( 2.10 ) can be assessed by calculating its
eigenvalues, which are defined as the roots of the characteristic
equation :

  -- -------- -- --------
     @xmath      (2.15)
  -- -------- -- --------

where @xmath is called the characteristic polynomial of system ( 2.10 ).
In general, analytical solution of ( 2.15 ) is possible only if @xmath .
For higher degrees, general formulas do not exist and only the
application of a numerical method is possible. In addition, algorithms
that explicitly determine the characteristic polynomial @xmath and then
numerically calculate its roots, may be extremely slow even for small
problems. Alternatively, the eigenvalues of @xmath can be found from the
solution of the GEP :

  -- -------- -------- -------- --------
     @xmath   @xmath            (2.16)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath and @xmath . Every value of @xmath that satisfies ( 2.16 )
is an eigenvalue of the pencil @xmath , with the vectors , being the
corresponding right and left eigenvectors, respectively. Thus, the
solution of the GEP consists in calculating the eigenpairs,
i.e. eigenvalues and eigenvectors, that satisfy ( 2.16 ). Depending on
the analysis that needs to be carried out, it may be required that only
right (or left) or both right and left eigenvectors are calculated. In
general, the pencil @xmath has @xmath finite eigenvalues and the
infinite eigenvalue with multiplicity @xmath . Note that, unless
otherwise stated, when this thesis refers to infinite eigenvalues, it
implies eigenvalues that are at infinity and not infinitely many. Note
also that, if @xmath is singular, the pencil will have the infinite
eigenvalue with multiplicity at least one.

In the special case that the left-hand side matrix of ( 2.10 ) is the
identity matrix (as is the case of system ( 2.9 )), ( 2.16 ) is
equivalent to the LEP :

  -- -------- -------- -------- --------
     @xmath   @xmath            (2.17)
              @xmath   @xmath   
  -- -------- -------- -------- --------

Every value of @xmath that satisfies ( 2.17 ) is an eigenvalue of the
pencil @xmath , with the vectors , being the corresponding right and
left eigenvectors, respectively. Thus, the solution of the LEP consists
in calculating the eigenvalues and eigenvectors of @xmath . In
particular, the pencil @xmath , has @xmath finite eigenvalues.

##### 2.4.4.2 Properties \remark

( Jordan Decomposition ). Consider the pencil @xmath , with @xmath .
There exist non-singular matrices , @xmath such that [ gantmacher:59 ] :

  -- -------- -------- -------- --------
     @xmath   @xmath            (2.18)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath ; @xmath , @xmath , is constructed by the @xmath finite
eigenvalues @xmath , and their multiplicities, and has the Jordan
canonical form [ gantmacher:59 ] ; @xmath , @xmath , is a nilpotent
matrix with index @xmath , constructed by using the algebraic
multiplicity @xmath of the infinite eigenvalue. Alternatively, the
matrix @xmath can be perceived as the Jordan matrix of the zero
eigenvalue of the dual pencil @xmath , where @xmath .

The following notation is used:

  -- -------- --
     @xmath   
  -- -------- --

with @xmath , @xmath and @xmath , @xmath . @xmath is a matrix with rows
@xmath linear independent left eigenvectors (including the generalized)
of the @xmath finite eigenvalues of @xmath ; @xmath is a matrix with
rows @xmath linear independent (including the generalized) left
eigenvectors of the infinite eigenvalue of @xmath with algebraic
multiplicity @xmath ; @xmath is a matrix with columns @xmath linear
independent (including the generalized) right eigenvectors of the @xmath
finite eigenvalues of @xmath ; and @xmath is a matrix with columns
@xmath linear independent (including the generalized) right eigenvectors
of the infinite eigenvalue of @xmath with algebraic multiplicity @xmath
. By applying the above expressions into ( 2.10 ), one gets the
following eight equalities:

  -- -------- --
     @xmath   
  -- -------- --

\theorem

Consider system ( 2.10 ) with a regular pencil. Then the general
solution of ( 2.10 ) is given by:

  -- -------- -- --------
     @xmath      (2.19)
  -- -------- -- --------

where @xmath is constant vector and @xmath is the matrix exponential of
@xmath .

The proof of Theorem 2.19 is given in Appendix A .

#### 2.4.5 Stability \definition

( Asymptotic stability ) Consider an autonomous non-linear system @xmath
with equilibrium @xmath . Then, the equilibrium @xmath is said to be
asymptotically stable if there exists @xmath such that if @xmath , then
@xmath .

Simply put, asymptotic stability implies that solutions starting close
enough to the equilibrium will eventually converge to it. Asymptotic
stability of equilibria is a local property for non-linear systems. On
the other hand, for linear systems, asymptotic stability is a global
property, which means that the solution will eventually converge to the
equilibrium for any given initial condition. In this case, applying the
above definition to the general solution ( 2.19 ) of system ( 2.10 ),
yields that stability is guaranteed if and only if no element of the
matrix exponential @xmath goes to infinity, when @xmath , which, in
turn, leads to the following well-known stability criterion.

\definition

System ( 2.10 ) is said to be asymptotically stable if all finite
eigenvalues @xmath of its matrix pencil @xmath satisfy:

  -- -------- -- --------
     @xmath      (2.20)
  -- -------- -- --------

The stability condition ( 2.20 ) can be also obtained using Lyapunov
stability theory [ TAKABA199549 , ishihara:02 ] . In particular,
condition ( 2.20 ) is equivalent to considering the Lyapunov function:

  -- -------- -- --------
     @xmath      (2.21)
  -- -------- -- --------

with @xmath symmetric and positive definite, and

  -- -------- -- --------
     @xmath      (2.22)
  -- -------- -- --------

negative definite. If such a matrix @xmath exists, then ( 2.10 ) is
asymptotically stable and, hence, also Lyapunov stable.

Finally, calculation of eigenvalues allows measuring the characteristics
of the most critical or dominant for the stability dynamic modes on the
system. In particular, the damping ratio and natural frequency of a
dynamic mode are defined as follows.

\definition

Let @xmath be a finite, complex eigenvalue of @xmath . The damping ratio
and the natural frequency of @xmath are defined as follows:

  -- -------- -------- -- --------
     @xmath   @xmath      (2.23)
     @xmath   @xmath      (2.24)
  -- -------- -------- -- --------

The power system is said to be well-damped, if for all eigenvalues
@xmath , the damping ratio is higher than a threshold, typically @xmath
.

### 2.5 Numerical Methods

#### 2.5.1 Eigenvalue Algorithms

There is a rich literature on numerical algorithms that compute the full
or a partial solution of a given LEP or GEP . Relevant monographs on the
topic are, for example, [ saad:2011 ] and [ kressner ] . However, not
all available algorithms are suitable for SSSA of power systems. The
vast majority of numerical algorithms, in fact, solve exclusively
symmetric eigenvalue problems. Such algorithms are, for example, the
ones described in [ Sorensen , LOBPCG ] . However, the matrices that
describe a linearized power system model are typically non-symmetric.
Compared to symmetric problems, non-symmetric eigenvalue problems are
more difficult and computationally demanding to solve.

The scalability of the numerical solution of eigenvalue problems is also
very important since, real-world power networks are large-scale dynamic
systems. Unfortunately, the most reliable methods to find the full
spectrum of an eigenvalue problem are dense-matrix methods, and their
computational complexity and memory requirements increase more than
quadratically (in some cases even cubically) as the size of the matrix
increases. This is further discussed in Section 2.5.4 . Even using
sparse matrices and limiting the search to a subset of the spectrum, the
solution of large-scale power system eigenvalue problems is challenging.

A coarse taxonomy of existing algorithms for the solution of
non-symmetric eigenvalue problems is as follows: vector iteration
methods, Schur decomposition methods, Krylov subspace methods, and
contour integration methods.

Vector iteration methods are in turn separated to single and
simultaneous vector iteration methods. Single vector iteration methods
include the power method and its variants, such as the inverse power and
Rayleigh quotient iteration. Simultaneous vector iteration methods
include the subspace iteration method [ subspace ] and its variants,
such as the inverse subspace method.

Schur decomposition methods mainly include the QR algorithm [ Francis ]
, the QZ algorithm [ molerqz ] , and their variants, such as the QR
algorithm with shifts. Schur decomposition based methods have been the
standard methods employed for the eigenvalue analysis of small to medium
size power systems [ kundur:1990 , dual:17 ] .

Krylov subspace methods basically include the Arnoldi iteration [
Arnoldi ] and its variants, such as the implicitly restarted Arnoldi [
Lehoucq ] and the Krylov-Schur method [ KrylovSchur ] . In this category
belong also preconditioned extensions of the Lanczos algorithm, such as
the non-symmetric versions of the Generalized Davidson and
Jacobi-Davidson method.

Finally, contour integration methods include a moment-based Hankel
method [ sakurai1 ] and a Rayleigh-Ritz-based projection method [
sakurai2 ] proposed by Sakurai; and the FEAST algorithm [ polizzifeast ]
.

#### 2.5.2 Open-Source Libraries

Available free and open-source software libraries that solve
non-symmetric eigenvalue problems are a small subset of all existing
eigensolvers. This section provides an overview of the open-source
solvers that implement state-of-art numerical algorithms for
non-symmetric eigenvalue problems [ app10217592 ] . These are LAPACK,
ARPACK, Anasazi, SLEPc, FEAST and z-PARES.

LAPACK [ lapack ] is a standard library aimed at solving problems of
numerical linear algebra, such as systems of linear equations and
eigenvalue problems. A large part of the computations required by the
routines of LAPACK are performed by calling the BLAS [ blas ] . As an
eigensolver, LAPACK includes the QR and QZ algorithms. Although it
cannot handle general sparse matrices, LAPACK is functional with dense
matrices and, in fact, is the standard dense matrix data interface used
by all other eigenvalue libraries. A powerful GPU-based implementation
of LAPACK routines is provided by MAGMA which, for general non-symmetric
matrices, supports only the solution of the LEP .

ARPACK [ arpack ] is a library developed for solving large eigenvalue
problems with the IR-Arnoldi method. ARPACK depends on a number of
subroutines from LAPACK/BLAS. An important feature of ARPACK is the
support of a Reverse Communication Interface ( RCI ), which provides to
the user the freedom to customize the matrix data format as desired. An
implementation of ARPACK for parallel computers is provided by PARPACK.
The message parsing layers supported by PARPACK are Message Passing
Interface ( MPI ) [ mpi ] and BLACS.

Anasazi [ anasazi ] is a library that implements block versions of both
symmetric and non-symmetric algorithms for the solution of large-scale
eigenvalue problems. Regarding non-symmetric problems, it provides a
block extension of the Krylov-Schur method and the Generalized Davidson
( GD ) method. Anasazi depends on Trilinos [ trilinos ] and uses LAPACK
as an interface for dense matrix and Epetra as an interface for sparse
Compressed Sparse Row ( CSR ) matrix formats.

SLEPc [ slepc ] is a library that includes a variety of symmetric and
non-symmetric methods, for the solution of large sparse eigenproblems.
For non-symmetric problems, it provides the following methods:
power/inverse, power/Rayleigh quotient in a single implementation;
subspace iteration with Rayleigh-Ritz projection and locking; Explicitly
Restarted and Deflated ( ERD ) Arnoldi; Krylov-Schur; GD;
Jacobi-Davidson ( JD ); Contour Integration with Hankel matrices ( CIH )
and Contour Integration with Rayleigh-Ritz ( CIRR ) methods. SLEPc
depends on PETSc [ petsc ] and employs LAPACK as an interface for dense
matrix, MUMPS [ MUMPS ] as an interface for sparse CSR matrix formats
and supports custom data formats, enabled by RCI .

FEAST [ feast_guide ] is the eigensolver that implements the FEAST
algorithm, first proposed in [ polizzifeast ] . It depends on LAPACK as
an interface for dense matrix, on SPIKE as an interface for banded
matrix and on MKL-PARDISO [ pardiso ] for sparse CSR matrix formats. In
addition, FEAST includes RCI and thus, data formats can be customized by
the user. Using the sparse interface requires linking FEAST with Intel
MKL. Finally, FEAST includes parallel implementations which support
3-Level MPI message parsing layer.

z-PARES [ zpares_guide ] is a complex moment-based contour integration
eigensolver for GEP s that implements the CIH , and CIRR methods to find
the eigenvalues (and corresponding eigenvectors) that lie into a contour
path defined by the user. The library depends on LAPACK for dense
matrices, on MUMPS for sparse CSR matrices, while it supports custom
data formats, enabled by RCI . Moreover, z-PARES includes a parallel
version, which exploits 2-Level MPI layer and employs MUMPS as its
sparse solver.

Tables 2.1 and 2.2 provide a synoptic summary of the methods and
relevant features of open-source libraries that solve non-symmetric
eigenvalue problems. As it can be seen from Table 2.2 , all libraries
can handle both real and complex arithmetic types. On the other hand,
not all libraries are 2-sided, i.e provide algorithms that allow
calculating both left and right eigenvectors at once.

#### 2.5.3 Spectral Transforms

In general, solving the eigenvalue problem involves finding the full or
partial spectrum of the pencil @xmath . However, depending on the
applied numerical method as well as on the structure of the system
matrices, it is common that the eigenvalues are not found by using
directly @xmath , but through the pencil that arises after the
application of a proper spectral transform. Spectral transforms are
utilized by eigenvalue numerical methods to find the eigenvalues of
interest, address a singularity issue, or accelerate convergence.

The Möbius transformation, which is a general variable transformation
that includes as special cases all spectral transforms used in practice
by eigenvalue algorithms, is discussed here. The formulation of the
Möbius transformation is:

  -- -------- -- --------
     @xmath      (2.25)
  -- -------- -- --------

Applying the transform ( 2.25 ) in ( 2.15 ) one has

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently, by using determinant properties

  -- -- --
        
  -- -- --

or, equivalently,

  -- -------- --
     @xmath   
  -- -------- --

which is the characteristic equation of the linear dynamical system

  -- -------- -- --------
     @xmath      (2.26)
  -- -------- -- --------

with pencil @xmath . System ( 2.10 ) will be referred as the prime
system, and the family of systems ( 2.26 ) will be defined as the proper
“M-systems”. An important property is that the solutions and stability
properties of system ( 2.10 ) can be studied through ( 2.26 ) without
resorting to any further computations, see [ moebius ] . The utilities
of the family of systems of type ( 2.26 ) have been further emphasized
by the features of some particular special cases. The most commonly
employed Möbius transforms and the corresponding matrix pencils for the
GEP are summarized in Table 2.3 . The values of the parameters @xmath
that lead to each of these transforms are given in Table 2.4 . In case
that @xmath , the Cayley transform is equivalent to the bilinear
transform @xmath , where @xmath . Finally, the selection of the best
transform for a specific system and eigenvalue problem is a challenging
task to solve, since the selection of shift values is, ultimately,
heuristic.

#### 2.5.4 Computational Complexity

The computational complexity of an eigenvalue algorithm is in general
dependent upon the particular implementation provided by a given
software library. However, library manuals typically do not detail their
memory and computational requirements, and thus to provide a systematic
and precise comparison with this regard is not a trivial task. Yet, for
an eigenvalue problem with a pencil of size @xmath , one may provide a
rough summary of the costs associated to a generic algorithm that
searches for @xmath eigenvalues. That is, the algorithm:

-   constructs a subspace of order @xmath associated to the eigenvalue
    problem ⁵ ⁵ 5 Note this is a rough estimation. In order to
    accurately capture @xmath eigenvalues, practical algorithms often
    work with subspaces of size that is larger than @xmath , thus
    increasing the overall computational cost. . A basis of the
    subspace, that is @xmath vectors of size @xmath , needs to be
    stored.

-   carries out computations to guarantee that the basis vectors of the
    subspace are orthogonal. The associated cost of such computations is
    @xmath .

-   projects the matrix pencil to the subspace which yields a reduced
    eigenvalue problem with a pencil of size @xmath . The dense matrices
    of dimensions @xmath that comprise this pencil need to be stored.

-   solves the projected dense eigenvalue problem. This problem is
    typically solved using QR factorization, with an associated cost of
    @xmath .

The total computational cost sums to @xmath . For a dense matrix method,
i.e. the QR algorithm and its variants, a complete basis of vectors is
used, which yields a computational complexity of @xmath . It follows
that the cost of the resources required to solve a very large problem
using a dense-matrix algorithm is very high. As a matter of fact, the
largest ever eigenvalue analysis with a dense algorithm to date was the
solution of a @xmath problem in about 1 h, and it was carried out in
2014 by the Japanese K computer in Riken. To be able to obtain this
result, the K computer includes @xmath processors that draw a peak power
of @xmath MW, while its operation costs annually US$10 million.

The computational burden associated to the numerical algorithms and
open-source libraries described in this thesis is further discussed
through numerical simulations in the case study of Section 2.6 .

### 2.6 Case Studies

In this section simulation results are presented based on two real-world
size power system models. The first system is a detailed model of the
AIITS which includes @xmath state variables and @xmath algebraic
variables. The second system is a dynamic model of the ENTSO-E system,
which includes @xmath state variables and @xmath algebraic variables.
The versions and dependencies of the open-source libraries considered in
this section are summarized in Table 2.5 . Note that this section
considers only the open-source libraries that were successfully compiled
and installed on Linux and Mac OS X operating systems and that worked
for relatively “large” eigenvalue problems.

All simulations are obtained using Dome [ vancouver ] . The Dome version
utilized for this chapter is based on Fedora Linux 28, Python 3.6.8,
CVXOPT 1.1.9 and KLU 1.3.9. Regarding the computing times reported in
both examples, two comments are relevant. First, all simulations were
executed on a server mounting two quad-core Intel Xeon 3.50 GHz CPUs, 1
GB NVidia Quadro 2000 GPU, 12 GB of RAM, and running a 64-bit Linux OS.
Second, since, not all method implementations include 2-sided versions
and in order to provide as a fair comparison as possible, all
eigensolvers are called so as to return only the calculated eigenvalues
and not eigenvectors.

#### 2.6.1 All-Island Irish Transmission System

This case study considers a real-world model of the AIITS . The topology
and the steady-state operation data of the system have been provided by
the Irish transmission system operator, EirGrid Group. Dynamic data have
been determined based on current knowledge about the technology of the
generators and the controllers. The system consists of 1,479 buses, 796
lines, 1,055 transformers, 245 loads, 22 synchronous machines, with
Automatic Voltage Regulators and Turbine Governors , 6 PSS s and 176
wind generators. In total, the dynamic model has @xmath state variables
and @xmath algebraic variables. The map of the AIITS is given in
Appendix B .

Results of the eigenvalue analysis of the AIITS are discussed for both
LEP and GEP and for a variety of different numerical methods, namely, QR
and QZ algorithms by LAPACK, GPU-based QR algorithm by MAGMA, subspace
iteration, ERD -Arnoldi and Krylov-Schur methods by SLEPc, IR-Arnoldi by
ARPACK; and CIRR by z-PARES.

The results obtained with Schur decomposition methods are presented in
Table 2.7 . Both QR and QZ algorithms find all @xmath finite eigenvalues
of the system. For the GEP , the QZ algorithm also finds the additional
infinite eigenvalue with its algebraic multiplicity. The obtained
rightmost eigenvalues are the same for both LEP and GEP . Since LAPACK
is the most mature software tool among those considered in this section,
the accuracy of the eigenvalues found with all other libraries is
evaluated by comparing them with the reference solution computed with
LAPACK. The system root loci plot is shown in Figure 2.1 . Regarding the
computational time, it is seen that, for the LEP , both LAPACK and the
GPU-based MAGMA are very efficient at this scale, with MAGMA providing
only a marginal speedup. On the other hand, when it comes to solving the
GEP with LAPACK’s QZ method, scalability becomes a serious issue.

Figures 2.2 and 2.3 show the spectrum of the AIITS system for a couple
of common special Möbius transforms, in particular for the shift &
invert and the Cayley transform. In these figures, @xmath denotes an
eigenvalue of the transformed pencil. These results refer to the LEP ,
and are obtained using LAPACK. In each figure, the stable region is
shaded, while the stability boundary is indicated with a solid line. The
@xmath % damping boundary is indicated with a dash-dotted line. For the
shift & invert transform, the stability boundary is defined by the
circle with center @xmath and radius @xmath . If @xmath , that is the
case of Figure 2.2 , stable eigenvalues are mapped outside the circle.
On the other hand, if @xmath , stable eigenvalues are mapped inside the
circle. If @xmath , the dual pencil is obtained with the corresponding
invert transform, and the stable region is the full negative right have
plane. Finally, Figure 2.3 shows the image of the Cayley transform of
the AIITS for @xmath . All stable eigenvalues are located inside the
unit circle with center the origin.

The implementation of the subspace iteration by SLEPc only finds the
desired number of LM eigenvalues. However, in the @xmath -domain, the
relevant eigenvalues from the stability point of view are not the LM
ones, but the ones with Largest Real Part ( LRP ) or Smallest Magnitude
( SM ). Especially for the GEP , the Largest Magnitude ( LM ) eigenvalue
is infinite and, hence, does not provide any meaningful information on
the system dynamics. For this reason and for the needs of power system
SSSA , the subspace method and, in general, any method that looks for LM
eigenvalues, must always be combined with a spectral transform. For the
needs of this example, the invert transform is applied and the pencil of
the dual system, i.e. @xmath , is passed to SLEPc. Then, the method
looks for the 50 LM eigenvalues of the dual system, which correspond to
the 50 SM eigenvalues of the prime system. With this setup, the
eigenvalues found by the subspace iteration for the GEP are shown in
Table 2.8 . As it can be seen, the pair @xmath is not captured, since
its magnitude is larger than the magnitudes of the 50 SM eigenvalues. To
obtain also this pair, one can customize the spectral transform or
simply increase the number of the eigenvalues to be returned. However,
the best setup is not known a priori and thus, some heuristic parameter
tuning is required. Finally, the method does not scale well, since
solution of the GEP is completed in @xmath s.

The rightmost eigenvalues found with Krylov subspace methods for the LEP
and GEP are shown in Table 2.9 and Table 2.10 , respectively. For the
LEP , ARPACK is set up to find the @xmath LRP eigenvalues. Although all
eigenvalues shown in Table 2.9 for ARPACK are actual eigenvalues of the
system, some of the LRP ones are missed. Furthermore, no correct
eigenvalues were found for the GEP , since a non-symmetric @xmath is not
supported. In SLEPc methods, both for LEP and GEP and in order to obtain
the eigenvalues with good accuracy, the option “Target Real Part” (TRP)
is used, which allows targeting eigenvalues with specified real part. In
particular, the TRP parameter is set to @xmath , and a shift & invert
transform with @xmath is applied. Both ERD -Arnoldi and Krylov-Schur
methods are able to accurately capture all rightmost eigenvalues. Note
that, the eigenvalues obtained with SLEPc, when compared to the ones
found by LAPACK, appeared to be shifted by a constant offset @xmath ,
i.e. @xmath was returned instead of @xmath , and so on. The results
shown in Table 2.9 and Table 2.10 take into account such a shift by
adding @xmath to all output values returned by SLEPc. Finally, the
Krylov subspace methods by SLEPc appear to be more efficient than
ARPACK’s IR-Arnoldi. Compared to Schur decomposition methods, at this
scale, Krylov methods, although they require some tuning, appear to be
by far more efficient for the GEP , but less efficient for the LEP .

The results obtained with z-PARES’ CIRR method are presented in Table
2.11 and Figure 2.4 . The method is set to look for solutions in the
circle with center the point @xmath and radius @xmath . In both cases,
the eigenvalues found by z-PARES are actual eigenvalues of the system,
although the eigenvalues found for the GEP include noticeable errors,
when compared to the results obtained with LAPACK.

The most relevant issue is that the eigenvalues obtained with z-PARES
are not the most important ones for the stability of the system, which
means that critical eigenvalues are missed. This issue occurs despite
the defined search contour being reasonable. Of course, there may be
some region for which the critical eigenvalues are captured but, this
can not be known a priori . Regarding the simulation time, the method
for the AIITS is faster than SLEPc’s Krylov subspace methods for the LEP
, but slower for the GEP . The search contour and the location of the
characteristic roots found by z-PARES for the LEP are depicted in Figure
2.4 .

#### 2.6.2 21,177-bus ENTSO-E

This example presents simulation results for a dynamic model of the
ENTSO-E . The system includes @xmath buses ( @xmath off-line); @xmath
transmission lines and transformers ( @xmath off-line); @xmath
zero-impedance connections ( @xmath off-line); @xmath power plants
represented by @xmath -th order and @xmath -nd order synchronous machine
models; and @xmath loads ( @xmath off-line), modeled as constant active
and reactive power consumption. Synchronous machines represented by
@xmath -th order models are also equipped with dynamic AVR and TG
models. The system also includes @xmath PSS s .

As summarized in Table 2.12 , the system has in total @xmath state
variables and @xmath algebraic variables. The pencil @xmath has
dimensions @xmath and the matrix @xmath has @xmath non-zero elements,
which represent the @xmath of the total number of elements of the
matrix.

Neither the LEP or GEP could be solved using Schur decomposition
methods. At this scale, the dense matrix representation required by
LAPACK and MAGMA leads to massive memory requirements, and a
segmentation fault error is returned by the CPU. Among the algorithms
that support sparse matrices, only z-PARES is tested. This, in fact, was
the library that was able to tackle this large problem on the available
hardware.

The effect of changing the search region of z-PARES’ CIRR method on the
eigenvalue analysis of the ENTSO-E is shown in Table 2.13 .
Interestingly, simulations showed that shrinking the defined contour may
lead to a marginal increase of the computation time. Although not
intuitive, this result indicates that the mass of the computational
burden is mainly determined by the large size of the ENTSO-E , and that,
at this scale, smaller subspaces are not necessarily constructed faster
by the CIRR algorithm. Regarding the number of eigenvalues obtained,
using a region that is too small leads, as expected, to missing an
important number of critical eigenvalues.

The impact of applying spectral transforms to the matrix pencil @xmath
is examined. In particular, two transforms are tested. The invert
transform, which yields the dual pencil @xmath ; and the inverted Cayley
transform, i.e. @xmath , which yields the pencil @xmath . The results
are shown in Table 2.14 . Passing the transformed matrices to z-PARES
provides a marginal speedup to the eigenvalue computation. In addition,
considering either the prime system or the inverted Cayley transform
with @xmath , results in finding the same number of eigenvalues, whereas
when the dual system is considered a number of eigenvalues is missed.

### 2.7 Concluding Remarks

This chapter provides fundamental concepts of power system SSSA and
linear systems of differential equations that are employed throughout
the thesis.

The chapter also provides a comprehensive comparison of state-of-art
software implementations for the numerical solution of the eigenvalue
problems that arise in power systems. With this regard, the following
discussion is relevant.

The main disadvantage of dense matrix methods is that they are
computationally expensive. In addition, they generate complete fill-in
in general sparse matrices and therefore, cannot be applied to large
sparse matrices simply because of massive memory requirements. Even so,
LAPACK is the most mature among all computer-based eigensolvers and, as
opposed to basically all sparse solvers, requires practically no
parameter tuning. For small to medium size problems, the QR algorithm
with LAPACK remains the standard and most reliable algorithm for finding
the full spectrum for the conventional LEP .

As for sparse matrix methods, convergence of vector iteration methods
can be very slow, and thus in practice, if not completely avoided, these
algorithms should be used only for the solution of simple eigenvalue
problems. With regard to Krylov subspace methods, the main shortcoming
of ARPACK’s implementation is the lack of support for general,
non-symmetric left-hand side coefficient matrices, which is the form
that commonly appears when dealing with the GEP of large power system
models. On the other hand, the implementations of ERD -Arnoldi and
Krylov-Schur by SLEPc do not have this limitation and exploit
parallelism while providing good accuracy, although some parameter
tuning effort is required. In addition, for the scale of the AIITS
system and for the GEP , these methods appear to be by far more
efficient than LAPACK. Moreover, the implementation of contour
integration by z-PARES is very efficient and can handle systems at the
scale of the ENTSO-E . The most relevant issue for z-PARES is that,
depending on the problem, it may miss some critical eigenvalues, despite
the defined search contour being reasonable. Although there may be some
parameter settings for which this problem does not occur, those cannot
be known a priori .

## Chapter 3 Participation Factors

### 3.1 Introduction

Modal participation analysis was first introduced by Pérez-Arriaga et
al. in [ arriaga:82_1 ] and [ arriaga:82_2 ] . These studies employed
the analytical solution that determines the time response of a linear
time-invariant dynamic system and applied initial conditions appropriate
to define the relative contribution of a system state in a dynamic mode
and vice versa . Participation Factors were introduced as an approach to
selective modal analysis. They have been also utilized in model
reduction [ book:chow:13 ] , as well as in control signal and input
placement selection [ hsu:87 ] . The properties of PF s were summarized
and extended in [ garofal:O2 ] . In [ abed:00 , abed:09 ] , the authors
studied the effect of the uncertainty in the initial conditions in the
definition of the PF s . Nowadays, PF s are considered a fundamental
tool for power system SSSA . Recent efforts have focused on the modal
participation analysis of non-linear systems [ tian:18 , mili:19 ] .

Dominant states in lightly damped modes of power systems are typically
the synchronous machine rotor angles and speeds. The state variables of
poorly tuned controllers, e.g. the AVR s and PSS s , can also show high
PF s in critical modes. Nevertheless, measurement units installed on the
transmission system buses provide information on the local voltage,
frequency and active and reactive power flows, which in angle and
voltage stability studies are modeled as algebraic variables [ milano:10
] . Moreover, these quantities are typically utilized by Flexible AC
Transmission System ( FACTS ) devices as signals for the implementation
of various controllers including Power Oscillation Damper ( POD ) [
abbsvc ] .

This chapter provides a tool to study how algebraic variables are
coupled with power system dynamic modes. It is precisely recognized that
the algebraic variables of a set of DAE s can be interpreted as
functions of the state variables and, in turn, as outputs of the
state-space representation of the power system model. Until now,
algebraic variables were mostly interpreted either as constraints and
thus eliminated when calculating the state matrix of the system; or as
states with infinitely fast dynamics and, as such, their PF s to system
modes were considered to be null. The focus is on the PF s of bus
voltages, frequencies, and power injections; Rate of Change of Frequency
( RoCoF ) of synchronous machines; Center of Inertia ( CoI ) speed of
different areas; and any system parameters. However, the formulation
provided in this chapter is general and can be extended to any
non-linear function of the system states and algebraic variables.

The remainder of the chapter is organized as follows. Section 3.2
describes the classical modal participation analysis of a power system
model. Section 3.3 provides a new interpretation of the PF s as
eigen-sensitivities – which is derived from the partial differentiation
of the analytical solution of the linearized power system around a valid
equilibrium point – and provides their formulation for a singular
dynamical system with eigenvalue multiplicities. Based on this
interpretation, the proposed approach to measure the participation of
algebraic variables and, in general, of any function of the variables in
power system modes is presented in Section 3.4 . The case studies are
discussed in Section 3.5 . Finally, conclusions are drawn in Section 3.6
.

### 3.2 Classical Participation Factors

#### 3.2.1 Definition

Consider the following system of ODE s :

  -- -------- -- -------
     @xmath      (3.1)
  -- -------- -- -------

where @xmath is the vector of state variables and @xmath is the state
matrix. System ( 3.1 ) can be obtained from ( 2.10 ) for @xmath and by
assuming that no inputs are included.

Let @xmath be an eigenvalue of @xmath and all eigenvalues be distinct,
i.e. @xmath , @xmath , and @xmath . Let also @xmath , @xmath be the
right and left eigenvectors associated to @xmath , respectively. The PF
is defined as the following dimensionless number:

  -- -------- -- -------
     @xmath      (3.2)
  -- -------- -- -------

where @xmath is the @xmath -th row element of @xmath and @xmath is the
@xmath -th column element of @xmath .

The right and left eigenvectors are usually normalized so that the sum
of all PF s that correspond to the same eigenvalue equals to @xmath [
arriaga:82_1 ] . However, this is not always the case [ pal:16 ] . In
addition, the PF s of a system are typically collected to form the
participation matrix , which is defined as follows:

  -- -------- -- -------
     @xmath      (3.3)
  -- -------- -- -------

where @xmath denotes the Hadamard product, i.e. the element-wise
multiplication; and , , are the right and left modal matrices ,
respectively. That is, the columns of are the right eigenvectors @xmath
and the rows of are the left eigenvectors @xmath .

#### 3.2.2 Residues

The PF @xmath in ( 3.2 ) basically expresses the relative contribution
of @xmath in the structure of the eigenvalue @xmath , and vice versa ,
but has also various other interpretations. It is also known to
represent the sensitivity of an eigenvalue to variations of an element
of the state matrix [ arriaga:89 ] and it has been also viewed as modal
energy in the MacFarlane sense [ hamdan:86 ] .

In the state space representation, PF s can be studied as an important
case of residue analysis of the system transfer function and thus, as
joint observabilities/controllabilities of the geometric approach, which
play an important role during the design of control systems [ hamdan:87
, garofal:O2 ] . Consider the following single-input single-output
system:

  -- -------- -------- -------- -------
     @xmath   @xmath            (3.4)
              @xmath   @xmath   
  -- -------- -------- -------- -------

where @xmath is the column vector of the input ; @xmath is the row
vector of the output @xmath . Then, the residue of the transfer function
of system ( 3.4 ) associated with the eigenvalue @xmath of the pencil
@xmath is given by:

  -- -------- -------- -- -------
     @xmath   @xmath      (3.5)
  -- -------- -------- -- -------

The PF of the @xmath -th state @xmath in @xmath can be viewed as the
residue of the transfer function of system ( 3.4 ) associated with
@xmath , when the input is a perturbation in the differential equation
that defines @xmath and the output is @xmath . Indeed, if

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

equation ( 3.5 ) becomes:

  -- -------- -------- -- -------
     @xmath   @xmath      (3.6)
  -- -------- -------- -- -------

In the case of a multiple-input multiple-output system, the PF s appear
as the diagonal elements of the emerging residue matrix. The ability to
calculate only a subset of all residue elements and acquire an
approximate but yet accurate measure of the contribution of system
states in system modes (and vice versa ), features the physical
importance and the computational efficiency of the PF s .

### 3.3 Generalized Participation Factors

#### 3.3.1 Formulation

From the definition of PF s given in ( 3.2 ), it follows that the main
assumptions of classical modal participation analysis are:

-   All eigenvalues are distinct.

-   The system is modeled as a set of ODE s , i.e. all eigenvalues are
    finite.

On the other hand, it is common in the simulation of dynamic models that
some eigenvalues are repeated. For small size systems, it may be
possible to avoid multiplicities, e.g. by perturbation of some
parameters. But this is impractical for real-world size systems.
Moreover, for large-scale systems, available algorithms are typically
able to find a partial solution only of the GEP and provided that the
matrices are sparse, which implies that the system is modeled as a set
of singular differential equations. Section 2.5 further elaborates on
this point.

This section presents an alternative interpretation of the PF s as
eigen-sensitivities. In the view of addressing the issues mentioned
above, the focus is on the modal participation analysis of a singular
system of differential equations with eigenvalue multiplicities. The
proposed approach requires the solution of the GEP , as opposed to the
conventional LEP , and thus fully exploits the sparsity of Jacobian
matrices [ dual:17 ] . This allows utilizing solvers for eigenvalue
analysis that scale well and are suitable for large real-world systems.
Finally, classical PF s are extracted from the provided formulation as a
special case.

Consider system ( 2.10 ) without any inputs, i.e.:

  -- -------- -- -------
     @xmath      (3.7)
  -- -------- -- -------

where @xmath , @xmath . From Theorem 2.19 , and by applying @xmath in (
2.19 ), the analytical solution of system ( 3.7 ) is:

  -- -------- -- -------
     @xmath      (3.8)
  -- -------- -- -------

In order to study the effects of eigenvalue multiplicities in ( 3.7 ), (
2.19 ) has to be rewritten so that the generalized eigenvectors appear
in the solution of the system explicitly [ pfactors2 ] .

Firstly, let:

-   @xmath be the number of Jordan blocks and @xmath , @xmath , be
    finite eigenvalue that corresponds to the @xmath -th Jordan block
    and @xmath be the rank of the block, where @xmath .

-   the infinite eigenvalue have algebraic multiplicity @xmath .

The following theorem is relevant.

\theorem

Consider system ( 3.7 ) with pencil @xmath and @xmath . . Let @xmath ,
@xmath , be a finite eigenvalue of the pencil, where @xmath is the
number of Jordan blocks. Let also @xmath be rank of the corresponding
Jordan block, @xmath , @xmath , and @xmath , @xmath , @xmath , denote
the @xmath -th right, left, linear independent (generalized)
eigenvectors corresponding to the eigenvalue @xmath , respectively. Then
[ tzou:pfactors ] :

1.  The solution of ( 3.7 ) with initial condition @xmath can be written
    as follows:

      -- -------- -- -------
         @xmath      (3.9)
      -- -------- -- -------

2.  Let @xmath be the @xmath -th element of @xmath . Then the
    participation of @xmath in @xmath , @xmath , is given by:

      -- -------- -- --------
         @xmath      (3.10)
      -- -------- -- --------

    where @xmath is the @xmath -th row element of the eigenvector @xmath
    .

The proof of Theorem 3.3.1 is given in Appendix A .

The following corollary is relevant.

\corollary

Consider system ( 3.7 ) with a regular pencil. Let the finite
eigenvalues be either distinct, or with algebraic multiplicity equal to
geometric, i.e. @xmath is the rank of corresponding Jordan block. Then
in Theorem 3.3.1 , one has @xmath , @xmath , and:

1.  The solution of ( 3.7 ) with initial condition @xmath is given by:

      -- -------- --
         @xmath   
      -- -------- --

2.  Let @xmath be the @xmath -th element of @xmath . Then the
    participation of the @xmath -th eigenvalue, @xmath , in @xmath ,
    @xmath , is given by:

      -- -------- -- --------
         @xmath      (3.11)
      -- -------- -- --------

    where @xmath is the @xmath -th row element of the eigenvector @xmath
    .

The following remarks are relevant.

\remark

Since only the finite eigenvalues appear in ( 3.9 ), the participation
matrix of system ( 3.7 ) has dimensions @xmath . Determining the PF s
associated with the infinite eigenvalue to obtain the full matrix is
possible by applying a spectral transform to system ( 3.7 ). In
particular, by applying @xmath into ( 3.7 ), one arrives at the dual
system @xmath . Let @xmath be the @xmath -th element of @xmath , and
@xmath be the @xmath -th element of @xmath . Then the participation of
the infinite eigenvalue of @xmath in @xmath , @xmath , is equal to the
participation of the zero eigenvalue of @xmath in @xmath , @xmath . This
is a direct result from the duality between ( 3.7 ) and its dual system,
or, additionally, between their pencils @xmath , and @xmath
respectively, see [ dual:17 ] . Note that this discussion, although
interesting from a mathematical viewpoint, is not of practical interest
in power system SSSA , since an infinite eigenvalue does not represent
any particularly meaningful dynamics.

\remark

Applying appropriate initial conditions in ( 3.10 ), i.e. @xmath , and
@xmath , @xmath , and imposing @xmath , allows obtaining the PF s in the
classical sense [ arriaga:82_1 ] . Furthermore, as already discussed,
algorithms that are suitable for large sparse matrices allow finding
only a partial solution of the GEP , typically including the most
critical dynamic modes of the system. This solution allows determining
only the part of the participation matrix that is associated with the
most critical modes. Therefore, by applying the above initial
conditions, the (critical) participation matrix, i.e. the part of the
participation matrix that is associated with the most critical
eigenvalues of the system, can be expressed as:

  -- -------- -- --------
     @xmath      (3.12)
  -- -------- -- --------

where @xmath , @xmath , be the number of the calculated finite
eigenvalues and @xmath , @xmath are the corresponding right and left
modal matrices.

#### 3.3.2 Illustrative Example

As an illustrative example, consider system ( 3.7 ) with

  -- -------- --
     @xmath   
  -- -------- --

The pencil @xmath has @xmath finite eigenvalues @xmath , @xmath , of
algebraic multiplicity @xmath , @xmath and the infinite eigenvalue with
multiplicity @xmath . The geometric multiplicity @xmath of the finite
eigenvalue @xmath is found as the dimension of the null space of @xmath
. In this example, @xmath , @xmath . The right and left eigenvectors of
@xmath associated with the finite eigenvalue @xmath are:

  -- -- --
        
  -- -- --

where @xmath , @xmath are generalized eigenvectors determined from
@xmath and @xmath respectively. The right and left eigenvectors of
@xmath associated with the finite eigenvalue @xmath are:

  -- -------- --
     @xmath   
  -- -------- --

The sensitivities @xmath are obtained from Theorem 3.3.1 as follows:

  -- -------- --
     @xmath   
  -- -------- --

For @xmath and @xmath one has respectively:

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
              @xmath   
     @xmath   @xmath   
  -- -------- -------- --

Consider @xmath , and @xmath , @xmath , which lead to the PF s related
to the system finite modes. One has:

-   For @xmath , one has @xmath . Hence,

      -- -------- -------- --
         @xmath   @xmath   
      -- -------- -------- --

-   For @xmath , one has @xmath . Hence,

      -- -------- -------- --
         @xmath   @xmath   
      -- -------- -------- --

-   For @xmath , one has @xmath . Hence,

      -- -------- -------- --
         @xmath   @xmath   
      -- -------- -------- --

-   For @xmath , one has @xmath . Hence,

      -- -------- -------- --
         @xmath   @xmath   
      -- -------- -------- --

-   For @xmath , one has @xmath . Hence,

      -- -------- -------- --
         @xmath   @xmath   
      -- -------- -------- --

Results are summarized in Table 3.1 , where @xmath . Since @xmath ,
@xmath are @xmath matrices and @xmath , there exist @xmath variables the
participation of which to the system finite eigenvalues is zero. These
variables are @xmath and @xmath . Moreover, Table 3.1 shows that @xmath
is dominant in @xmath , while @xmath is dominant in @xmath .

### 3.4 Participation Factors of Algebraic Variables

Consider the explicit DAE power system model ( 2.5 ) without inputs,
i.e. @xmath . Let @xmath be the @xmath -th element of @xmath . Then, the
following cases are relevant:

-   @xmath , that is @xmath is a state variable. Then, substitution of
    appropriate initial conditions (see Remark 3.12 ) gives @xmath . In
    the special case that the eigenvectors form a complete basis for the
    rational vector space of the matrix pencil, which means that all
    eigenvalues are either distinct or their algebraic multiplicity is
    equal with the geometric, one has @xmath , @xmath , and thus @xmath
    , @xmath in ( 3.13 ). Substitution in ( 3.10 ) gives:

      -- -------- -- --------
         @xmath      (3.13)
      -- -------- -- --------

-   @xmath , i.e. @xmath is an algebraic variable. Then @xmath . The
    @xmath rightmost columns of @xmath which contain only zero elements,
    impose that the PF s of the algebraic variables in the system finite
    modes are found to be null. This is a consequence of the fact that
    the coefficients of the first derivatives of the algebraic variables
    are zero, which implies that the algebraic variables introduce only
    infinite eigenvalues to the system. Nevertheless, the algebraic
    variables constrain the system and, in this sense, do participate in
    the system finite modes.

It follows that, for this system, the critical participation matrix (
3.12 ) takes the following form:

  -- -------- -- --------
     @xmath      (3.14)
  -- -------- -- --------

where @xmath , @xmath . The matrix @xmath contains all the information
on the dynamics of interest and is the matrix that is utilized in the
remainder of the chapter.

This section introduces an approach to measure the participation of
algebraic variables in power system dynamic modes, based on the PF s of
the system states [ tzou:pfactors ] . These can be algebraic variables
included in the DAE system model, or, in general, any algebraic output
that is defined as a function of the states and algebraic variables of
the DAE system.

Let the output vector @xmath , @xmath , be defined as:

  -- -------- -------- --
     @xmath   @xmath   
  -- -------- -------- --

where @xmath is a non-linear function of @xmath , @xmath . Then
differentiation around @xmath yields:

  -- -------- -- --------
     @xmath      (3.15)
  -- -------- -- --------

Substitution of ( 2.8 ) to the last equation gives:

  -- -------- -------- -- --------
     @xmath   @xmath      (3.16)
  -- -------- -------- -- --------

where @xmath , @xmath , is the output matrix.

Let @xmath be the @xmath -th system output. Then, the following
expression is a candidate as the PF of @xmath in the mode @xmath :

  -- -------- -------- -- --------
     @xmath   @xmath      (3.17)
  -- -------- -------- -- --------

From the state-space viewpoint, @xmath expresses the residue (or the
joint observability/controllability) of the @xmath -th mode, when the
input is, exactly as it holds for @xmath , a perturbation in the
differential equation that defines @xmath . The output however is @xmath
, which can be, in principle, any function of the system state
variables. The fact that the perturbation that leads from ( 3.10 ) and (
3.17 ) to the classical PF s is the same, is also the reason that @xmath
is called PF .

\proposition

Let the PF @xmath be the @xmath -th row, @xmath -th column element of
the participation matrix @xmath . Then:

  -- -------- -------- -- --------
     @xmath   @xmath      (3.18)
  -- -------- -------- -- --------

Proof. Let @xmath be the @xmath -th row of @xmath . Then:

  -- -------- -------- --
     @xmath   @xmath   
  -- -------- -------- --

Partial differentiation over @xmath leads to:

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
     @xmath   @xmath   
  -- -------- -------- --

where @xmath , since the elements of @xmath do not depend on functions
of @xmath . By applying the same steps for all outputs and representing
in matrix form, one arrives at ( 3.18 ).

The main feature of ( 3.18 ) is that it allows defining the
participation matrix not only of the algebraic variables of the DAE s ,
but also of any defined output vector that is a function of the system
state and algebraic variables. One has only to specify the gradients
@xmath and @xmath at the operating point, and then calculate the output
matrix @xmath . The proposed participation matrix @xmath provides
meaningful information for the system coupling that, to the best of the
authors’ knowledge, has not been exploited in the literature.

\remark

The following special cases for the participation matrix of ( 3.18 ) are
relevant:

1.   State variables: If @xmath , the gradients in ( 3.15 ) become
    @xmath , @xmath . The output matrix is @xmath and hence the
    participation matrix of the system states is, as expected:

      -- -------- -------- -- --------
         @xmath   @xmath      (3.19)
      -- -------- -------- -- --------

2.   Algebraic variables: If @xmath , the gradients in ( 3.15 ) become
    @xmath , @xmath . The output matrix is @xmath . Thus:

      -- -------- -------- -- --------
         @xmath   @xmath      (3.20)
      -- -------- -------- -- --------

    which is the participation matrix of the algebraic variables in
    system modes included in the DAE model.

3.   Rates of change of state variables: If the output is defined as
    @xmath , the gradients in ( 3.15 ) become @xmath , @xmath . The
    output matrix is @xmath . Thus:

      -- -------- -------- -- --------
         @xmath   @xmath      (3.21)
      -- -------- -------- -- --------

    The RoCoF of the synchronous machines ( @xmath ) is a relevant case.

4.   Parameters: Finally, consider the scalar output @xmath , where
    @xmath is a parameter. If @xmath appears only in the @xmath -th
    algebraic equation @xmath , then the linearization of the @xmath -th
    algebraic equation around the operating point yields:

      -- -------- -------- -- --------
         @xmath   @xmath      (3.22)
      -- -------- -------- -- --------

    where @xmath , @xmath and @xmath . Solving ( 3.22 ) for @xmath and
    comparing with ( 3.15 ), @xmath and @xmath . The participation
    vector is obtained from ( 3.18 ) for @xmath .

Note, finally, that once the eigenvalue analysis is completed and the
modal matrices are known, calculating the proposed participation
matrices involves few matrix multiplications. From the computational
burden viewpoint, the cost of calculating the PF s is marginal compared
to the eigenvalue analysis.

### 3.5 Case Studies

This case study presents two practical applications of the proposed
approach and shows how defining PF s of algebraic variables in system
modes can help design more effective and robust controllers. In
particular, Section 3.5.1 is based on the well-known two-area system [
kundur:94 ] and shows how the calculation of PF s can help select the
most effective algebraic variable to be measured to damp inter-area
oscillations. Section 3.5.2 utilizes a realistic detailed model of the
AIITS and shows how PF s can help define the impact of a given system
mode on the network. This second case study also serves to discuss the
robustness and the scalability of the proposed approach. Simulations of
this section are carried using Dome [ vancouver ] .

#### 3.5.1 Two-Area System

The two-area system is depicted in Figure 3.1 . It comprises two areas
connected through a relatively weak tie; eleven buses and four
synchronous machines. Each generator is equipped with an AVR of type
IEEE DC-1 and a TG . The system feeds two loads connected to buses 7 and
9 and which are modeled as constant active and reactive power
consumption.

The system model has @xmath state variables. For a system with this
dynamic order, the dense state matrix @xmath can be efficiently
calculated and handled. The most critical modes and the mostly
participating states to these modes are presented in Table 3.2 . Area 1
presents a critical local mode @xmath with natural frequency @xmath Hz
and dominant state the rotor speed @xmath . Area 2 presents a critical
local mode as well, which is @xmath with natural frequency @xmath Hz and
dominant state the rotor speed @xmath . For these modes, the damping
ratio is @xmath . Finally, the most lightly damped mode is @xmath ,
which is an inter-area mode with natural frequency @xmath Hz. The mostly
participating state in the inter-area mode is the rotor speed @xmath .

The participation matrix of the algebraic variables for these modes is
calculated from ( 3.20 ). Note that in this section, each @xmath is
divided over the Euclidean norm of the respective output @xmath , so
that the results are normalized and comparable according to the
geometric approach. Of course, since the PF s are a relative measure,
one may apply any further normalization, e.g. the maximum or the sum of
the values to be equal to 1.

The following simple test shows how the proposed PF s of the algebraic
variables are linked to their sensitivities in eigenvalue changes.
Imposing a perturbation in the active power and voltage of the PV buses
1, 4, changes the most critical mode @xmath by @xmath . The calculated
eigen-sensitivities @xmath are then compared with the PF s of the
algebraic variables @xmath , @xmath , @xmath , @xmath , in Table 3.3 .
As expected, a highly participating variable in a mode indicates that
this mode is sensitive to small variations of this variable.

For illustration, consider now the simple example of finding the
participation vector of one system parameter. Let @xmath be the active
power consumption of the load connected to bus 7. Since @xmath is also
the active power injection at bus 7, the following algebraic equation
(see Figure 3.1 ) holds:

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
              @xmath   
  -- -------- -------- --

Linearization and solving for @xmath yields:

  -- -------- -------- --
     @xmath   @xmath   
  -- -------- -------- --

where, the gradients are calculated at @xmath ; and @xmath . Therefore,
@xmath , and @xmath is the @xmath row vector which contains the
gradients calculated above in the indices of @xmath ; all other elements
of @xmath are zero. The output matrix @xmath is @xmath , @xmath . The
resulting participation matrix is given by ( 3.18 ).

The active ( @xmath ) and reactive ( @xmath ) power injections on all
system buses, as well as the CoI speeds ( @xmath ) of the two areas are
defined as outputs and their PF s are obtained from ( 3.18 ).
Correspondingly, the system bus voltages ( @xmath ), angles ( @xmath )
and frequencies ( @xmath ) are included in the algebraic variables of
the DAE s . Thus, their PF s are determined from ( 3.20 ). With this
aim, ideal frequency estimations of the system buses are obtained by
employing the frequency divider formula, proposed in [ fdf ] . The
formulation of the frequency divider in per units is as follows:

  -- -------- --
     @xmath   
  -- -------- --

where @xmath are the estimated bus frequency deviations with respect to
the reference synchronous speed; @xmath are the synchronous machines
rotor speed deviations; and @xmath , @xmath are system susceptance
matrices that include the internal reactances of the synchronous
machines. The accuracy, the numerical robustness and the computational
efficiency of the frequency divider have been discussed in [ fdf ,
pll:18 , freqpss:gm ] .

The PF s of the RoCoF of the synchronous machines ( @xmath ) are
determined from ( 3.21 ). The mostly participating of the above
variables in the system critical modes are summarized in Table 3.4 . It
is worth observing that the bus voltages, the reactive power injections
and the RoCoF have a low participation in the system critical modes.
Mostly participating in the inter-area mode is the bus frequency @xmath
. Similarly, the bus frequency @xmath is the one mostly participating in
the local mode of Area 2. Finally, the CoI speed of Area 1 ( @xmath ) is
the one mostly participating in @xmath , which is a local mode of this
area.

Finally, the calculated PF s can be utilized to improve the dynamic
behavior of the system. As already discussed, the critical mode of the
system is the inter-area mode and the mostly participating variable
(Table 3.4 ) is the bus frequency @xmath . A Static Var Compensator (
SVC ) is installed at bus 8 with a POD loop [ abbsvc ] . The POD input
signal is @xmath . The POD output is considered as an additional input
to the SVC voltage reference algebraic equation. The results are
summarized in Table 3.5 . The eigenvalue analysis shows that, after the
inclusion of the controller, the system is stable and all modes are
properly damped.

#### 3.5.2 All-Island Irish Transmission System

This section considers the real-world model of the AIITS which has been
also discussed in Section 2.6.1 . The dynamic order of the system is
1,480. Eigenvalue analysis shows that the system is stable when subject
to small disturbances. The system presents both local machine modes and
inter-machine modes. Recall that, a local machine mode refers to a
single machine oscillating against the rest of the system. On the other
hand, an inter-machine mode refers to a group of machines of the same
area oscillating against each other [ kundur:94 ] . The remainder of
this section shows two modes with different damping ratios and natural
frequencies. The examined modes are summarized in Table 3.6 .

Mode 1 has eigenvalue @xmath , with natural frequency @xmath Hz and
damping ratio @xmath . The dominant states in this mode are the rotor
angle and speed of synchronous generator 16. The PF s of these states
sum to @xmath . The mode is local with generator 16 oscillating against
the rest of the system. Mode 2 has eigenvalue @xmath , with frequency
@xmath Hz and damping ratio @xmath %. The mostly participating states
are the rotor speed and angle of synchronous generator 2. The
corresponding PF s sum to @xmath . The natural frequency and the
distribution of the PF s indicate that this is an inter-machine mode [
kundur:94 ] .

The Python module graph-tool [ graphtool:14 ] is utilized to generate a
graph of the studied network. The resulting graph has 1,479 vertices,
which correspond to the system buses and 1,851 edges, which correspond
to lines and transformers. Note that the coordinates of the graph
vertices and edges do not represent the actual geography of the system.
The participation matrices of the bus active power injections are
calculated for the examined modes. Then, the sizes and the colors of the
graph vertices are adjusted with respect to the magnitude of the
calculated PF s .

The generated graph with the PF s of all bus active power injections in
the local Mode 1 is illustrated in Figure 3.2 . The mostly participating
active power injection is the one of the bus 552, that is adjacent to
generator 16, with @xmath . The PF s of all bus active power injections
in the inter-machine Mode 2 is illustrated in Figure 3.3 . The mostly
participating active power injection is the one of the bus 1,405, that
is close to synchronous generator 2, with @xmath . Figure 3.3 shows that
the lower frequency oscillations spread over the power system. In fact,
there are several buses in a large area that have a high participation
to the inter-machine mode.

### 3.6 Conclusions

The chapter proposes a systematic analytical approach to quantify the
participation of the algebraic variables of a power system model, and to
general of any function of the system variables in the system modes,
through the definition of output vectors of the system’s state-space
formulation. The proposed approach, which describes an alternative
interpretation of the PF s as eigen-sensitivities, provides a high
flexibility, since it allows determining PF s of states, algebraic
variables, rates of change of system variables, as well as of system
parameters.

Regarding the computational burden of the participation analysis, once
the eigenvalue analysis is completed, the cost of calculating the
proposed PF s is negligible. Moreover, the proposed approach allows
exploiting the sparsity of the GEP matrix pencil and can lead to a
significant speedup, provided that a proper eigenvalue solver is
employed.

## Chapter 4 Fractional Order Control

### 4.1 Introduction

Fractional calculus is the analysis of non-integer order differentials
and integrals. Although the first discussion on derivatives with
non-integer order dates back to Leibniz [ leibniz:1695 ] , major studies
on fractional calculus started with Liouville [ liouville:1832 ] . The
application of fractional calculus in control was introduced with the
definition of the ideal cut-off characteristic by Bode [ bode:1945 ] and
the first systematic study of the frequency response of FOC s was done
by Oustaloup [ oustaloup:1991 ] . In [ podlubny:book99 , podlubny:1999 ]
, Podlubny provided a comprehensive analysis of fractional systems with
applications to automatic control, and proposed the use of the
Fractional-Order Proportional Integral Derivative ( FOPID ) controller.
The FOPID controller is an extension of the classical PID , and is
characterized by five parameters: three gains, namely proportional,
integral, and derivative; and two fractional orders, namely integral (
@xmath ) and derivative ( @xmath ). Employing a FOPID extends the four
control points of the PID strategy to the plane defined by the
fractional orders @xmath and @xmath [ monje:2010 ] . This is illustrated
in Figure 4.1 . FOC s have been applied to various engineering fields,
e.g. heat diffusion [ jesus:2008 ] and robotic time-delay systems [
lazarevic:2006 ] . Recent efforts on FOC s have tackled several issues,
such as modeling and studying the impact of control limiters, see [
PANDEY:2017 ] , and variable-order fractional orders, see [ Dab ] .
Finally, it is relevant to mention here that fractional calculus is a
promising tool for applications not only in control systems, but in many
other applications, for example physics [ Hi ] and biology [ ionescu:17
] .

The potential of FOC s for power system applications has not been
discussed until very recently. Applications include automatic voltage
regulation of synchronous machines [ zamani:2009 , tang:2012 , pan:2013
] ; load frequency control [ taher:2014 , saxena:2019 ] ; damping
control [ chaib:2017 ] ; and voltage control of distributed energy
resource systems [ delghavi:2016 ] . These works mainly focus on the
tuning of FOPID controllers through heuristic algorithms, such as
particle swarm [ zamani:2009 ] , chaotic multi-objective [ pan:2013 ] ,
and imperialist competitive algorithm [ taher:2014 ] . Analytical
methods employ frequency response criteria such as the desired gain
crossover frequency [ saxena:2019 ] .

From a practical and simulation point of view, fractional dynamics are
typically approximated using appropriate rational order transfer
functions. Although various techniques have been proposed to define such
transfer functions [ vinagre:2000 ] , the most commonly utilized
continuous method is the ORA [ oustaloup:2000 ] . Therefore, the ORA is
the method considered in this chapter. The works cited above focus on
applications and rely, for the implementation of FOC s , on proprietary
software tools which are utilized as a black-box . This approach is
indeed fostered by the availability of several software tools for the
design and simulation of FOC s , see, for example, the Matlab toolboxes
CRONE [ cronetool ] , Ninteger [ ninteger:2004 ] , and FOMCON [
fomcon:2011 ] .

The main goal of this chapter is to provide a systematic study of FOC s
for power system applications. The remainder of the chapter is organized
as follows. Section 4.2 outlines the theory of fractional calculus.
Section 4.3 discusses the stability of power systems with inclusion of
FOC s . Section 4.4 focuses on the modeling, computer implementation and
tuning of ORA -based FOC s . Two case studies are presented in Sections
4.5.1 and 4.5.2 . Finally, conclusions are drawn in Section 4.6 .

### 4.2 Essentials of Fractional Calculus

Fractional calculus is the analysis of non-integer order differentials
and integrals. That is, it deals with the problem of extending the
differentiation and integration operators @xmath , @xmath , @xmath , for
real (or complex) number powers. There exist several approaches that
address this problem. A precise formulation is given by the
Riemann-Liouville ( RL ) definition. Consider a function @xmath . The
idea behind the RL definition is to first consider the @xmath -fold
integration of @xmath and then extend @xmath to any @xmath . In its
derivative form, the RL definition reads [ monje:2010 ] :

  -- -------- -- -------
     @xmath      (4.1)
  -- -------- -- -------

where @xmath , @xmath , @xmath , is the fractional order; and @xmath .
The Laplace transform of ( 4.1 ) is:

  -- -------- -- -------
     @xmath      (4.2)
  -- -------- -- -------

where @xmath and @xmath . Equation ( 4.2 ) requires the knowledge of the
fractional order initial conditions @xmath , @xmath . This raises an
issue for engineering systems since, currently, only integer order
initial conditions are well understood and known for physical variables.
Other properties of the RL definition are also counter-intuitive in the
sense of classical differentiation. For example, the RL derivative of a
constant function is typically unbounded at @xmath [ podlubny:1999 ] .

With the aim of meeting the requirements of known physical variables and
systems, ( 4.1 ) was revisited by Caputo [ caputo:2015 ] . Caputo’s
definition of @xmath reads:

  -- -------- -- -------
     @xmath      (4.3)
  -- -------- -- -------

The Laplace transform of ( 4.3 ) is:

  -- -------- -- -------
     @xmath      (4.4)
  -- -------- -- -------

Equation ( 4.4 ) requires the knowledge of the initial conditions @xmath
, @xmath , which in this case are of integer order. This property is
crucial for the solution of initial value problems. In fact, for the
purpose of fractional control, that is of concern here, one needs to use
a definition with integer order initial conditions. This work utilizes
the Caputo definition of fractional derivative given in ( 4.3 ), which
is more consistent for control applications and follows the properties
of differentiation in the classical sense. For example, the Caputo
fractional derivative of a constant function is zero.

In the special case that @xmath , the Caputo definition ( 4.3 ) reduces
to [ Bo ] :

  -- -------- -- -------
     @xmath      (4.5)
  -- -------- -- -------

There are several other definitions of fractional derivatives/integrals
and choosing the appropriate one depends on the application. For
example, the Grünwald-Letnikov’s derivative is relevant for the
numerical solution of fractional differential equations. It is important
to emphasize that the theory of fractional calculus applicable to the
stability analysis and control of physical dynamical systems is an
active research topic and yet to be fully understood. Recent efforts
have addressed issues related to Caputo’s formulation, for example its
singular kernel for @xmath [ caputo:2015 , atangana:2016 ] . Finally,
note that fractional-order operators are not a straightforward
generalization of the classical integer-order operators and, despite the
several advances and interesting recent studies, see e.g. [ Bo , Das8 ,
Deb , Kac , Liz1 , li:2007 , Shiri , Su , Wei ] , the existing theory of
fractional differential equations is far from complete.

### 4.3 Power System with Fractional Order Control

This chapter focuses on the modeling and stability of power systems with
inclusion of FOC s . Since a general theory of the stability of
non-linear fractional differential equations is not available, we
proceed as follows [ foc1 ] . This section considers the conditions for
the stability of a linear (or linearized) singular power system model
with inclusion of a FOC . These conditions help design the FOC s
discussed in Section 4.4 . However, power system models are non-linear.
For this reason, the design of FOC s is checked by solving numerical
time domain simulations of the fully-fledged non-linear model of the
system and its controllers in the case studies presented in Section 4.5
.

#### 4.3.1 Modeling

Consider the DAE linearized power system model ( 2.4 ), which is
repeated here for clarity:

  -- -------- -- -------
     @xmath      (4.6)
  -- -------- -- -------

where @xmath and @xmath , @xmath , @xmath .

Let the vector of the system output measurements @xmath , @xmath , be:

  -- -------- -- -------
     @xmath      (4.7)
  -- -------- -- -------

where @xmath , @xmath . Then, a multiple-input, multiple-output FOC for
the system ( 4.6 )-( 4.7 ), can be described by a set of fractional DAE
s as follows:

  -- -------- -------- -------- -------
     @xmath   @xmath            (4.8)
              @xmath   @xmath   
  -- -------- -------- -------- -------

where @xmath is the controller’s fractional order; @xmath , @xmath , is
the vector of the controller states; @xmath , @xmath , @xmath , @xmath .
It is relevant to mention that there are FOC s that introduce multiple,
distinct fractional orders. Combining ( 4.6 ), ( 4.7 ) and ( 4.8 )
yields the closed-loop system representation. In matrix form:

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
  -- -------- -------- --

or equivalently,

  -- -------- -------- -- -------
     @xmath   @xmath      (4.9)
  -- -------- -------- -- -------

where

  -- -------- --
     @xmath   
  -- -------- --

  -- -------- --
     @xmath   
  -- -------- --

with @xmath , and @xmath .

#### 4.3.2 Stability

This section studies the stability of the closed-loop system ( 4.9 ),
which is a singular system of differential equations having both first,
and fractional order derivatives. With this aim, the following property
of the Caputo fractional derivative is relevant [ li:2007 ] :

\proposition

Let @xmath , @xmath for some @xmath , where @xmath denotes the set of
continuously differentiable functions. Then:

  -- -------- -- --------
     @xmath      (4.10)
  -- -------- -- --------

where @xmath , and @xmath . Note that ( 4.10 ) does not hold for the RL
derivative.

Equation ( 4.9 ) can be rewritten as:

  -- -------- -------- -- --------
     @xmath   @xmath      (4.11)
  -- -------- -------- -- --------

where @xmath .

Adopting the notation

  -- -------- -------- --
     @xmath   @xmath   
  -- -------- -------- --

one obtains @xmath . Making use of ( 4.10 ) yields @xmath . Substitution
to ( 4.11 ) gives:

  -- -------- -------- -- --------
     @xmath   @xmath      
     @xmath   @xmath      (4.12)
  -- -------- -------- -- --------

Equivalently:

  -- -------- -- --------
     @xmath      (4.13)
  -- -------- -- --------

System ( 4.13 ) can be rewritten as:

  -- -------- -------- -- --------
     @xmath   @xmath      (4.14)
  -- -------- -------- -- --------

or, by recovering the time dependency, as:

  -- -------- -- --------
     @xmath      (4.15)
  -- -------- -- --------

where

  -- -------- --
     @xmath   
  -- -------- --

We have @xmath , @xmath , and @xmath , where for simplicity the notation
@xmath is used.

\theorem

Consider system ( 4.15 ). Then its matrix pencil is given by [ foc2 ] :

  -- -------- -- --------
     @xmath      (4.16)
  -- -------- -- --------

where

  -- -------- --
     @xmath   
  -- -------- --

The proof of Theorem 4.3.2 is given in Appendix A .

Assuming that the pencil ( 4.16 ) is regular, or equivalently, @xmath ,
it can be proven that there always exist solutions of ( 4.15 ). Then,
similarly to the discussions of Chapter 2 , uniqueness of solutions
depends on the given initial condition. The interested reader may find a
a comprehensive theory for the existence and uniqueness of solutions of
systems in the form of ( 4.15 ) – with either regular or singular pencil
– in [ foc2 ] .

The eigenvalues of the matrix pencil ( 4.16 ) provide insight on the
stability of system ( 4.15 ), or equivalently, of system ( 4.9 ). Since
the pencil of system ( 4.15 ) is a regular pencil, @xmath is also a
regular pencil. Hence and because of the structure of @xmath there exist
invariants of the following type:

-   @xmath finite eigenvalues of algebraic multiplicity @xmath , @xmath
    ;

-   an infinite eigenvalue of algebraic multiplicity @xmath ,

where @xmath , @xmath .

Let

  -- -------- --
     @xmath   
  -- -------- --

where @xmath , @xmath , @xmath , @xmath , and @xmath , @xmath , @xmath ,
@xmath . Equivalently, setting:

  -- -------- --
     @xmath   
  -- -------- --

  -- -------- --
     @xmath   
  -- -------- --

one has

  -- -------- -- --------
     @xmath      (4.17)
  -- -------- -- --------

with @xmath , @xmath , and @xmath , @xmath .

Employing ( 2.18 ) for @xmath , and using the notation @xmath , @xmath ,
one has:

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

Finally, the following proposition is relevant:

\proposition

Consider system ( 4.15 ) with a regular pencil. Then:

1.  using the spectrum of the pencil @xmath , the general solution is
    given by:

      -- -- -- --------
               (4.18)
      -- -- -- --------

    where @xmath is a Jordan matrix constructed by the finite
    eigenvalues of the pencil @xmath , and their algebraic multiplicity,
    while @xmath is a matrix constructed by the linear independent
    eigenvectors related to the finite eigenvalues of the pencil @xmath
    , and @xmath is a constant vector.

2.  the system ( 4.15 ) is asymptotically stable if all eigenvalues
    @xmath of the pencil @xmath satisfy:

      -- -------- -- --------
         @xmath      (4.19)
      -- -------- -- --------

where @xmath .

The proof of Proposition 4.3.2 can be found in [ foc2 ] . For a more
general survey on the stability conditions for systems of fractional
differential equations, the interested reader may refer to [ petras:2009
] . Finally, for linearized systems, as it is the case of power systems,
the condition ( 4.19 ) guarantees stability in a neighborhood of the
operating point utilized to calculate the pencil ( 4.16 ). For this
reason, in the case studies discussed in Sections 4.5.1 and 4.5.2 ,
numerical integration rather than ( 4.19 ) is utilized to check the
stability and the dynamic response of power systems with inclusion of
FOC s .

#### 4.3.3 Properties of Fractional Order Controllers

Consider the simple FOC with transfer function @xmath . Consider the
frequency response of @xmath , i.e. its steady-state response to
sinusoidal, periodic input signals. In this case, it is @xmath , or
@xmath .

Frequency Response: The magnitude and phase of @xmath can be written as
follows:

  -- -------- -------- -------- --------
     @xmath   @xmath            (4.20)
              @xmath   @xmath   
  -- -------- -------- -------- --------

Hence, @xmath has a magnitude Bode plot with constant slope of @xmath
dB/dec, while the phase plot is a horizontal line at @xmath degrees. The
Integer Order ( IO ) versions of @xmath are obtained for @xmath , @xmath
. Then, from ( 4.20 ), it is clear that @xmath is an extension of its IO
versions in frequency domain. This result is general, so that all FOC s
can be viewed as extensions of the respective IO ones.

Robustness: FOC s have an inherent property of iso-damping, which
implies that the closed-loop system is robust against gain uncertainties
and variations. Let @xmath be the transfer function of the open-loop,
linearized power system. Then, the iso-damping property is defined as:

  -- -------- -------- -- --------
     @xmath   @xmath      (4.21)
  -- -------- -------- -- --------

where @xmath is the system gain crossover frequency. ( 4.21 ) indicates
that the system maintains its phase margin around @xmath .

#### 4.3.4 Examples

This section provides two illustrative examples on the SSSA of power
systems with inclusion of FOC s . The first example considers a small
linear singular system of differential equations with regular pencil.
The second example discusses the damping of the electro-mechanical
oscillations of the WSCC 9-bus system through a Fractional-Order Power
System Stabilizer ( FOPSS ).

##### 4.3.4.1 Illustrative Example

Consider system ( 2.10 ) with:

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

The matrix pencil @xmath has @xmath finite, distinct eigenvalues @xmath
, @xmath , @xmath , @xmath and @xmath . The pencil also has the
eigenvalue @xmath with algebraic multiplicity @xmath . The rightmost
eigenvalue of the pencil is @xmath , and thus the system is unstable.

Consider that the output of the system is given by ( 4.7 ), where:

  -- -------- -------- --
     @xmath   @xmath   
  -- -------- -------- --

In order to stabilize the system, the following simple form of
controller ( 4.8 ) is considered:

  -- -------- -------- -------- --------
     @xmath   @xmath            (4.22)
              @xmath   @xmath   
  -- -------- -------- -------- --------

Equation ( 4.22 ) describes a Fractional-Order Proportional Integral (
FOPI ) controller, where @xmath , @xmath , are the proportional and
integral gains, respectively; @xmath is the controller’s fractional
order. The block diagram of the FOPI is shown in Figure 4.2 .

Then, the closed-loop system is described by ( 4.9 ), where

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

The stability of the closed-loop system can be checked by calculating
the eigenvalues of the matrix pencil @xmath , where @xmath , @xmath ,
are defined in ( 4.15 ). In this case:

  -- -------- --
     @xmath   
  -- -------- --

  -- -------- --
     @xmath   
  -- -------- --

The pencil @xmath has @xmath distinct finite eigenvalues @xmath , @xmath
, @xmath , @xmath , @xmath , @xmath , and the infinite eigenvalue @xmath
with algebraic multiplicity @xmath . For fractional order @xmath ,
@xmath in equation ( 4.19 ), and thus, the closed-loop system is stable
if the arguments @xmath of all finite eigenvalues @xmath satisfy:

  -- -------- --
     @xmath   
  -- -------- --

The finite eigenvalues of @xmath are illustrated in Figure 4.3 . The
system is stable, since all eigenvalues lie in the region given in (
4.3.4.1 ).

##### 4.3.4.2 WSCC 9-bus System

This example is based on the well-known WSCC 9-bus system, the data of
which are provided in [ anderson:2003 ] . The system consists of 3
synchronous machines, 6 transmission lines, 3 transformers and 3 loads,
modeled as constant power consumption. Each machine provides primary
voltage and frequency control through an AVR and a TG , respectively.
The original system model does not include any fractional dynamics.

Suppose that a FOPSS is installed at the synchronous machine connected
at bus 2. The FOPSS employed has the following transfer function:

  -- -------- -------- --
     @xmath   @xmath   
  -- -------- -------- --

The controller input is the local rotor speed, while the output is an
additional input to the algebraic equation of the local AVR reference.
The FOPSS can be written in the form of ( 4.8 ), where:

  -- -------- --
     @xmath   
  -- -------- --

  -- -------- --
     @xmath   
  -- -------- --

Suppose that @xmath s, @xmath s, @xmath . Then, small-signal stability
is assessed by calculating the eigenvalues of ( 4.16 ). From ( 4.19 ),
the system is stable if all finite eigenvalues @xmath satisfy:

  -- -------- --
     @xmath   
  -- -------- --

where @xmath . The most critical eigenvalues of the closed-loop system
are shown in Figure 4.4 , where the shaded region is unstable. As it can
be seen, the system with the FOPSS is in this case stable.

### 4.4 Oustaloup’s Recursive Approximation

#### 4.4.1 Formulation

The theoretical analysis based on fractional calculus is essential for a
better understanding of “ideal” FOC s and hence, for a robust FOC
design. In practice, however, the implementation of FOC s is typically
done by approximating the fractional derivatives and integrals with
rational transfer functions. Although this is an important aspect of FOC
s implementation, some studies omit mentioning what approximation
technique and/or parameters they use, effectively forcing the adoption
of a black-box approach. In the following the ORA method, which is
arguably the most common continuous approximation technique, is
employed. The generalized ORA of a fractional derivative of order @xmath
is defined as [ monje:2010 ] :

  -- -------- -- --------
     @xmath      (4.23)
  -- -------- -- --------

where

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

In the above expressions, @xmath is the frequency range for which the
approximation is designed to be valid; @xmath is the order of the
polynomial approximation; The term “generalized” implies that, in ( 4.23
), @xmath can be either even or odd [ monje:2010 ] , while the term
“recursive” implies that the values of @xmath , @xmath result from a set
of recursive equations [ oustaloup:2000 ] . The block diagram of ORA is
shown in Figure 4.5 .

Figure 4.6 compares the theoretical frequency response of @xmath , which
is given by ( 4.20 ) for @xmath , with the respective plots provided by
ORA s of different dynamic orders. This simple example shows the typical
behavior of the ORA : the approximation is more accurate for higher
dynamic orders and for frequencies closer to the middle of the interval
@xmath .

A final remark on equation ( 4.23 ) is that the ORA of @xmath is
typically accurate enough for fractional orders that satisfy @xmath .
For higher fractional orders, accuracy can be maintained by implementing
@xmath as a multiplication of a suitable integer order block and a
fractional order block, as follows:

  -- -------- -- --------
     @xmath      (4.24)
  -- -------- -- --------

#### 4.4.2 DAE Model

In time-domain, the ORA can be described by the following set of
explicit DAE s :

  -- -------- -------- -------- --------
     @xmath   @xmath            (4.25)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath is the ORA state vector; and

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

The dimensions of @xmath , @xmath , @xmath , are @xmath , @xmath and
@xmath , respectively. As discussed in Chapter 2 , an alternative way to
describe a dynamic model is by using a semi-implicit DAE formulation.
With this formulation, the ORA can be written as:

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
              @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

where @xmath is the ORA state vector; and, in matrix notation,

  -- -------- -------- -- --------
     @xmath   @xmath      (4.26)
  -- -------- -------- -- --------

where @xmath and

  -- -------- --
     @xmath   
  -- -------- --

  -- -------- --
     @xmath   
  -- -------- --

where the dimensions of @xmath , @xmath , @xmath , are @xmath , @xmath
and @xmath , respectively.

In ( 4.25 ), the total number of non-zero elements of the coefficient
matrices is @xmath , whereas in ( 4.26 ) it is @xmath . As a result, the
proposed semi-implicit model is sparser than the explicit one. Moreover,
( 4.26 ) prevents the input @xmath to propagate through the equations to
the output.

#### 4.4.3 Steady State Error

Consider the simple FOC with transfer function @xmath . By approximating
@xmath from ( 4.23 ), @xmath can be written as:

  -- -------- -------- -- --------
     @xmath   @xmath      (4.27)
  -- -------- -------- -- --------

with

  -- -------- -------- -------- --------
     @xmath   @xmath            (4.28)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where the expressions for @xmath and @xmath have been substituted as in
( 4.23 ) and @xmath . From ( 4.27 ), one can deduce that the
controller’s unity feedback closed-loop steady state error @xmath for an
arbitrary input @xmath is:

  -- -------- -------- -- --------
     @xmath   @xmath      
              @xmath      
              @xmath      (4.29)
  -- -------- -------- -- --------

where @xmath . The steady-state error in ( 4.4.3 ) depends on @xmath ,
@xmath , and the applied input @xmath . Evaluating the controller’s unit
step input response yields @xmath and @xmath . Considering @xmath yields
that an ORA -based Fractional Order ( FO ) integral controller is not
perfect tracking. This result is not consistent with the theoretical
behavior of @xmath , @xmath , which has @xmath . However, the design of
an almost perfect-tracking FOC is possible with appropriate selection of
ORA parameters.

#### 4.4.4 Parameters Selection

While the value of @xmath is usually constrained due to computational
concerns, most studies that consider ORA -based FOC s in power systems
provide a rather arbitrary selection of the range of frequencies @xmath
. This section discusses the tuning of ORA parameters and provides an
empirical rule that simplifies the design of FOC s .

-    Low frequency @xmath : A very small @xmath reduces the steady state
    error in ( 4.4.3 ). However, a poor choice can significantly degrade
    the phase fitting of ORA . An example is shown in Figure 4.7 , where
    @xmath is varied from @xmath to @xmath rad/s.

-    High frequency @xmath : A very high @xmath may increase the system
    gain margin. Large gains lead to fast response and stability
    enhancement, as well as to elimination of steady state errors.
    However, increasing excessively the speed of the system response may
    trigger closed-loop resonant points. Note that such resonant points
    can remain undetected if they stem from unmodeled high frequency
    dynamics.

-    Approximation order @xmath : The phase fitting degradation caused
    by the decrease of @xmath can be compensated by increasing the
    dynamic order @xmath , e.g. from @xmath to @xmath (see Figure 4.7 ).
    Increasing @xmath has an impact on the computational complexity,
    which can be a serious constraint, especially if multiple filters
    are required and if a large system (like real-world power systems)
    is studied. Another possible problem of a very high @xmath is that
    multiple poles are placed very close to each other and close to the
    imaginary axis. For digital filters, such a pole-placement may
    affect the discretization process, with multiple poles being mapped
    on the unity circle, due e.g. to rounding errors.

Control parameters need to provide an adequate compromise among
accuracy, computational burden and performance. A good practice is to
limit the range of @xmath to the frequencies of the dynamics of
interest. This also avoids unexpected resonances, as discussed above.
Then, given a range let’s say @xmath and @xmath , @xmath , a choice that
provides a very good compromise is @xmath , with @xmath .

### 4.5 Case Studies

#### 4.5.1 WSCC 9-bus System

This section presents three power system applications of FOC s . (i) a
FO integral controller for secondary frequency regulation; (ii) a FO
lead-lag controller for primary frequency regulation of an ESS ; and
(iii) the voltage regulation provided by a STATCOM with inclusion of
multiple FOPI controllers. In these three examples, the pre-disturbance
equilibrium of the fractional DAE model is stable, i.e. condition ( 4.19
) holds. The focus is on time-domain simulations carried to discuss the
dynamic performance of ORA -based FOC s and check the system stability
under large disturbances. In all cases, the system is numerically
integrated using the implicit trapezoidal method. A brief description of
implicit integration of power systems is provided in Section 6.2 .
Examples of this section are based on the WSCC 9-bus system. All
simulation results are obtained with Dome.

##### Automatic Generation Control

In this example, an AGC , that coordinates the three generators and
provides secondary frequency regulation, is included in the WSCC system.
The AGC measures the CoI frequency ( @xmath ) and produces a dynamic
active power signal ( @xmath ), which is sent to the synchronous
generator turbine governors, and is proportional to their droops. The
power order ( @xmath ) received by the @xmath -th governor is:

  -- -------- -------- -- --------
     @xmath   @xmath      (4.30)
  -- -------- -------- -- --------

where @xmath is the @xmath -th TG droop constant; and @xmath . The
simplest model of an AGC assumes an integral controller. The
differential equation that describes the dynamic behavior of a
Fractional-Order Integral ( FOI ) AGC is:

  -- -------- -------- -- --------
     @xmath   @xmath      (4.31)
  -- -------- -------- -- --------

where @xmath is the FOI - AGC gain; @xmath is the reference angular
frequency; and @xmath is the order of integration. The IO version of
this controller (I- AGC ) is obtained for @xmath .

It is of interest to compare the performance of the I-AGC and the ORA
-based FOI - AGC . With this aim, a three-phase fault is considered at
bus 4 occurring at @xmath s. After @xmath ms, the line that connects
buses 4 and 5 trips and the fault is cleared.

The parameters of both controllers are tuned by optimizing the CoI
frequency profile through trial-and-error. The I- AGC gain is @xmath ,
while the parameters of the FOI - AGC are @xmath and @xmath .

Taking into account the discussion in Section 4.4.4 , the ORA parameters
are set to @xmath rad/s, @xmath . Figure 4.8 shows the CoI frequency
response of the system without AGC ; with I- AGC ; with FOI - AGC . The
FOI - AGC improves significantly the dynamic response of the frequency
of the system. Note that, with the selected parameters, the FOI - AGC
achieves practically a perfect-tracking behavior.

##### Energy Storage System

In this example, a converter-interfaced ESS is installed at bus 6 of the
9-bus system. A simplified model is employed to describe the ESS
dynamics. Figure 4.9 shows the block diagram of the ESS active power
control. The ESS measures the local frequency at bus 6 and regulates its
active power @xmath to provide frequency support. The frequency error
@xmath is filtered. @xmath is the time constant of the applied filter
and @xmath is the filtered signal as well as the input of the frequency
control transfer function @xmath . Finally, @xmath is the time constant
of the ESS active power dynamics. The interested reader can find more
details on the employed ESS model in [ milano_ortega:2019 ] .

In this example, @xmath is assumed to be a FO lead-lag controller
defined as:

  -- -------- -- --------
     @xmath      (4.32)
  -- -------- -- --------

The equations that describe the FO lead-lag are:

  -- -------- -------- -------- --------
     @xmath   @xmath            (4.33)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath is the controller’s state. The IO version of this
controller ( IO lead-lag) is obtained for @xmath .

We consider the same disturbance examined at the previous example (fault
at bus 4 cleared after @xmath ms). Two implementations of the IO
lead-lag are compared, namely, the IO lead-lag and the ORA -based IO
lead-lag controller for @xmath , @xmath rad/s. The results are shown in
Figure 4.10 . The value @xmath rad/s is high enough to trigger a
closed-loop high frequency resonant point, which significantly impacts
the control output. Figure 4.10 also shows that, while it is independent
from the approximation order, the overshoot can be avoided by properly
reducing the value of @xmath .

Next, the dynamic performance of the IO lead-lag is compared with two
ORA -based FO lead-lags, namely @xmath and @xmath , which have different
tuning. The parameters of the three controllers are shown in Table 4.1 .
For comparison, the gain and time constants of @xmath have been set
equal to the ones of the IO lead-lag. In this case, only the order
@xmath needs to be tuned. In general, however, the control parameters of
a FOC are not directly mapped onto those of its IO version and should be
retuned. @xmath represents the retuned controller.

To tune @xmath , @xmath s is fixed and the rest of the parameters are
selected by optimizing the local bus frequency profile through
trial-and-error.

The response of the frequency at bus 6 is shown in Figure 4.11 .
Shifting the fractional order @xmath ( @xmath ) allows reducing both the
frequency overshoot and the steady state error of the local bus
frequency. Retuning all control parameters leads to a further
performance improvement ( @xmath ).

##### Statcom

In this example, a STATCOM connected to bus 8 provides reactive power
support. The reactive power variations provided by the STATCOM rely on
the control of a Voltage Source Converter ( VSC ). The VSC is
represented by an average value model. It consists of an AC/DC
converter, an AC-side high voltage/medium voltage transformer, and a
DC-side condenser. The VSC parameters are given in [ ahsan:2018 ] .

The VSC is controlled by employing a vector-current control strategy.
The control is based on a dq-axis reference frame and a phase-locked
loop refers all phases to the AC side voltage phasor angle [ amirnaser ]
. The block diagram of the considered vector-current control is depicted
in Figure 4.12 . The d- and q- axis current components are decoupled by
the inner control loop, through the controllers @xmath and @xmath ,
respectively. In the STATCOM configuration, the outer control loop
utilizes the d-axis and q-axis current components to provide regulation
of the DC and AC voltages, through the controllers @xmath and @xmath ,
respectively.

@xmath , @xmath , @xmath and @xmath , are assumed to be FOPI
controllers. The equations that describe the behavior of the FOPI are:

  -- -------- -------- -------- --------
     @xmath   @xmath            (4.34)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath and @xmath , are the proportional and integral gains,
respectively; @xmath , @xmath , are the state and output variable of the
controller, respectively; and @xmath is the controller input. The IO
version of this controller, i.e. the classical PI controller, is
obtained for @xmath .

To study the impact of the STATCOM voltage regulation, a stressed
operating condition of the WSCC system is considered. With this aim, the
consumed power is increased by @xmath compared to the base case. Then,
for the purpose of transient analysis, an additional @xmath consumption
increase of the load connected at bus 8 is considered, occurring at
@xmath s. The system response is compared for the three following
scenarios: without the STATCOM ; with the STATCOM connected and all four
controllers modeled as classical PI s ; with the STATCOM connected and
the four controllers modeled as ORA -based FOPI s .

The values of the STATCOM control parameters are shown in Table 4.2 .
The inner control loop parameters are tuned based on the pole
cancellation technique as in [ ahsan:2019 ] , while the outer control
loop parameters are tuned by optimizing the local bus voltage profile
though trial-and-error.

Regarding the ORA parameters of the FOPI s , we have set the frequency
range at @xmath rad/s for the inner control loop; at @xmath rad/s for
the outer control loop. The dynamic order is @xmath for all FOPI
controllers.

Simulation results are presented in Figure 4.13 . The use of multiple
FOPI s for STATCOM voltage regulation is able to provide a significant
improvement to the local voltage response.

#### 4.5.2 All-Island Irish Transmission System

This section presents simulation results based on a detailed model of
the AIITS , which has been described in the case study of Section 2.6.1
. In addition to the components described in Section 2.6.1 , in the
system is connected also an I- AGC .

For the needs of this case study, the AIITS model has been validated by
utilizing the frequency data from a severe event that occurred in the
real system [ ahsan:gm2019 ] . The examined event refers to the tripping
– on the 28-th of February 2018 – of the VSC -based HVDC link East-West
Inter-Connector ( EWIC ) that connects the AIITS with the Great Britain
transmission system. At that moment, Ireland was exporting 470 MW to
Great Britain. Following the loss of the EWIC , the frequency in the
Irish grid showed a peak of 50.42 Hz, which led to the triggering of
over-frequency protections and wind farm active power generation
curtailment.

A comparison of the actual system response and the one simulated with
Dome is shown in Figure 4.14 . As it can be seen, the simulated
transient closely follows the real system behavior.

We examine the impact of FOC on the secondary frequency regulation of
the system. To this aim, the I- AGC is substituted with the FOI - AGC
model described by ( 4.31 ). The parameters of the FOI - AGC are tuned
to @xmath , @xmath . The ORA parameters are @xmath rad/s, @xmath .
Figure 4.15 shows the frequency response of the system with I- AGC and
FOI - AGC . The FOI - AGC is able to improve the frequency regulation of
the AIITS .

### 4.6 Conclusions

The chapter studies the theory, stability analysis, computer
implementation and practical design aspects of FOC s for power system
applications. It provides a comprehensive theory on fractional calculus
for control, as well as a detailed description of ORA -based FOC s . In
all considered examples, the proposed FOC s are shown to perform better
than the conventional IO versions while requiring only a little
additional tuning effort. This is a general result that shows the
potential of FOC s for power system applications.

## Chapter 5 Time-Delay-based Control

### 5.1 Introduction

Time delays appear in many control systems mainly because it takes time
to measure/acquire information, formulate a decision based on this
information, and implement the decision to achieve a particular control
mission. Delays arise in many applications, such as in network control
systems when sending/receiving information between physical locations [
Sipahi2011_CSM , Abidi:2016-IJRNC ] ; in connected vehicle models due to
delays in communication/sensing lines and human reaction times [
Helbing:2004-PRE , Orosz:2010-PTRSL ] ; and in the dynamics of
multi-agent systems [ Olfati:2005-ACC , qiao2016consensus ] .

Since delays are in general a source of poor performance and
instability, many studies have focused on the fundamentals of explaining
these characteristics within a control theoretic approach [
Gopalsamy:1992-BOOK , Bellman:1963-BOOK , Hale:1993-BOOK ] . Along these
lines, stability theory has been developed to address the peculiarities
of systems with delays and these results were more recently combined
with powerful convex optimization tools to study the stability of and
design controllers for time-delay systems, see, e.g. [ Fridman2016 ] .

While most results in the literature treat delays as undesirable, there
is also a large amount of work that has focused on the advantages of
having delays in a closed-loop setting. In these studies, the goal is to
incorporate delays intentionally into the closed-loop and systematically
analyze the dynamics to show that for certain delays and controllers,
the closed-loop dynamics can behave more desirably based on certain
metrics, such as response time [ Ramirez:2015-ISA , Kokame:2001-TAC ,
Ulsoy:2015-JDSMC ] . A simple “delay-based” controller is the one in
which a derivative of a signal @xmath is approximated using a first
order Euler’s approximation:

  -- -------- -- -------
     @xmath      (5.1)
  -- -------- -- -------

where @xmath is the delay [ Kokame:2001-TAC ] .

Delay-based controllers have a rich history with many promising
directions [ Smith:1959 , Pyragas:1992-PLA , Kallmann:1940 ] . Recent
studies have focused on analytical tractability. This is a challenging
effort since delays cause infinite dimensional system dynamics, study of
which cannot be performed using standard tools available for
finite-dimensional systems. A remedy to this was proposed by utilizing
some salient features of algebraic geometry on a class of delay systems,
and deriving analytical formulae that prescribe how to tune the delays
and control gains to achieve a desired performance from these systems [
Ramirez:2015-ISA , Ramirez:2017-SICON , Ramirez:2016-TAC ] . These
results have been recently extended to distributed control of
multi-agent systems with the goal to achieve fast consensus of agents [
Ramirez:2018-CYBERNETICS ] .

Despite the aforementioned advances, benefits of utilizing time delays
as part of controllers are yet to be fully explored in engineering
applications. In electric power engineering, the vast majority of
studies have emphasized only the destabilizing effects of time delays,
e.g. in WADC s , see, [ heydt:2002 , heydt_stochastic:08 , delay1 ] .
Some studies have focused on modeling of delays that arise in a
Wide-Area Measurement System ( WAMS ) [ wang:2012 , muyang:wams ] ,
while others have explored numerical methods for the stability analysis
of power systems with inclusion of delays [ multiple:16 , li:2019 ] .
Only very recently were delays in power systems viewed as tunable
control design parameters [ asghari:2018 , roy:2019 ] .

In light of the above discussion, there exists an opportunity to connect
the recent results in time-delay systems literature toward improving the
stability of power systems [ delaydamp ] . The main goal of this chapter
is to systematically assess the impact of the structure and control
parameter settings of delay-based PSS s on the small-signal stability
and in particular on the damping characteristics of power system
electromechanical oscillations.

The remainder of the chapter is organized as follows. Section 5.2
describes a comprehensive treatment for the stability analysis of small
and large scale time-delay systems. Section 5.3 provides analytical
results on the OMIB power system. Section 5.4 discusses a case study
based on the IEEE standard 14-bus system model. Finally, conclusions are
drawn in Section 5.6 .

### 5.2 Spectral Analysis of Time-Delay Systems

This section provides first some preliminaries on the spectral
properties of Linear Time-Invariant ( LTI ) systems with time delay.
This is followed by further discussions on a benchmark second-order
time-delay system. Then, for this system, the conditions that have to be
satisfied to guarantee stability independently from the magnitude of the
delay are rigorously deduced. Finally, this section shows how
delay-independent stability enables “connected” stability regions.

#### 5.2.1 Preliminaries

Since the study is concerned with the dynamics following small
perturbations, it is relevant to provide here a concise discussion on
the stability properties of linear systems affected by time delays.
Given that the focus is on time-invariant systems, consider the
following LTI system:

  -- -------- -- -------
     @xmath      (5.2)
  -- -------- -- -------

where @xmath and @xmath are matrices with constant entries, delay is
denoted by @xmath , and @xmath , @xmath , is the state vector. System (
5.2 ) is a set of linear functional differential equations of retarded
type, also known as linear Delay Differential Equations . Moreover, this
system is of retarded type, i.e. the highest derivative of the state is
not influenced by the delay term.

To assess exponential stability of system ( 5.2 ), one must study its
characteristic roots, which are the zeros of the system characteristic
function given by:

  -- -------- -- -------
     @xmath      (5.3)
  -- -------- -- -------

where the delay appears in the exponents as per Laplace transform. Due
to the presence of the exponential function, this equation is not in
polynomial form in @xmath , and is often called a quasi-polynomial [
Niculescu:2001 ] .

For a given delay @xmath , system ( 5.2 ) is exponentially stable if and
only if all its characteristic roots have negative real parts. That is,
for all @xmath satisfying @xmath , @xmath holds [ Stepan:1989-BOOK ] .
While in principle stability definition is not different from that for
ODE s ¹ ¹ 1 This is mainly because the spectrum of ‘retarded’ type LTI
systems exhibit similar characteristics as those of ordinary
differential equations [ Stepan:1989-BOOK ] . , computing @xmath to
assess stability is challenging due to the transcendental exponential
terms in @xmath that arise due to the delay @xmath . This is because
these terms bring about infinitely many characteristic roots,
computation of which is prohibitive [ Sipahi2011_CSM ] .

A remedy to the above issue is to recognize that the characteristic
roots of the system vary on the complex plane in a continuum as the
delay parameter changes in a continuum [ Datko:1978-QAM ] . Hence, the
only way the system may become unstable is that a characteristic root
(or a pair of roots) touches the imaginary axis of the complex plane at
@xmath , @xmath . That is, whenever @xmath for some @xmath and @xmath ,
the system ‘‘may be’’ in transition from stability to instability, or
vice versa ² ² 2 Note that it is necessary, but not sufficient, that the
system has at least one root on the imaginary axis for its transition
from stable to unstable behavior. For sufficiency, the system must be
stable for @xmath , @xmath . .

\definition

Consider that @xmath define a pair of roots of ( 5.3 ). Then, the system
is called:

-   @xmath -stable, if @xmath , @xmath , where @xmath is a prescribed
    exponential decay rate [ Ramirez:2015-ISA ] .

-   @xmath -stable, if @xmath , @xmath , where @xmath is a prescribed
    dominant oscillation damping ratio.

In contrast to the concept of @xmath -stability, which has been employed
in several studies, the term @xmath -stability is, to the best of the
author’s knowledge, first introduced for the needs of this thesis and,
in particular, to the aim of studying the structure of the delay-gain
parameter space and the damping characteristics of the system discussed
in the case study of Section 5.4 .

#### 5.2.2 Analytical Study of Second-Order LTI Systems

This section presents some salient stability characteristics of
second-order LTI systems, namely, a subset of the systems described by
equation ( 5.2 ). These results are critical to establish the stability
features of the OMIB power system.

##### 5.2.2.1 System Description

Consider the LTI system:

  -- -------- -------- -- -------
     @xmath   @xmath      (5.4)
  -- -------- -------- -- -------

where @xmath and @xmath is a scalar input. Next, let @xmath be defined
as a delay-based controller. Specifically, @xmath is designed as PR
controller:

  -- -------- -- -------
     @xmath      (5.5)
  -- -------- -- -------

where @xmath , @xmath , are the proportional, retarded gains,
respectively; and @xmath is a constant delay. Combining ( 5.4 ) and (
5.5 ), and taking the Laplace transform of the arising dynamics leads to
the closed-loop system characteristic equation @xmath , where

  -- -------- -------- -- -------
     @xmath   @xmath      (5.6)
  -- -------- -------- -- -------

is the system characteristic equation.

##### 5.2.2.2 Stability Analysis

In order to study the @xmath -stability of system ( 5.4 ), the change of
variable @xmath is applied to ( 5.6 ). This yields the following
quasi-polynomial:

  -- -------- -- -------
     @xmath      (5.7)
  -- -------- -- -------

where

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

Recall that the roots of the characteristic equation change continuously
with respect to variations of system parameters and time delays. The
system can thus change from stable to unstable, and vice versa, only if
a root (or a pair of roots) crosses the imaginary axis of the complex
plane. Hence, the @xmath -stability of ( 5.4 ) can be assessed by
finding the set of crossing points @xmath , that satisfy:

  -- -------- -- -------
     @xmath      (5.8)
  -- -------- -- -------

where @xmath . The set @xmath can be determined by considering the
magnitude and the argument of ( 5.8 ), as follows [ Ramirez:2016-TAC ] :

  -- -------- -------- -- --------
     @xmath   @xmath      (5.9)
     @xmath   @xmath      (5.10)
  -- -------- -------- -- --------

where @xmath , @xmath . Equations ( 5.9 ) and ( 5.10 ), allow tracing
the domains of stability that correspond to specified exponential decay
rates, i.e. the @xmath -stability map in the @xmath space.

Finally, note that if the time-delayed state in ( 5.4 ) is not utilized,
i.e. @xmath , then the closed-loop system behavior is determined by the
polynomial @xmath . In this case, dissipative terms included in the
system are defined by the coefficient of @xmath corresponding to the
first derivative of the state:

  -- -------- -- --------
     @xmath      (5.11)
  -- -------- -- --------

Here, the coefficient @xmath defines the damping of the open-loop system
oscillatory mode, while @xmath defines the amount of non-delayed
artificial damping introduced by the PR controller.

##### 5.2.2.3 Delay-Independent Stability

Under certain conditions, LTI systems with delays can remain stable no
matter how large/small the delays are. This phenomenon, known as
delay-independent stability, offers the advantage of rendering the
dynamics robustly stable against the delays.

The system ( 5.4 ) is stable regardless the magnitude of the time delay
@xmath provided that certain conditions on the gain @xmath , @xmath ,
are satisfied. For a given set @xmath , a necessary condition for delay
independent stability is that the roots of the system characteristic
equation never cross the imaginary axis, or equivalently:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.12)
  -- -------- -------- -- --------

Using ( 5.11 ) in ( 5.12 ) yields:

  -- -------- -------- -- --------
              @xmath      
     @xmath   @xmath      
     @xmath   @xmath      (5.13)
  -- -------- -------- -- --------

Note that the real part of ( 5.2.2.3 ) does not depend on @xmath , and
thus, in the complex plane, the left hand side defines the vertical line
with abscissa @xmath . In addition, @xmath defines in the complex plane
a unit circle centred at @xmath , regardless of the value of the delay
@xmath . Then, the critical condition for delay independent stability is
that the line @xmath is tangent to the unit circle. Equivalently:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.14)
  -- -------- -------- -- --------

From equation ( 5.14 ), the following cases are of interest [ delaydamp
] :

-   If @xmath , @xmath , the system is delay independent unstable in
    @xmath . Moreover, since @xmath , the system is unstable around the
    origin of the @xmath - @xmath plane. Hence, even if stable regions
    exist, these regions are guaranteed to be disconnected.

-   If @xmath , there are no delay independent stable or unstable
    regions.

-   If @xmath , @xmath , the system is delay independent stable in
    @xmath . The existence of a delay independent stable region around
    the zero gain guarantees that there is a large connected stable
    domain in the @xmath - @xmath plane. This feature is very important
    for two reasons: (i) there is the possibility that the dynamics can
    be characterized by high exponential decay rates for large delay
    values, (ii) the presence of a delay-independent stable region
    indicates that there exists at least one large, “connected” stable
    region from zero to infinite delay.

Notice that delay independent stable/unstable region is symmetric with
respect to the gain @xmath .

#### 5.2.3 Linear Large-Scale Time-Delay Systems

For a second-order LTI system with PR control, such as the one discussed
above, one can analytically identify the parameter regions with
specified exponential decay rates, as well as the conditions for delay
independent stability. However, real-world dynamical systems are larger
in size and much more complex. Capturing the impact of delays on the
behavior of large system models can be achieved only by carrying out a
numerical analysis. Nevertheless, such studies must be carefully guided
by the analytical understanding of small scale dynamical systems. This
is the approach utilized below.

This section describes next how to assess the stability of large scale
linear time-delay systems. To this aim, system ( 5.2 ) is extended to
include multiple delays @xmath . The resulting LTI dynamical system is
described through the following set of DDE s :

  -- -------- -- --------
     @xmath      (5.15)
  -- -------- -- --------

where @xmath , @xmath , The characteristic matrix of ( 5.15 ) has the
following form [ multiple:16 ] :

  -- -------- -- --------
     @xmath      (5.16)
  -- -------- -- --------

Since ( 5.16 ) is transcendental, it has infinitely many eigenvalues,
and only an approximation of the solution is possible. Different
approaches have been proposed to overcome this problem [ multiple:16 ] .
In this chapter, the DDE system ( 5.15 ) is transformed to a formally
equivalent set of Partial Differential Equations , which has infinite
dimensions. The PDE system is then reduced to a finite dimensional
problem through Chebyshev discretization [ bellen:2000 , Breda:2015-BOOK
] . If @xmath is the number of points of the Chebyshev differentiation
matrix [ multiple:16 ] , then discretization leads to an approximate
linear matrix pencil in the form:

  -- -------- -- --------
     @xmath      (5.17)
  -- -------- -- --------

where the matrix @xmath has dimensions @xmath . The spectrum of ( 5.17 )
– which can be found using any common numerical method, e.g. the QR
algorithm [ Francis ] – represents an approximate spectrum of ( 5.16 ).
The Chebyshev discretization technique has been successfully applied to
single and multiple time-delay systems, e.g. to power systems with
constant and stochastic delays affecting damping controllers [
muyang:wams , tzounas2018 ] .

After the above analysis is complete, one can reveal the most critical
eigenvalue(s), by comparing the damping ratios @xmath of all computed
eigenvalues. This work is concerned with the parametric analysis in a
delay versus control gain space. The above analysis therefore allows
building a map of specified dominant oscillation damping ratio @xmath .
In the remainder of the chapter, this map is referred to as the @xmath
-stability map .

#### 5.2.4 Non-Linear Large-Scale Time-Delay Systems

Consider the non-linear DAE power system model ( 2.1 ), where for
simplicity, but without loss of generality, no inputs are included and
@xmath , @xmath , see ( 2.2 ). This system can be written as:

  -- -------- -------- -------- --------
     @xmath   @xmath            (5.18)
              @xmath   @xmath   
  -- -------- -------- -------- --------

The presence of time delays, for example, in control loops, changes the
set of DAE s ( 5.18 ) into a set of Delay Differential-Algebraic
Equations . Inclusion of time delays in ( 5.18 ) yields the following
system:

  -- -------- -------- -------- --------
     @xmath   @xmath            (5.19)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath , @xmath , and @xmath , @xmath are the delayed state and
algebraic variables, respectively. Suppose that the system includes a
single constant delay @xmath . Then, one has:

  -- -------- -------- -------- --------
     @xmath   @xmath            (5.20)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath is the current time.

The equilibrium of ( 5.20 ) is defined in the time interval @xmath .
This implies the assumption that a time equal to @xmath has to elapse
before a valid equilibrium of the system is reached. Although there is
no theoretical upper bound to @xmath , the aforementioned assumption may
render the consideration of a very large value impractical. A limit case
example is a PSS whose control signal is affected by an infinite delay.
In principle, infinite time has to pass before the equilibrium of a
system with inclusion of such PSS is obtained. The issue is resolved by
modeling only delays that lie in the time-scale of the dynamics of
interest. Variables affected by delays that are much larger than the
time-constants of the system dynamics are, in fact, irrelevant to the
model under study which, in turn, can be conveniently modified to
disregard such variables. In the above limit case example, the delayed
PSS does not have any effect on the system and thus, it can be simply
disregarded from the system model. In this thesis, only delays that lie
in the same time scale with the rest of the system dynamics are
considered.

When @xmath does not appear in the algebraic equations of ( 5.19 ), this
leads to the index-1 Hessenberg form of DDAE s :

  -- -------- -------- -------- --------
     @xmath   @xmath            (5.21)
              @xmath   @xmath   
  -- -------- -------- -------- --------

Model ( 5.21 ) is adopted instead of ( 5.19 ), since it allows
simplifying the form of the characteristic equation of the corresponding
linearized system, while being adequate for the applications considered
in this chapter. The interested reader can find a detailed study on the
SSSA for non-index 1 Hessenberg form systems of DDAE s in [
hessenberg:16 ] .

For sufficiently small disturbances, and for the purpose of SSSA , see
Chapter 2 , ( 5.21 ) can be linearized around a valid stationary point,
as follows:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.22)
     @xmath   @xmath      (5.23)
  -- -------- -------- -- --------

where @xmath , @xmath , @xmath , @xmath , are the Jacobian matrices of
the delay-free variables; and @xmath , @xmath , @xmath , are the
Jacobian matrices of the delayed variables of ( 5.22 ) and ( 5.23 ).

In the linearized system ( 5.22 ), ( 5.23 ), the algebraic variables
@xmath , @xmath can be eliminated, under the assumption that @xmath is
not singular. Substitution of ( 5.23 ) into ( 5.22 ) yields:

  -- -------- -- --------
     @xmath      (5.24)
  -- -------- -- --------

where

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

Applying the Laplace transform in ( 5.24 ) yields the following,
quasi-polynomial characteristic matrix:

  -- -------- -- --------
     @xmath      (5.25)
  -- -------- -- --------

Note that the form of the characteristic matrix ( 5.25 ) can be
retrieved from ( 5.16 ) for @xmath and @xmath .

### 5.3 One-Machine Infinite-Bus System

Consider the simple example of the OMIB system shown in Figure 5.1 .
This section first describes the classical machine model and then
includes in such a model a simplified PSS with a PR control, i.e. with
two input signals, one instantaneous and one delayed.

#### 5.3.1 Classical Model

The classical per-unit model of this system is as follows [ kundur:94 ]
:

  -- -------- -------- -------- --------
     @xmath   @xmath            (5.26)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath , @xmath , are the rotor angle and the rotor speed of the
synchronous machine, respectively; @xmath and @xmath are the mechanical,
electrical power output of the machine, respectively. In addition,
@xmath is the machine mechanical starting time; @xmath is the machine
rotor damping coefficient; and @xmath is the nominal synchronous angular
frequency in rad/s.

The electrical power @xmath is described by the following non-linear
expression:

  -- -------- -- --------
     @xmath      (5.27)
  -- -------- -- --------

where @xmath , @xmath , are the (constant) voltage magnitude and angle
at the infinite bus; @xmath is the internal electromotive force of the
synchronous machine, which is taken as constant, by assuming an integral
AVR . @xmath is the total reactance, comprising the machine transient
reactance ( @xmath ) and the line reactance ( @xmath ), where the latter
is referred to the machine power base.

Defining the system state vector as @xmath , making use of ( 5.27 ) and
linearizing ( 5.26 ) around a valid equilibrium @xmath yield:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.28)
     @xmath   @xmath      (5.29)
  -- -------- -------- -- --------

where @xmath and @xmath . Equations ( 5.28 ) and ( 5.29 ) can be
rewritten as a second-order LTI system:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.30)
  -- -------- -------- -- --------

where @xmath and

  -- -------- -- --------
     @xmath      (5.31)
  -- -------- -- --------

#### 5.3.2 Power System Stabilizer with PR Control

In its simplest form, the PSS measures the machine rotor speed, i.e.
@xmath , and introduces a fictitious damping into the swing equation (
5.28 ). The linearized closed-loop system can therefore be written as:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.32)
  -- -------- -------- -- --------

The damping controller is modeled here as a proportional PSS with two
control channels, one with and one without delay. The PSS diagram is
shown in Figure 5.2 .

Dual-channel PSS s have been employed in the past, e.g. as
decentralized-hierarchical schemes for wide-area stabilizing control [
kamwa:2001 ] . The dual-channel PSS output is described as:

  -- -------- -- --------
     @xmath      (5.33)
  -- -------- -- --------

Merging ( 5.28 ), ( 5.32 ) and ( 5.33 ) leads to the following
closed-loop system representation:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.34)
  -- -------- -------- -- --------

which is exactly in the form of ( 5.4 )-( 5.5 ). Applying the Laplace
transform and substituting the initial conditions @xmath , yields the
following characteristic quasi-polynomial:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.35)
  -- -------- -------- -- --------

Comparing the quasi-polynomial ( 5.35 ) with the one in ( 5.6 ), one has
@xmath , @xmath , @xmath . Therefore, the analysis of @xmath -stability
and the conditions for delay independent stability can be studied
through the derivations of Section 5.2.2 . The amount of friction
included in the delay-free OMIB system is according to ( 5.11 ):

  -- -------- -- --------
     @xmath      (5.36)
  -- -------- -- --------

The critical condition for which the OMIB system is delay independent
stable is that @xmath is tangent to the unit circle. Equivalently, one
has:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.37)
  -- -------- -------- -- --------

#### 5.3.3 Illustrative Example

We provide a numerical example on the closed-loop OMIB system. Let
@xmath pu, @xmath pu, @xmath rad, @xmath pu, @xmath pu. Then, the
initial value @xmath of the rotor angle is given by:

  -- -------- -- --------
     @xmath      (5.38)
  -- -------- -- --------

The examined equilibrium is hence @xmath . Let also @xmath MW s/MVA, and
@xmath rad/s ( @xmath Hz system). Then, @xmath pu in ( 5.30 ). The
following sections discuss the @xmath -stability map of the system for
the three cases of negative, zero and positive values of @xmath .

##### Case 1

For @xmath , the stability map is shown in Figure 5.3 . The map has a
symmetric delay independent unstable region obtained for @xmath . In
addition, PR control can stabilize the system, provided that the delay
is @xmath s and a proper @xmath is selected (see e.g. point @xmath ).

There also exist stable regions of the map in Figure 5.3 for delays
higher than @xmath s. For example, the system is stable around the point
@xmath . Note, however, that obtaining the equilibrium of a delayed
system implies that a time equal to the maximum delay included in the
system has elapsed but, meanwhile, the system may have been already
rendered unstable. Indeed, Figure 5.3 indicates that there is no path to
@xmath without crossing the system stability boundary, which implies
that the system necessarily becomes unstable before actually reaching
@xmath .

The effect of crossing the stability boundary of the closed-loop OMIB
system is illustrated with a time domain simulation. Suppose that the
non-linear system ( 5.26 ) with the inclusion of the PR controller (
5.33 ), operates around the stable equilibrium defined by the point
@xmath of Figure 5.3 .

The system is numerically integrated considering a small noise on the
measurement of the OMIB rotor speed. The noise is a normal process with
zero mean and standard deviation of @xmath . The noise amplitude is set
to a small value with the purpose of showing the dynamics of the system
in a neighbourhood of the equilibrium point. At @xmath s, the gain and
delay are switched to @xmath and @xmath , respectively, so that the
system is set at the new equilibrium point @xmath .

Figure 5.4 shows the simulation result, and indicates that, as expected,
attempting to jump to a different, not connected stable region by
crossing the stability boundary during a transient, renders the system
unstable. Thus, @xmath is an example of infeasible stationary point, and
thus, the delay margin of the system is @xmath s.

##### Case 2

The @xmath -stability map for @xmath is presented in Figure 5.5 . In
this case, the stability of the system depends on the magnitude of the
delay, regardless of the value of the gain @xmath . In fact, the
horizontal line @xmath comprises bifurcation points. The delay-free
closed-loop system is stable for @xmath and unstable for @xmath .
Provided that a proper positive @xmath value is selected and that @xmath
s (see point @xmath ), the delayed system is stable.

There also exist stable regions for @xmath s. For example, the system is
small-signal stable around @xmath . However, similarly to the discussion
of Case 1, the system will likely lose stability before actually
reaching e.g. @xmath . An exception occurs if the system crosses @xmath
, which is a bifurcation point that connects two stable regions. In this
scenario, the first order information provided by the linearized system
in Figure 5.5 is inconclusive on the feasibility of operating at @xmath
.

##### Case 3

The stability map for @xmath is shown in Figure 5.6 . In this case, the
stable region is compact. For @xmath the system is stable regardless of
the magnitude of the delay @xmath . Moreover, all points of Figure 5.6
with @xmath represent stable and feasible stationary points of the
linearized OMIB system. For example, such points are @xmath and @xmath .

The results of a time domain simulation, including the same noise model
on the rotor speed measurement as in Case 1, are shown in Figure 5.7 .
At @xmath s, the system equilibrium is switched from @xmath to @xmath .
The trajectory shows that the machine maintains synchronism.

Overall, proper design of the PSS given by the PR law ( 5.33 ) allows
unifying the @xmath -stable regions, and thus allows one to operate the
OMIB system under the presence of large delays. In particular, this is
achieved by properly adjusting the control parameter @xmath which
introduces delay-free artificial damping to the system.

Finally, the delay @xmath in this example is assumed to be a fully
controlled parameter. However, the above discussion is relevant also for
systems with inherent delays. For the sake of example, consider again
point @xmath of Figure 5.6 . Suppose that the corresponding delay, i.e.
@xmath s, represents an uncontrolled physical phenomenon, e.g. the
latency of a measurement transmitted through a communication system. In
power systems, this situation describes, for example, the behavior of a
wide area measurement system [ muyang:wams ] . In such a scenario, the
parameter @xmath can be adaptively adjusted to add an artificial delay,
which ensures that the system under the total delay @xmath always
operates at a region of high exponential decay rate. Along these lines,
see, for example, the idea of delay scheduling in [ Olgac:2005 ] .

### 5.4 Case Study: IEEE 14-bus System

We next study the stability characteristics of the IEEE 14-bus system.
The single-line diagram of this system is depicted in Figure 5.8 . The
system consists of fourteen buses, five synchronous machines, twelve
loads, twelve transmission lines and four transformers. All machines are
equipped with AVR s . The static and dynamic data of the system can be
found in [ milano:10 ] . Simulations in this section are carried out
using Dome.

Without any PSS installed to the system, SSSA shows that the rightmost
pair of eigenvalues is @xmath , and thus, the system is unstable around
the examined equilibrium. A PSS is utilized to stabilize the system. The
PSS model employed in this section is described by the following DAE s :

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

where @xmath , @xmath , @xmath are the PSS state variables; @xmath ,
@xmath , @xmath , @xmath , @xmath are time constants; @xmath is the PSS
gain. In addition, the input @xmath is the local rotor speed, which,
depending on the examined scenario, may be delayed or not. Finally, the
output signal @xmath is an additional input to the local AVR reference,
so that the PSS provides damping of electromechanical oscillations
through excitation control. The PSS block diagram is depicted in Figure
5.9 .

To study the effect of time-delayed damping control on the small signal
stability of the IEEE 14-bus system, two damping control configurations
are compared, namely, a conventional PSS with delayed input signal; and
a PSS that consists of two channels, one delayed and one non-delayed. In
both cases, the damping controller is installed at the AVR of the
synchronous machine connected at bus 1.

The impact of time delay in each case is evaluated by means of
constructing the @xmath -stability map in the delay-control gain space.
For each point of the plane, an eigenvalue analysis is carried out by
applying the Chebyshev discretization technique (see Section 5.2.3 ).
The spectrum of the approximate matrix pencil is calculated using the QR
algorithm with LAPACK [ lapack ] . Then, comparison among the
eigenvalues allows obtaining the most poorly damped one determining the
@xmath -stability.

#### Standard PSS with Delayed Input Signal

The employed PSS model is as shown in Figure 5.9 . The control input
signal is considered to be the delayed local rotor speed measurement:

  -- -------- -------- -- --------
     @xmath   @xmath      (5.39)
  -- -------- -------- -- --------

where @xmath is an intentional constant delay. The PSS time constant
values are summarized in Table 5.1 .

The dynamic order of the system is @xmath . Setting the number of points
of the Chebyshev differentiation matrix to @xmath , @xmath eigenvalues
are found in total. The system @xmath -stability map in the @xmath -
@xmath plane is shown in Figure 5.10 . The map consists of distinct and
not compact stable regions, which stems from the fact that, without the
PSS , the system is unstable. For @xmath , the system is unstable
regardless of the magnitude of the delay. The delay margin of the system
is @xmath s and is obtained for @xmath . Thus, operation under the
presence of a large delay, e.g. @xmath s, is infeasible.

#### Dual-channel PSS

In the OMIB system example of Section 5.3 , a compact stable region in
the delay-control gain plane can be achieved by employing a PR -based
PSS scheme, tuned to operate the system at a point with good damping
characteristics.

We apply the same principle in the IEEE 14-bus system. To this aim, we
test a PSS with two control channels: first channel is not delayed;
second channel is delayed. The examined dual-channel PSS configuration
is shown in Figure 5.11 .

The first channel, namely Not Retarded PSS (NRPSS), is tuned to render
the non-delayed system small-signal stable. The control input of NRPSS
is the local rotor speed @xmath . The second channel, namely Retarded
PSS (RPSS), tunes the delay dynamics so that the system operates at a
point with good damping characteristics. The input signal of the RPSS is
the delayed rotor speed @xmath , where @xmath is the magnitude of the
delay. The time constants of both NRPSS and RPSS are as summarized in
Table 5.1 . In addition, @xmath and @xmath denote the gains of NRPSS and
RPSS, respectively. An analogy between the dual-channel PSS
configuration and the PR-based PSS of the OMIB system example of Section
5.3 is given in Table 5.2 .

The NRPSS gain is tuned so that the system without delayed control is
small-signal stable. For @xmath , @xmath , SSSA shows that the rightmost
pair of eigenvalues is @xmath . The most poorly damped pair is @xmath ,
which yields a damping ratio @xmath .

Considering @xmath , the @xmath -stability map of the system is
constructed in the @xmath plane. In this case, the dynamic order of the
system is @xmath and, using @xmath , @xmath eigenvalues are in total
calculated to obtain each point of the map. The resulting map, presented
in Figure 5.12 , shows that the stable region is compact, while the area
with @xmath is delay independent stable. In Figure 5.12 , maximum
damping is @xmath and is achieved for @xmath s, i.e. a relatively large
delay value.

### 5.5 Remarks

Delays arising in power system damping controllers are typically not
tunable but inherent, i.e. they represent measurement and/or
communication latencies. Although studying the impact of inherent delays
is not the main focus of this chapter, this section briefly discusses
their relevance to the results presented above.

Regarding the standard PSS with delayed input signal of Section 5.4 ,
assuming that @xmath is inherent does not change the structure of the
stability map in Figure 5.10 but only changes the interpretation of the
role of delay. Since in this case @xmath is not tunable, the small delay
margin of @xmath s may be a severe stability issue. For inherent delays
that have a small magnitude, a delay-dependent design of a standard PSS
allows increasing the delay margin and avoid instability.

In fact, in Figure 5.10 , the region of the highest damping @xmath is
obtained for a non-zero delay value. The closed-loop loci related to the
critical system mode have an angle of departure closer to @xmath when
@xmath s. In other words, the phase shift introduced by the PSS is
optimal when a small delay is present.

In the case of the dual-channel PSS of Section 5.4 , if the delay is
inherent, the structure of Figure 5.12 implies that if one introduces a
proper artificial delay on top of the inherent delay, the system can be
led to a region of better damping characteristics. This extra delay can
be introduced, for example, by a properly designed controller that
adjusts both the delay and gain values following a stable path, through
consecutive quasi-steady state shifts of the system equilibrium.

### 5.6 Conclusions

This chapter presents new results on time-delayed damping control of
power system synchronous machine electromechanical oscillations. The
chapter focuses on the delay-control gain space, and studies the
stability boundaries, as well as the relationship between the existence
of delay-independent stability and connected stability domains.
Connected stable regions are obtained by employing a PSS with two
control channels and indicate that best damping characteristics may be
achieved for large delay values.

The OMIB system with inclusion of a PSS is a relevant example of power
system model that allows an analytical assessment of its stability when
delays are considered. This chapter shows the conditions for which the
stability of the linearized OMIB equations is guaranteed independently
from the magnitude of the delay, and present how system response time as
measured by the concept of @xmath -stability can be understood in view
of recent results [ Ramirez:2015-ISA ] .

On the plane of controller gain vs. intentional delay, the linearized
equations of the OMIB system typically exhibit stable regions that are
separated by unstable regions. This however does not allow tuning the
“non-linear” dynamics to operate in separate stable regions as this
would require the non-linear dynamics to first cross through an unstable
region. This practically-relevant aspect of delayed dynamical systems is
addressed by presenting the conditions under which the stable region of
the OMIB system can be all “connected” so that the non-linear dynamics
can be tuned for any settings inside this region. Finally, the
analytical results based on the benchmark OMIB system are extended
through numerical methods and the concept of @xmath -stability.
Specifically, the IEEE 14-bus system model serves to illustrate how to
achieve improved damping characteristics for a set of controller gains
and intentional delays, and how to achieve a fully connected stability
region to be able to fully explore the parameter space, without
introducing instability.

## Chapter 6 One-Step Delay Approximation

### 6.1 Introduction

As discussed in Chapter 5 , introducing time delays in a set of DAE s
turns it into a set of functional DAE s of retarded type, also known as
DDAE s . DDAE s are typically employed to model physical time delays. In
power systems, apart from their application to automatic control, mostly
due to the inevitable latencies that are present in measurement and
communication systems, see Chapter 5 , delays have been also considered
to study the effect of long transmission lines [ venk:94 ] . In
addition, time delays are inherent to phenomena occuring in many other
engineering applications, such as circuit and microwave theory [
bellen:99 , minasian:06 ] .

A property of constant delays is that the Jacobian elements with respect
to retarded variables are null. This feature has been utilized for the
simulation of EMT s that include long transmission lines [ WatsonEMTP ]
or control systems [ 317667 , 1583706 ] . The sending- and receiving-end
variables of long overhead lines, in fact, are decoupled by the
transmission delay and, hence, sections of circuits connected through
long lines are naturally decoupled. In [ 1583706 ] , on the other hand,
the control system is solved at the previous step of the EMT circuit
equations which, de facto , introduces a delay in the control equations.
This allows ordering the Jacobian matrix of the DAE s with a block
diagonal structure (see Figure 6.1 .a). Each block can be handled
separately at each time step – which is of the same order of the delay,
i.e. @xmath s – and allows exploiting parallelization techniques.

The effort of developing parallel algorithms in EMT s simulations stems
from the fact that simulations of this type are slow for large systems [
uriante:13 ] . For systems with the same number of buses, simulations
based on quasi-steady state phasors and electromechanical models are
much faster. However, the Time Domain Integration ( TDI ) of large power
systems requires iteratively solving stiff non-linear hybrid DAE s ,
which is still a time-consuming task to complete. The time required to
complete a @xmath contingency analysis, in fact, can be a critical
constraint, e.g. for on-line dynamic security assessment (see, for
example, Chapter 15 of [ grigsby:2007 ] ).

The DAE s for transient stability analysis are naturally coupled through
the admittance matrix of the grid, which is modeled with a set of
algebraic equations, as well as by secondary frequency controllers, and
generally do not include delays. This leads to a Bordered-Block Diagonal
( BBD ) structure of the Jacobian matrix (see Figure 6.1 .b) [
Shahidehpour:2003 ] . The BBD structure can be enforced in any set of
DAE s through diakoptics , i.e. by introducing additional algebraic
equations [ kron:1963 , URIARTE2012146 ] . These equations increase the
order of the system but tend to increase sparsity and, in some cases,
may also speed up the factorization of the Jacobian matrix of the
system. A technique conceptually similar to diakoptics, called MANA,
namely Modified Augmented Nodal Analysis, has been utilized in
unbalanced power flow analysis [ 6624122 ] and EMT s [ 8274156 ] but has
no clear application for single-phase equivalent phasor-based transient
stability models.

The main idea of this chapter is that, if one includes fictitious delays
in the power system transient stability model, the Jacobian matrix can
be further decoupled (see Figure 6.1 .c) without increasing the system’s
order, thus increasing sparsity and reducing the computational burden of
numerical methods. In this vein, in [ VCutsemCOI ] , the authors
proposed the use of the CoI at the previous time step to decouple the
equations of the rotor angles of the synchronous machines. In [
VCutsemCOI ] , the “slightly” delayed CoI was tested on a 4-bus system
using the Implicit Trapezoidal Method ( ITM ) with time step @xmath s
and showed not to affect the system transient response.

This chapter proposes a systematic way to implement and evaluate the
idea of including one-step-delays to a DAE model for transient stability
analysis. In order to ensure that the inclusion of fictitious one-step
delays in the non-linear DAE power system model does not have a
noticeable impact on the system trajectories, the following crucial
aspects of the technique are addressed: (i) only variables that do not
contribute to critical dynamic modes of the system are delayed. Such
variables are systematically identified based on the values of their
residues at the frequency range of the dynamics of interest; and (ii)
given a set of selected variables, a proper upper bound of the
integration time-step is established. This is done by recognizing that
the one-step-delay approximation in a coupled system can be formally
studied as a set of DDAE s [ osda ] .

The remainder of the chapter is organized as follows. Section 6.2
recalls a conventional implicit TDI scheme for power systems. Section
6.3 discusses the proposed approach to one-step-delay approximation.
Section 6.4 discusses how to select the variables of a DAE model to be
delayed. Section 6.5 provides a method to calculate the maximum
admissible delay for a given DDAE model. The case study is discussed in
Section 6.6 . Conclusions are drawn in Section 6.7 .

### 6.2 Implicit Integration of Power Systems

Consider the non-linear DAE power system model ( 2.1 ), where for
simplicity, but without loss of generality, no inputs are included and
@xmath , @xmath , see ( 2.2 ). This system can be written as:

  -- -------- -------- -------- -------
     @xmath   @xmath            (6.1)
              @xmath   @xmath   
  -- -------- -------- -------- -------

Equations of system ( 6.1 ) are stiff , i.e. some numerical methods,
when employed for the solution of ( 6.1 ), are unstable. This happens
for two reasons:

1.  the time constants of the differential equations typically span
    multiple time scales;

2.  and the algebraic equations can be viewed as infinitely fast
    differential equations associated with zero time constants.

There exist both explicit and implicit methods for the numerical
integration of ( 6.1 ). Explicit numerical methods are known to be
impractical for the integration of this system, since for stiff problems
they require very small time steps which in turn leads to poor
performance. Thus, a more common approach to numerically integrate ( 6.1
) is to use an implicit method with a direct solver. Employing an
implicit method allows a simultaneous solution of both state and
algebraic variables [ stott:1979 ] , and requires the solution of the
following set of non-linear equations:

  -- -------- -------- -------- -------
     @xmath   @xmath            (6.2)
              @xmath   @xmath   
  -- -------- -------- -------- -------

where @xmath , ( @xmath : @xmath ) and @xmath , ( @xmath : @xmath ) are
non-linear functions that depend on the differential and algebraic
equations, respectively, as well as on the applied implicit method. The
update of the state and algebraic variables at each time step can be
expressed as follows:

  -- -------- -- -------
     @xmath      (6.3)
  -- -------- -- -------

where @xmath is the time step length; @xmath denotes the vector @xmath
at the @xmath -th iteration of time @xmath . The increments @xmath ,
@xmath are obtained by employing the Newton method, as follows:

  -- -------- -- -------
     @xmath      (6.4)
  -- -------- -- -------

where @xmath , @xmath , is defined as:

  -- -------- -- -------
     @xmath      (6.5)
  -- -------- -- -------

where @xmath , @xmath , @xmath , @xmath are the Jacobian matrices of
@xmath and @xmath at the @xmath -th iteration of time @xmath .

Among the various implicit numerical methods utilized by power system
software tools to define equations ( 6.2 ), for simplicity but without
lack of generality, this chapter considers only one, namely the ITM ,
which is a well-known and widely utilized @xmath -stable integration
scheme particularly adequate to handle DAE stiffness. The ITM leads to
the following form of ( 6.2 ):

  -- -------- -------- -------- -------
     @xmath   @xmath            (6.6)
              @xmath   @xmath   
  -- -------- -------- -------- -------

where @xmath is the time step length; @xmath , @xmath and @xmath . The
Jacobian matrix ( 6.5 ) at the @xmath -th iteration of time @xmath is
defined as:

  -- -------- -------- -------- -------
     @xmath   @xmath            (6.7)
              @xmath   @xmath   
              @xmath   @xmath   
              @xmath   @xmath   
  -- -------- -------- -------- -------

where @xmath , @xmath , @xmath , @xmath are the Jacobian matrices of the
DAE s .

### 6.3 One-Step-Delay Approximation

Assume that some variables – how to select such variables is discussed
later in this chapter – of the DAE system ( 6.1 ) are substituted with
their values at the previous time step. This system can be formally
studied as a system of non-linear DDAE s with a constant delay, as
follows:

  -- -------- -------- -------- -------
     @xmath   @xmath            (6.8)
              @xmath   @xmath   
  -- -------- -------- -------- -------

where @xmath , @xmath , @xmath , @xmath , are the delayed state and
algebraic variables, respectively, as follows:

  -- -------- -------- -------- -------
     @xmath   @xmath            (6.9)
              @xmath   @xmath   
  -- -------- -------- -------- -------

Note that ( 6.8 ) is an approximation of ( 6.1 ). The delay @xmath , in
fact, is fictitious as it does not model any physical phenomenon.

The numerical integration of ( 6.8 ) requires the solution of the
following set of non-linear equations [ delay1 ] :

  -- -------- -------- -------- --------
     @xmath   @xmath            (6.10)
              @xmath   @xmath   
  -- -------- -------- -------- --------

If at the @xmath -th iteration of time @xmath , @xmath , @xmath , @xmath
, @xmath , are the delay-free and @xmath , @xmath , @xmath , @xmath ,
are the Jacobian matrices of the delayed variables of system ( 6.8 ),
then the following identities apply:

  -- -------- -------- -------- --------
     @xmath   @xmath            (6.11)
              @xmath   @xmath   
              @xmath   @xmath   
              @xmath   @xmath   
  -- -------- -------- -------- --------

The main difference between ( 6.10 ) and ( 6.2 ) is that the Jacobian
matrices of ( 6.10 ) do not include the terms that depend on @xmath and
@xmath , as these variables are “constants” at time @xmath . One has:

  -- -------- -- --------
     @xmath      (6.12)
  -- -------- -- --------

where

  -- -------- -- --------
     @xmath      (6.13)
  -- -------- -- --------

The terms @xmath , @xmath , @xmath , @xmath are the delay-free Jacobian
matrices of @xmath and @xmath . For a detailed description on the
modifications required by the ITM in order to integrate a set of DDAE s
with inclusion of more general (time-varying and state-dependent)
delays, the interested reader may refer to [ delay1 ] . Since matrix
@xmath is composed only of the delay-free Jacobian matrix elements of
@xmath and @xmath , @xmath is sparser than @xmath . The scope of this
chapter is to take advantage of the fact that approximating ( 6.1 ) with
( 6.8 ) leads to a sparser Jacobian matrix.

### 6.4 Selection of Variables to be Delayed

Inclusion of fictitious time delays in a set of DAE s introduces an
inevitable approximation in its transient response. It is thus crucial
to identify the variables and the equations that, if subject to a small
variation, do not lead to a significant change in the system
trajectories. With this regard, delaying variables that are slower than
the dynamics of main interest, causes a smaller variation in the system
trajectories.

Another aspect is the position of the selected elements in the Jacobian
matrix. Removing elements that introduce dense rows/columns in the
Jacobian leads not only to a sparsity increase, but also to decoupling
of the system equations, which in turn allows exploiting
state-of-the-art algorithms that parallelize the factorization. Such
algorithms usually exploit the specific formulation of current-injection
power system models and the admittance matrix to take advantage of the
BBD structure of the Jacobian matrix [ Fong1978 , FabozziLNewton ] .
Exploiting parallelization, however, is out of the scope of this
chapter. Thus the general DAE model ( 6.1 ) is considered.

#### 6.4.1 Systematic Selection of Variables

This section provides a systematic small-signal based method to select
the delayed variables @xmath and @xmath of a model, based on the
geometric approach [ hamdan:87 , freqpss:powertech ] . The geometric
approach has been widely employed in control design to provide a measure
for (i) the observability of a dynamic mode from a signal; (ii) the
controllability of a mode from a control input placement. The product of
these two measures provides the joint observability/controllability
index. The smaller this index is, the less the examined mode is affected
by the specific signal-control input set. In the following, the
geometric approach is utilized to determine the sensitivity of system
modes to variations of all non-zero elements of the DAE Jacobian
matrices.

Differentiating ( 6.1 ) around an equilibrium point yields:

  -- -------- -------- -------- --------
     @xmath   @xmath            (6.14)
              @xmath   @xmath   
  -- -------- -------- -------- --------

Elimination of @xmath leads to @xmath , where the matrix @xmath has
@xmath finite eigenvalues @xmath . For rotor angle stability studies,
eigenvalues of interest are those that define oscillatory modes with
natural frequency @xmath Hz [ arriaga:82_2 ] . In the remainder of the
chapter, these modes (and the respective eigenvalues) are referred to as
relevant .

A perturbation is introduced into ( 6.14 ) as follows:

  -- -------- -------- -------- --------
     @xmath   @xmath            (6.15)
              @xmath   @xmath   
  -- -------- -------- -------- --------

where @xmath , @xmath are the perturbation vectors of the differential,
algebraic equations, respectively; and @xmath , @xmath are the
perturbation matrices associated with @xmath and @xmath , respectively.
Eliminating @xmath from ( 6.15 ) yields:

  -- -------- -------- -- --------
     @xmath   @xmath      (6.16)
  -- -------- -------- -- --------

Considering zero perturbation matrices in ( 6.16 ), as discussed in [
hamdan:87 ] , the output matrices of the state and algebraic variable
variations can be defined as @xmath , @xmath , respectively.

Let @xmath , be the @xmath -th row, @xmath -th column element of @xmath
; @xmath the element of @xmath ; @xmath the @xmath -th row, @xmath -th
column element of @xmath ; and @xmath the @xmath -th row, @xmath -th
column element of @xmath . Then, the geometric
controllability/observability ( @xmath ) measures of @xmath from the
Jacobian matrix elements of the system are determined as follows:

  -- -------- -- --------
     @xmath      (6.17)
  -- -------- -- --------

where @xmath is the @xmath -th row of @xmath ; @xmath is the @xmath -th
column of @xmath ; @xmath and @xmath denote the modulus and Euclidean
norm, respectively;

  -- -------- -- --------
     @xmath      (6.18)
  -- -------- -- --------

where @xmath is the @xmath -th row of @xmath ; @xmath is the @xmath -th
column of @xmath ;

  -- -------- -- --------
     @xmath      (6.19)
  -- -------- -- --------

where @xmath is the @xmath -th row of @xmath ; @xmath is the @xmath -th
column of @xmath ; and

  -- -------- -- --------
     @xmath      (6.20)
  -- -------- -- --------

where @xmath is the @xmath -th row of the output matrix @xmath ; @xmath
is the @xmath -th column of the perturbation matrix @xmath .

Expressions ( 6.17 )-( 6.20 ) allow selecting the elements of the
Jacobians of ( 6.14 ) that can be delayed and thus can be eliminated
from the matrices @xmath , @xmath , @xmath and @xmath . Specifically,
elements of such matrices that have low @xmath values for all relevant
modes of the system, do not noticeably impact the dynamic behavior of
the system. Therefore, a candidate to be delayed is any element whose
@xmath value is below a given threshold @xmath . Note that @xmath ,
@xmath , @xmath and @xmath are stored as sparse matrices, hence only
non-zero elements are considered for the analysis above, which leads to
an efficient implementation.

#### 6.4.2 Illustrative Examples

The criteria described above are further discussed through some
illustrative examples, which are based on well-known devices and models
utilized in transient stability analysis. In particular, this chapter
considers devices and controllers that are slow and/or couple several
variables of the system.

##### 6.4.2.1 Center of Inertia

The algebraic variable of the CoI speed ( @xmath ) is defined by the
following algebraic equation:

  -- -------- -------- -- --------
     @xmath   @xmath      (6.21)
  -- -------- -------- -- --------

where @xmath , @xmath , is the state of the speed of the @xmath -th
machine; @xmath is the mechanical starting time of the @xmath -th
machine; and @xmath . The CoI speed is used as a reference in the
differential equations of the generator rotor angles:

  -- -------- -- --------
     @xmath      (6.22)
  -- -------- -- --------

where @xmath is the angular frequency base. The CoI provides the
“average” frequency trend of the system and thus represents a relatively
slow dynamic. Delaying @xmath and @xmath in ( 6.21 ), ( 6.22 ),
respectively, allows removing the elements @xmath and @xmath , which
constitute a dense row in @xmath and a dense column in @xmath ,
respectively.

##### 6.4.2.2 Turbine Governor

The action of some TG s can be significantly slow, as compared to
primary damping and voltage controllers and hence, adding one-step
delays in some TG DAE models, e.g. the ones described in [ milano:10 ] ,
leads to increased sparsity without jeopardizing the TDI accuracy. On
the other hand, since TG variables typically do not constitute dense
segments in the Jacobian matrix, the increased sparsity does not come
with significant decoupling.

##### 6.4.2.3 Automatic Generation Control

The AGC is used to provide secondary frequency regulation to the power
system. Consider a simplified continuous AGC model that measures the CoI
frequency and produces a dynamic active power command ( @xmath ) which
is distributed to the machine TG s proportionally to their droops [
1601717 ] . The algebraic variable of the power order received by the
@xmath -th TG is defined by the following algebraic equation:

  -- -------- -------- -- --------
     @xmath   @xmath      (6.23)
  -- -------- -------- -- --------

where @xmath is the TG power order; @xmath is the droop constant; and
@xmath . Delaying @xmath in ( 6.23 ) removes @xmath , which forms a
dense column in @xmath , while accuracy is not impacted, because of the
AGC slow action.

##### 6.4.2.4 Secondary Voltage Regulation

The Secondary Voltage Regulation ( SVR ) model employed in this chapter
is based on the scheme proposed in the grid code of the Italian system.
For a detailed description of this scheme, the interested reader may
refer to [ sart:11 ] . The SVR mainly consists of two control levels.
The external loop receives the voltage measurement of a selected pilot
bus and computes the vector @xmath that represents reactive power limits
for the participating to the SVR generators. @xmath is compared with the
actual reactive power generation vector @xmath and the error @xmath is
further processed by a dynamic decoupling matrix @xmath . The produced
vector is finally sent to the Generator Reactive Power Regulators . Each
GRPR is basically a PI control, the output of which is considered as
input to the voltage reference of the generator’s AVR . The dynamic
behavior of the the @xmath -th GRPR state variable @xmath is given by
the PI differential equation:

  -- -------- -- --------
     @xmath      (6.24)
  -- -------- -- --------

where @xmath is the integral gain of the GRPR ; @xmath is the @xmath -th
row of @xmath . Delaying @xmath in ( 6.24 ) allows eliminating @xmath ,
which constitutes a dense block of columns and rows in @xmath . The
accuracy of the integration is maintained, due to the relatively slow
time scale of the SVR action.

### 6.5 Maximum Delay / Time Step

This section presents a technique based on SSSA , which for a selected
set of @xmath and @xmath , estimates the maximum admissible delay @xmath
that allows keeping the errors between the original DAE s and the
modified DDAE s below a threshold. To this aim, first one has to solve
the eigenvalue problem of the linearized delayed system. Linearizing (
6.8 ) around a valid operating point yields:

  -- -------- -------- -------- --------
     @xmath   @xmath            (6.25)
              @xmath   @xmath   
  -- -------- -------- -------- --------

Eliminating the algebraic variables from ( 6.25 ) is possible under the
assumption that @xmath is not singular, as follows:

  -- -------- -- --------
     @xmath      (6.26)
  -- -------- -- --------

where @xmath is the delay-free system matrix; @xmath , @xmath , are the
delayed system matrices. A rigorous proof of ( 6.26 ), as well as the
condition under which the series in ( 6.26 ) converges, are provided in
[ hessenberg:16 ] . The series typically converges rapidly as @xmath
increases and, thus, it is acceptable to assume a finite maximum value
for @xmath , say @xmath , in the summation of ( 6.26 ), and hence, the
characteristic matrix of ( 6.26 ) can be approximated with the following
pencil:

  -- -- -- --------
           (6.27)
  -- -- -- --------

Based on the above, the following proposition on the continuity of the
eigenvalues of ( 6.27 ) is relevant.

\proposition

Let @xmath be an eigenvalue of ( 6.27 ) with multiplicity @xmath . There
exists a constant @xmath such that for all @xmath satisfying @xmath ,
there is a number @xmath such that the pencil:

  -- -------- -- --------
     @xmath      (6.28)
  -- -------- -- --------

where

  -- -------- --
     @xmath   
     @xmath   
  -- -------- --

has exactly @xmath eigenvalues in the disk: @xmath . The notation @xmath
implies the induced matrix 2-norm.

The proposition above states that the characteristic roots of a delayed
system behave continuously with respect to variations of system matrices
and delays [ niculescu ] .

In the proposed scheme, the modes of the time-delay system are viewed as
approximations of the modes of the delay-free system. Let @xmath and
@xmath be the @xmath -th rightmost, non-null eigenvalues of the
delay-free and the delayed system, respectively. The associated relative
error is:

  -- -------- -- --------
     @xmath      (6.29)
  -- -------- -- --------

The limit case @xmath leads to @xmath , @xmath ; and, for @xmath ,
@xmath . Assigning a maximum admissible error, say @xmath , allows
finding the delay upper bound @xmath , as follows:

  -- -------- -- --------
     @xmath      (6.30)
  -- -------- -- --------

The calculation of @xmath requires to find the eigenvalues of ( 6.27 ),
which implies solving a non-linear, transcendental characteristic
equation. Transforming ( 6.27 ) into a linear pencil is possible by
using a partial differential equations representation of the system,
which however, has infinite dimensions. A reduced set of eigenvalues can
be found by employing Chebyshev discretization, a brief description of
which was given in Section 5.2.3 .

The following remarks are relevant.

\remark

(Delay vs time step): In general, the time step of the numerical
integration is determined based on the fastest dynamics of the system,
whereas the variables that are delayed in this work are typically
associated with slow dynamics. This means that the time step is always
smaller than the time scale of delayed variables. Regarding the
magnitude of the time delay, if the delay is greater than the
integration time step, an extra, undesirable approximation is introduced
into the system, as Proposition 6.5 indicates that the difference
between the DAE s and DDAE s are the smaller, the smaller is the delay.
On the other hand, for delays smaller than the time step, the numerical
integration has to interpolate the delayed values, which introduces an
additional source of error in the trajectories of the DDAE s . In
general, handling delays smaller than the step size is an open research
topic, as it creates difficulties even for special integration methods
for stiff DDE s [ Guglielmi2001 ] . For the reasons above, in the
proposed formulation, the delay is always equal to the time step.

\remark

(Stiffness) : Apart from the approximation introduced with the delay,
the maximum step @xmath is also constrained by the stiffness of the DDAE
s and the numerical integration method. In the following, the system is
integrated using the ITM .

\remark

(Computational burden) : The approach presented in Section 6.4.1 and
Section 6.5 is based on SSSA , which is valid around an equilibrium.
SSSA based techniques in this chapter are used to capture a feature of
the power system model that is “robust”, i.e. does not substantially
change by varying the operating point. Hence, the analysis can be
carried out only once per network. Some references have addressed a
similar problem. For example, see the discussion on the participation
matrix and identification of relevant state variables in [ arriaga:82_2
] ; and the use of SSSA techniques for non-linear dynamic model
reduction in [ book:chow:13 ] .

### 6.6 Case Studies

Two power system models are considered in this section. In particular,
Section 6.6.1 is based on the IEEE 39-bus system and employs the
discussions of Sections 6.4 and 6.5 for selection of variables and
estimation of the maximum admissible time step. Then, Section 6.6.2
considers a 21,177-bus model of the ENTSO-E . This system is large
enough to allow properly discussing the impact of the proposed approach
on the convergence and the computational burden of the TDI .

#### 6.6.1 IEEE 39-bus System

This section presents simulation results based on the IEEE 39-bus
system, also known as the New England 10-machine system. Detailed static
and dynamic data of the IEEE 39-bus system can be found in [
milano_ortega:2019 ] . It consists of @xmath synchronous generators, all
represented by @xmath -th order (two-axis) models [ milano:10 ] ; @xmath
transmission lines; @xmath transformers; and @xmath loads. Each
generator is equipped with AVR , TG and PSS , and thus provides primary
voltage, primary frequency and damping control, respectively, to the
system. In this chapter, all generators are assumed to participate to
secondary frequency and voltage control through AGC and SVR schemes,
respectively. Note that the CoI speed is used as angular frequency
reference of the generators. In total, the system has @xmath state
variables and @xmath algebraic variables.

The state matrix @xmath has @xmath finite eigenvalues, @xmath of which
have natural frequencies that fall in the range @xmath Hz and are thus
considered relevant eigenvalues for the analysis carried out below.
Table 6.1 shows the Number of Non-Zero ( NNZ ) elements of the Jacobian
matrix of the original system. The full @xmath Jacobian matrix @xmath
has @xmath non-zero elements, which corresponds to density @xmath .

The method discussed in Section 6.4.1 is applied to the IEEE 39-bus
system. The effect of the selected threshold @xmath on the density of
the system Jacobian matrices is shown in Figure 6.2 . As expected, the
higher @xmath , the more elements are selected and the sparser the
delayed Jacobian matrices become.

For example, consider @xmath . In this case, selected variables include
variables of TG s ; rotor speeds that appear in the equation of the CoI
; variables of the SVR . The method suggests first variables of slow
acting devices, which is also consistent to the discussion of Section
6.4 . The @xmath rightmost eigenvalues of the system without and with
inclusion of different delays are shown in Tables 6.2 and 6.3 . The
relative errors of the system for these eigenvalues are calculated
according to ( 6.29 ) and results are presented in Table 6.4 . If @xmath
s, all relative eigenvalue errors are below @xmath . The relative
eigenvalue errors increase for larger delays. According to the
discussion of Section 6.5 , if the maximum relative error is @xmath %,
then @xmath s. Finally, as illustrated in Figure 6.2 , constantly
increasing @xmath leads to more and more variables being selected, which
gradually limits the value of @xmath . However, following from ( 6.17
)-( 6.20 ), variables that inherently define relevant modes are
consistently not selected.

The geometric approach can provide an insight of the system structure in
a systematic and model-agnostic way, unlike for example, the methods
proposed in [ Fong1978 ] and [ FabozziLNewton ] . This feature is
particularly important for modern power systems where
converter-interfaced devices can change, in a future not too far away,
the overall dynamic response of the system. Still, it is common that
variables of a conventional power system DAE model are well-known. Then,
@xmath , @xmath can be selected based on the user’s experience, and thus
without applying a systematic method. The variables that if delayed, do
not change or change in a negligible way the overall dynamic behavior of
the system, are typically the ones with significantly slower dynamic
response as compared to the critical modes of the system. Selected
variables are thus naturally decoupled by the critical dynamics of the
system due to their different time scale. With this regard, two comments
are relevant. First, for any set of selected elements, @xmath is not
known a priori, so it can be still estimated according to the method
described in Section 6.5 . Second, while selecting @xmath , @xmath , the
user should take into account that, how slow a variable actually is
depends on the state matrix @xmath and, in turn, on the parameters of
the examined system. For example, consider again the example of the CoI
. Differentiation of ( 6.21 ) yields:

  -- -------- -------- -- --------
     @xmath   @xmath      (6.31)
  -- -------- -------- -- --------

where @xmath is given by the well-known swing equation:

  -- -------- -------- -- --------
     @xmath   @xmath      (6.32)
  -- -------- -------- -- --------

where @xmath , @xmath are the mechanical and electrical torque,
respectively; @xmath is the damping coefficient of the @xmath -th
machine. Substitution of ( 6.32 ) to ( 6.31 ) gives:

  -- -------- -------- -- --------
     @xmath   @xmath      (6.33)
  -- -------- -------- -- --------

where @xmath ; and @xmath . A characteristic of the 39-bus system is
that @xmath , @xmath ( @xmath MWs/MVA, while the second larger
mechanical starting time is @xmath MWs/MVA). In this case, the rate of
change of @xmath is still slow (see Section 6.4.2 ), but, as seen from (
6.33 ), its rate of change is comparable with that of @xmath .

Delayed variables are associated with secondary controllers or “slow”
variables such as the center of inertia. The dynamic response of these
variables cannot change even for relatively big changes of the operating
point and topology of the system. As a matter of fact, one could select
a priori most of these variables. However, the eigenvalue analysis
provides a systematic approach that can cope with any system setup and
any device and controller. This feature is particularly important for
modern power systems where converter-interfaced devices can change, in a
future not too far away, the overall dynamic response of the system.

The next example discusses the effect of the one-step delay
approximation in the transient response of the 39-bus system by carrying
out non-linear time domain simulations. With this aim and according to
the discussion of Section 6.4.2 , we eliminate the dense segments @xmath
, @xmath , @xmath , @xmath , that arise from ( 6.21 )-( 6.24 ). We
simulate the transient following a three-phase fault applied at bus 6 at
@xmath s. The fault is cleared after @xmath ms by tripping the
transmission line that connects buses @xmath and @xmath . The system is
numerically integrated using the ITM . Figure 6.3 shows the transient
behavior of the rotor speed of generator 2 for integration step sizes
@xmath s and @xmath s. The larger @xmath is, the larger is the mismatch
between the two trajectories. In both plots though, the trajectory of
the DDAE system closely follows the original trajectory, as expected.

It is relevant to check the accuracy of the proposed one-step delay
technique under different operating conditions and contingencies. In
addition to the operating condition considered above (from here and on
referred as the base case), two other operating conditions are
considered, namely, @xmath % and @xmath % increase in the total power
consumption of the system. For each operating point, the transient
response of the system is examined. Two different disturbances are
considered: first, the three phase fault applied at bus 6 described
above; and second, the loss of the load connected to bus 39 at @xmath s,
which leads to a @xmath GW decrease in the power consumption of the
system. In all scenarios, the delayed variables do not change and are
the ones used to plot the base case in Figure 6.3 .

The response of the rotor speeds of the DAE system are compared with the
respective speed trajectories obtained by integrating the DDAE system.
Each system is simulated for @xmath s and for two time step sizes,
@xmath s and @xmath s. The maximum absolute rotor speed trajectory
errors are summarized in Table 6.5 . As expected, the proposed technique
shows high accuracy for all considered operating conditions and
disturbances.

#### 6.6.2 21,177-bus ENTSO-E

This subsection presents simulation results on a dynamic model of the
ENTSO-E transmission system, which has been also discussed in Section
2.6.2 . In addition to the model components considered in Section 2.6.2
, the system examined in this section also includes AGC and SVR
mechanisms, which provide secondary frequency and voltage control,
respectively, to different areas of the system. In total, the system has
@xmath state variables and @xmath algebraic variables. The full Jacobian
matrix has dimensions @xmath and @xmath non-zero elements, which yields
a density degree of @xmath %.

In order to show the impact of the one-step delay approximation on the
accuracy, number of factorizations and computational burden of the TDI ,
the dense segments that arise from ( 6.21 )-( 6.24 ) are eliminated,
leading to a sparser and less coupled model. The NNZ Jacobian elements
of the original and delayed system are summarized in Table 6.6 .

We consider a three-phase fault at bus @xmath , occuring at @xmath s.
The fault is cleared after @xmath ms. The response of the rotor speed of
the synchronous generator connected at bus @xmath during the first
seconds following the fault, is shown in Figure 6.4 for two different
time step sizes.

The difference between the two trajectories is very small, which
indicates that accuracy is maintained. In particular, the maximum
absolute mismatch between the two trajectories for the cases shown in
Figure 6.4 are: (a) @xmath , (b) @xmath .

The impact of the one-step delay approximation on the number of
factorizations of the TDI is examined next. Following a disturbance, the
system shows a transient and, provided that the trajectory is stable,
finally reaches a stationary point. While in steady state, the ITM
requires exactly one factorization for each time step, both for the
original and the delayed system. Hence, any noticeable differences in
the number of factorizations required by the original and the delayed
system occur during the first seconds following the disturbance.

The number of factorizations required by the original and the delayed
system during the first seconds following the three-phase fault, are
shown in Figure 6.5 . Since the increments of the variables at each time
step are updated according to the standard Newton method (see Section
6.2 ), the number of factorizations at each time step is equal to the
number of Newton iterations. The original and the delayed system require
in this case the same number of factorizations at each time step to
converge. This indicates that the approximation does not jeopardize the
convergence.

Finally, it is relevant to evaluate the effect of the one-step delay
approximation on the computational burden of the TDI . The method
reduces the coupling of the ENTSO-E system and facilitates the potential
application of techniques that factorize decoupled blocks of the
Jacobian matrix in parallel. In turn, enabling parallelization leads to
a significant speedup of the simulation. However, as already stated, the
goal of this chapter is to provide a technique for decoupling and
sparsity increase rather than applying parallel techniques. Hence, the
original and delayed ENTSO-E systems are compared in terms of
computational effort required for a non-parallel numerical integration.

The full Jacobian matrix without introducing delays requires @xmath s
per each factorization, in average, on a @xmath @xmath GHz Intel Xeon
CPU desktop computer, while the Jacobian matrix of the delayed system
requires @xmath s, which corresponds to a speedup of @xmath %.

Apart from the factorization speed-up, one has also to evaluate whether
the delayed system requires more or less iterations than the original
system to solve the Newton method for each point of the time domain
integration. With this regard, Figure 6.5 has already shown an example
where the two systems require at each point the same number of
iterations. In addition, several cases have been carried out considering
a variety of contingencies and time steps and it has been found out that
the proposed technique is able to reduce the simulation time in range
from @xmath to @xmath .

For the sake of example, consider the three-phase fault at bus 2,292
discussed above. The system is integrated for @xmath s. With a time step
@xmath s, the original system completes the numerical factorization in
@xmath s, while the delayed system in @xmath s, which corresponds to a
speedup of @xmath %.

The proposed one-step-delay technique is agnostic with respect to the
integration scheme utilized for the TDI . For this reason, the proposed
approach can be coupled with any other numerical technique to speed up
time domain simulation software. Hence, even if the speed-up provided by
the proposed formulation per se is not huge, it can be combined with
other techniques. Moreover, reducing the computational burden is not the
only benefit of the proposed one-step delay technique. A relevant
feature is that it increases the decoupling of system variables. This
leads to a sparser and more decoupled system Jacobian matrix. The latter
is a feature that is expected to be beneficial to further speed up the
time domain analysis if combined with parallelization techniques.

### 6.7 Conclusions

The chapter presents a systematic approach to exploit delays to reduce
the coupling of the equations of conventional DAE models of power
systems for transient stability analysis. With this aim, the chapter
discusses how to select the variables of a power system DAE model that
can be delayed and provides an estimation of the maximum admissible time
delay so that simulation accuracy is maintained. This analysis has to be
carried out only once per network. Numerical simulations support the
theoretical appraisal of the proposed approach and show its accuracy,
convergence and computational burden.

## Chapter 7 Conclusions and Future Work

This thesis proposes novel SSSA -based techniques with application to
modal analysis, robust control, and numerical integration of power
systems. The objective of this chapter is to summarize the main
conclusions of the thesis and support directions for future work.

-    Modal analysis : The study on modal analysis shows that the
    classical assumptions made when computing PF s , namely that the
    system is modeled as a set of ODE s and that all eigenvalues are
    distinct, are not binding. In fact, considering a singular system of
    differential equations with eigenvalue multiplicities, allows
    extracting a generalized expression of PF s in the form of
    eigen-sensitivities, from which PF s in the classical sense arise as
    a special case. Moreover, prior to this work, algebraic variables of
    a power system model were either eliminated or treated as states
    with infinitely fast dynamics and, as such, their PF s to finite
    modes were considered to be null. The proposed formulation shows
    that it is possible to quantify the PF s of algebraic variables of a
    power system, and in general of any function of the system
    variables, through the definition of appropriate input/output
    vectors of the system’s state-space model.

    Future work will focus on studying the effect of network constraints
    on the design of control schemes based on the proposed modal
    analysis. A control signal/actuator selection that is based on the
    PF s of line power flows and takes into account information on the
    current/power capacity limits of transmission lines is a relevant
    example. Such information is readily available to system operators
    and thus it can be effectively included to the analysis.

    Moreover, the proposed formulation of PF s can be extended to
    include the analysis of systems of fractional differential
    equations. Such analysis will allow measuring the coupling between
    the variables of a power system models and its fractional order
    dynamics, such as the ones introduced by FOC s discussed in Chapter
    4 . Moreover, extension of the proposed modal participation analysis
    is also relevant for systems of DDAE s . This will allow an
    efficient assessment of control signals impacted by time delays,
    including wide-area controllers and controllers with intentional
    delays, such as the ones described in Chapter 5 . In this case, the
    calculation of PF s will be a challenging task, since the existence
    of an infinite dimensional spectrum makes it difficult to determine
    the coupling between eigenvectors and system variables in an
    accurate and efficient way.

-    Fractional Control : The contributions of the thesis are a
    systematic study of controllers based on fractional calculus and a
    technique to carry out eigenvalue analysis and assess the
    small-signal stability of power systems with inclusion of exact
    fractional dynamics of Caputo type. Furthermore, the properties of
    ORA are investigated and, through time domain simulations, it is
    shown that FOC s perform better than their conventional IO versions
    for synchronous machine AGC , ESS frequency control, and STATCOM
    voltage control, while they require only a small additional tuning
    effort.

    A relevant extension of the work on FOC s is the study of practical
    aspects, such as potential modeling and stability issues introduced
    with the inclusion of control saturation limits. With this regard, a
    preliminary study on FOC control limits for power system
    applications can be found in [ foc:ifac ] . Furthermore, time domain
    simulations in Chapter 4 are based on the widely employed ORA , but
    there exist also other methods that approximate fractional order
    dynamics, see e.g. [ chen:06 ] . To the best of our knowledge, a
    systematic study that provides an eigenvalue-based comparison of
    approximation methods for fractional order dynamics with application
    to power systems is still missing and it is worth consideration.

-    Delay-based Control : The study on time-delayed control focuses on
    the stability boundary of power systems with delay-based PSS s , as
    well as on the relationship between the existence of
    delay-independent stability and connected stability domains in the
    delay-control gain space. Analytical results based on the OMIB
    system, as well as a numerical analysis of the IEEE 14-bus system,
    illustrate that in contrast to their bad reputation, large delays
    may achieve best damping characteristics, provided that the PSS is
    properly configured. It is shown that one such possible
    configuration is to employ a two-channel PSS , which permits a fully
    connected stability region in the delay-gain space. Then, non-linear
    dynamics can be tuned to achieve high damping, by fully exploring
    the parameter space and without introducing instabilities.

    A possible future work direction is the design of an adaptive
    control scheme so that the delay and gain are automatically tuned,
    following a stable path and through consecutive quasi-steady state
    shifts of the system equilibrium. This is particularly interesting
    in case that part of the delay is inherent, i.e. represents
    measurement and/or communication latency. In this case, high damping
    can be achieved by adding an artificial controlled delay on top of
    the inherent delay. This is a novel approach, whose effectiveness
    can be assessed in comparison with other techniques used for
    mitigating the destabilizing effect of communication delays, such as
    delay compensation methods [ muyang:compensation:mdpi ,
    muyang:powertechmilan ] .

-    Numerical Integration : Finally, this work proposes an “one-step
    delay” approximation technique for the numerical integration of the
    DAE s utilized to study power system transient stability, and
    provides a first evaluation of its accuracy, convergence and
    computational burden. Chapter 6 shows that the proposed approach
    allows exploiting delays equal to the time step of the numerical
    integration, in order to reduce the coupling of the equations of
    conventional power system DAE models for transient stability
    analysis. SSSA -based techniques are discussed for the selection of
    the variables of a power system DAE model that can be delayed, as
    well as for the estimation of the maximum admissible time delay, so
    that the accuracy of trajectories is not compromised.

    The next step is to embed the proposed one-step delay approximation
    technique in algorithms that apply state-of-the art parallelization
    techniques. This will typically require to exploit a current
    injection-based power system model formulation, in order to take
    advantage of the BBD structure of the corresponding Jacobian matrix,
    see e.g. [ Fong1978 , FabozziLNewton ] .

Appendices

## Appendix A Proofs

### a.1 Proof of Theorem 2.19

By substituting the transformation

  -- -------- -- -------
     @xmath      (A.1)
  -- -------- -- -------

into ( 2.10 ), and by multiplying by , one obtains:

  -- -------- -- -------
     @xmath      (A.2)
  -- -------- -- -------

Let @xmath , @xmath be the matrices that contain all right eigenvectors
of the finite, and infinite eigenvalues respectively. Then by setting
@xmath , @xmath , with @xmath , @xmath , and using ( 2.18 ), we arrive
at two subsystems of ( A.2 ):

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

The first subsystem has solution:

  -- -------- -------- -- -------
     @xmath   @xmath      (A.3)
  -- -------- -------- -- -------

where @xmath is a constant vector. For the second subsystem, let @xmath
be the index of the nilpotent matrix @xmath , i.e. @xmath . Then
following matrix equations are obtained:

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
              @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

By taking the sum of the above equations, the solution for the second
subsystem is:

  -- -------- -- -------
     @xmath      (A.4)
  -- -------- -- -------

Using the solutions ( A.3 ) and ( A.4 ) in ( A.1 ), ones gets:

  -- -------- -- -------
     @xmath      (A.5)
  -- -------- -- -------

or equivalently,

  -- -------- --
     @xmath   
  -- -------- --

which is the general solution ( 2.19 ).

### a.2 Proof of Theorem 3.3.1

1.  By using the transformation @xmath , from the proof of Theorem 2.19
    , and in particular from ( A.5 ), one has for @xmath :

      -- -------- -- -------
         @xmath      (A.6)
      -- -------- -- -------

    Let @xmath , @xmath be the matrices that contain all left
    eigenvectors of the finite, and infinite eigenvalues of the pencil
    @xmath , respectively. Then by using the notation @xmath , and
    making use of ( 2.18 ), there exist @xmath , @xmath , such that
    @xmath . Multiplying ( A.6 ) by @xmath yields:

      -- -------- --
         @xmath   
      -- -------- --

    or, equivalently,

      -- -------- --
         @xmath   
      -- -------- --

    Hence:

      -- -------- -- -------
         @xmath      (A.7)
      -- -------- -- -------

    Substitution of ( A.7 ) into the general solution ( 3.8 ) gives:

      -- -------- -- -------
         @xmath      (A.8)
      -- -------- -- -------

    The matrices @xmath , @xmath can be written as:

      -- -------- -------- -- --------
         @xmath   @xmath      (A.9)
         @xmath   @xmath      (A.10)
      -- -------- -------- -- --------

    where @xmath , @xmath , @xmath , linear (generalized) independent
    right, left eigenvectors of @xmath , @xmath , respectively.

    The Jordan matrix @xmath has the following form:

      -- -------- --
         @xmath   
      -- -------- --

    where

      -- -------- --
         @xmath   
      -- -------- --

    is the Jordan block that corresponds to the eigenvalue @xmath . The
    matrix exponential of @xmath , denoted as @xmath , is defined as:

      -- -------- -- --------
         @xmath      (A.11)
      -- -------- -- --------

    where

      -- -------- --
         @xmath   
      -- -------- --

    By substituting ( A.9 ), ( A.10 ), ( A.11 ) in ( A.8 ), one arrives
    at ( 3.9 ).

2.  From ( 3.9 ), the evolution of @xmath , i.e. the @xmath -th element
    of @xmath , is:

      -- -------- -- --------
         @xmath      (A.12)
      -- -------- -- --------

    where @xmath .

    Partial differentiation of this equation with respect to @xmath
    leads to:

      -- -------- -- --------
         @xmath      (A.13)
      -- -------- -- --------

    which is the PF of @xmath , @xmath , in @xmath , @xmath .

### a.3 Proof of Theorem 4.3.2

Let @xmath be the Laplace transform of @xmath . Using the Caputo
fractional derivative, by applying the Laplace transform @xmath as
defined in ( 4.4 ) for @xmath into ( 4.15 ), one gets [ Kac ] :

  -- -------- -- --------
     @xmath      (A.14)
  -- -------- -- --------

Note that

  -- -------- --
     @xmath   
  -- -------- --

and hence

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently,

  -- -- --
        
  -- -- --

Thus, @xmath and ( A.14 ) becomes:

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently,

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently,

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently,

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently,

  -- -------- --
     @xmath   
  -- -------- --

or, equivalently,

  -- -------- -- --------
     @xmath      (A.15)
  -- -------- -- --------

## Appendix B Map of the All-Island Irish Transmission System