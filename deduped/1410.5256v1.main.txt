##### Contents

-    1 Introduction
-    2 Scattering Amplitudes
    -    2.1 Spinor Helicity Formalism
    -    2.2 Color Decomposition
        -    2.2.1 Color Algebra in Graphform
        -    2.2.2 Color Decomposition of a Four-Point Amplitude
        -    2.2.3 Photon Decoupling Equation
        -    2.2.4 Color-Ordered Feynman Rules
    -    2.3 Factorization and Recursion Relations
        -    2.3.1 Factorization
        -    2.3.2 A Recursive Relation for Tree-Level Amplitudes
-    3 Color-Kinematic Duality
    -    3.1 The Duality at Tree-Level
        -    3.1.1 Duality Representation of a Four-Point Amplitude
        -    3.1.2 Gauge Freedom of Numerators
        -    3.1.3 Duality Representation of a n-Point Amplitude
    -    3.2 The Duality at Loop-level
    -    3.3 From Gauge Theory to Gravity
-    4 Calculating Loop Amplitudes
    -    4.1 Integrand-Reduction for One-Loop Amplitudes
        -    4.1.1 The OPP Algorithm
        -    4.1.2 Residues from Unitarity Cuts
    -    4.2 Calculating Loop Amplitudes with the Integrand-Reduction
        Algorithm
        -    4.2.1 Multivariate Polynomial Division
        -    4.2.2 Application of the Reduction Algorithm
-    5 Scattering Amplitudes in @xmath =4 sYM
    -    5.1 An Introduction to @xmath =4 sYM
    -    5.2 Three-Point Generating Functions
    -    5.3 @xmath -Point Generating Function
    -    5.4 Generating Functions as Input for Unitarity Cuts
-    6 The One-Loop Five-Point Amplitude in @xmath =4 sYM
    -    6.1 Residues from Unitarity Cuts
        -    6.1.1 Quadruple-Cut of @xmath and @xmath
    -    6.2 The Duality Equations
        -    6.2.1 Residues and BCJ equations
        -    6.2.2 @xmath -Decomposition
        -    6.2.3 Solution
    -    6.3 The Full One-Loop Amplitude
-    7 The Two-Loop Five-Point Amplitude in @xmath =4 sYM
    -    7.1 Two-Loop Pentabox Diagram
        -    7.1.1 The Eightfold-Cut
        -    7.1.2 The Sevenfold-Cut without @xmath
        -    7.1.3 The Sevenfold-Cut without @xmath
        -    7.1.4 The Sevenfold-Cut without @xmath
        -    7.1.5 The Sevenfold-Cut without @xmath
        -    7.1.6 The Duality Equations
    -    7.2 The Full Two-Loop Amplitude
-    8 Alternative Approach to Color-Kinematic conform Graphs
    -    8.1 The One-Loop Five-Point Amplitude
        -    8.1.1 Linear Dependence on the Loop-Momenta
        -    8.1.2 Graph Automorphism
    -    8.2 The Two-Loop Five-Point Amplitude
        -    8.2.1 The Pentabox
        -    8.2.2 The Crossed Pentabox
        -    8.2.3 The Double Penta
        -    8.2.4 @xmath -Decomposition
        -    8.2.5 Linear Dependence on the Loop-Momenta
        -    8.2.6 Graph Automorphism
-    9 Ultra-Violet Behavior
    -    9.1 The One-Loop Amplitude
        -    9.1.1 Direct Integration with Feynman Parametrization
        -    9.1.2 Integration-by-Parts Identities
        -    9.1.3 Small-Momentum-Injection
        -    9.1.4 UV poles of the Full One-Loop Amplitude
    -    9.2 The Two-Loop Amplitude
        -    9.2.1 UV poles of the Full Two-Loop Amplitude
-    10 Conclusion
-    Acknowledgements
-    11 Appendix
    -    11.1 Merging of the One-Loop Integrand
    -    11.2 Monomials in the Residues
        -    11.2.1 Pentabox
        -    11.2.2 Crossed Pentabox
        -    11.2.3 Double Penta

## Chapter 1 Introduction

Particle Physics is the study of the subatomic constituents of matter
that can rarely be held in one place, either because they move at the
speed of light, or because their lifetime is too tiny. At the same time,
the measurement apparatus cannot be so small to explore a fundamental
particle without being a particle itself. Hence, studying the
interactions between colliding particles and identifying the
consequences of this collision is the only key to access the subatomic
world.

The physical quantity that describes the interaction process is called
scattering cross section . It specifies the area where the particles do
collide, times the quantum mechanical probability of the collision to
take place. Quantum mechanical probability densities are defined as the
absolute squared value of a quantum mechanical amplitude, called
scattering amplitude , which can be seen as the element of the
scattering matrix (the @xmath -matrix). Any scattering amplitude
receives contributions from different processes which are
indistinguishable at the quantum level, namely leaving the same traces
in the measurement apparatus. To form a scattering cross section, all
the processes contributing to the same scattering amplitude have to be
summed before being squared.

The improving of the experimental precision in particle physics demands
for more accurate predictions from the theoretical side. All
computations of observables related to interacting particles rely on the
postulate that the properties of final states can be described by
partonic reactions. Perturbation Theory is a powerful tool for
describing the quantum behavior of particles: at the leading order (LO),
particle scattering is depicted in terms of tree graphs; and higher
accuracy is reached by including terms which, beyond LO, are represented
by diagrams containing loops . On the one hand loop diagrams provide
access to physics beyond the range of sensitivity of the current
experiments, because of the room heavier particles have to circulate
around the loop and on the other hand they represent the quantum
corrections to tree graphs, which are purely classical. The canonical
formulation of Quantum Field Theory (QFT) is built on the two pillars of
locality and unitarity . The standard apparatus of Lagrangians and
Feynman integrals allows us to make these two fundamental principles
manifest. This approach, however, requires the introduction of
unphysical redundancy in our description of physics. Accordingly, the
computation of scattering amplitudes requires the evaluation of highly
non-trivial integrals, which can be understood as the generalization of
averaging on non-observable degrees of freedom. The study of scattering
amplitudes is fundamental to our understanding of QFT, although the
canonical formalism turns out to be blind to astonishingly simple
properties of the gauge-invariant physical observables of the theory.
There are powerful new mathematical structures underlying the
extraordinary properties of scattering amplitudes in gauge theories, and
studying them lead us into direct contact with a very active area of
current research in mathematics, like Algebraic Geometry [ 1 , 2 , 3 ] .

Scattering amplitudes lay in the heart of perturbative quantum field
theories. The recent advances in their calculational tools have been
initiated by a more profound understanding of the multi-channel
factorization properties which arise under complex deformations of the
kinematics imposed by on-shell [ 4 , 5 ] and generalized unitarity-cut
conditions [ 6 , 7 ] .

Moreover analyticity and unitarity of scattering amplitudes [ 8 ] have
then been strengthened through the revealing of the mathematical
structures present at the singularities. Their study exposed a quadratic
recurrence relation for tree-level amplitudes, the BCFW-recursion [ 5 ]
, its link to the leading singularity of one-loop amplitudes [ 7 ] and a
relation between numerator and denominators of one-loop Feynman integr
als , yielding the multipole decomposition of Feynman integr ands ,
characterizing the by now known as OPP method [ 9 ] .

These new insights, which originate from a reinterpretation of
tree-level scattering within the twistor string theory [ 10 ] , have
inspired the study of novel mathematical frameworks in the more
supersymmetric sectors of quantum field theories, such as dual conformal
symmetries [ 11 ] , grassmanians [ 12 ] , Wilson-loops/gluon-amplitudes
duality [ 13 ] , color/kinematic and gravity/gauge dualities [ 14 , 15 ]
, as well as on-shell [ 4 , 5 , 16 , 17 ] and generalized
unitarity-based methods [ 6 , 7 , 18 , 23 ] , and more generally the
breakthrough advances in automating the evaluation of multi-particle
scattering one-loop amplitudes, as demanded by the experimental programs
at hadron colliders.

In most cases the direct integration of Feynman integrals is
prohibitive, hence the evaluation of scattering amplitudes beyond the
leading order is addressed in two stages: First the amplitude is
expressed in terms of an universal integral basis, and secondly the
evaluation of the elements of the basis, called master integrals (MI’s).

At one-loop, the advantage of knowing a priori that the basis of MI’s is
formed by scalar one-loop functions [ 19 ] , as well as the availability
of their analytic expression [ 20 ] , allowed the community to focus on
the development of efficient algorithms for extracting the coefficients
multiplying each MI’s. Improved tensor decomposition [ 21 ] , complex
integration and contour deformation [ 22 ] , on-shell and generalized
unitarity-based methods, and integrand-reduction techniques [ 9 , 23 ,
24 , 25 ] led to impressive results which only few years ago were
considered inconceivable, and to such a high level of automation [ 24 ,
26 ] that different scattering processes at the next-to-leading order
accuracy can be handled by single, yet multipurpose, codes [ 27 , 28 ,
29 , 30 , 31 ] .

At higher-loop, and in particular at two-loop to begin with, the
situation is different. The basis of MI’s is not known a priori. MI’s
are identified at the end of the reduction procedure, and afterwards the
problem of their evaluation arises. The most used multi-loop reduction
technique is the well-known Laporta algorithm [ 32 ] , based on the
solution of algebraic systems of equations obtained through
integration-by-parts identities [ 33 ] . The recent progress in
calculating higher loop amplitudes has been enabled by the improvement
of mathematical methods dedicated to Feynman integrals, such as
difference [ 32 , 34 ] and differential [ 35 ] equations, Mellin-Barnes
integration [ 36 ] , asymptotic expansions [ 37 ] , sector decomposition
[ 38 ] , complex integration and contour deformation [ 39 ] – to list
few of them.

In this work we aim at extending the combined use of unitarity-based
methods and integrand-reduction techniques , in order to accomplish the
semi-analytic reduction of two-loop amplitudes to MI’s. The use of
unitarity-cuts and complex momenta for on-shell internal particles
turned unitarity-based methods into very efficient tools for computing
scattering amplitudes. These methods exploit two general properties of
scattering amplitudes, such as analyticity and unitarity. The former
guarantees that amplitudes can be reconstructed from the knowledge of
their singularities, while the latter ensures that the residues at the
singular points factorize into products of simpler amplitudes.
Unitarity-based methods are founded on the underlying representation of
scattering amplitudes as a linear combination of MI’s, and their
principle is the extraction of the coefficients entering in such a
linear combination by matching the cuts of the amplitudes onto the cuts
of each MI.

Cutting rules as computational tools have been introduced at two-loop in
the context of supersymmetric amplitudes [ 40 ] and later applied to the
case of pure QCD amplitudes [ 41 ] . The use of complex momenta for
internal particles to fulfill the multiple cuts of two-loop amplitudes
has been proposed for extending the one-loop quadruple-cut technique, to
the octa-cut [ 42 , 43 ] , as well as the method of maximal cuts [ 44 ]
.

The multi-particle pole decomposition for the integrands of arbitrary
scattering amplitudes emerges from the combination of analyticity and
unitarity with the idea of a reduction under the integral sign.

The principle of an integrand-reduction method is the underlying
multi-particle pole expansion for the integrand of any scattering
amplitude, or, equivalently, the relation between numerator and
denominators of the integrand: a representation where the numerator of
each Feynman integral is expressed as a combination of products of the
corresponding denominators, with polynomial coefficients [ 9 , 45 , 2 ,
1 ] .

The key feature in the integrand-decomposition is represented by the
shape of the residues on the multi-particle pole before integration:
each residue is a (multivariate) polynomial in the irreducible scalar
products (ISP’s) formed by the loop momenta and either external momenta
or polarization vectors constructed out of them; the scalar products
appearing in the residues are by definition irreducible , namely they
cannot be expressed in terms of the denominators of the integrand [ 45 ]
.

The polynomial structure of the multi-particle residues is a qualitative
information that turns into a quantitative algorithm for decomposing
arbitrary amplitudes in terms of MI’s at the integrand level. In the
context of an integrand-reduction, any explicit integration procedure
and/or any matching procedure between cuts of amplitudes and cuts of
MI’s is replaced by polynomial fitting , which is a simpler operation.

Decomposing the amplitudes in terms of MI’s amounts to reconstructing
the full polynomiality of the residues, i.e. it amounts to determining
all the coefficients of each polynomial.

In this work we will meet the criteria to constrain the polynomial form
of the residue on each multiple-cut of an arbitrary two-loop amplitude.
Unlike the one-loop case, where the residues of the multiple-cut have
been systematized for all the cuts, in the two-loop case, their form is
still unknown. Their existence is a prerequisite for establishing a
relation between numerator and denominators of any two-loop integrand.
Their implicit form can be given in terms of unknown coefficients, which
are determined through polynomial fitting. As in the one-loop case, the
full reconstruction of the polynomial residues requires only the
knowledge of the integrand evaluated at explicit values of the loop
momenta as many times as the number of the unknown coefficients.

Another feature of the integrand-reduction algorithm we are describing
is that the determination of the polynomial form of the residues amounts
to choose a basis of MI’s, which does not necessarily need to be known a
priori [ 45 ] . In fact, as we will see, each ISP appearing in the
polynomial residues is the numerator of a potential MI which may appear
in the final result (other than the scalar integrals).

The parametric form of the polynomial residues is process-independent
and it can be determined a priori, from the topology of the
corresponding multiple cut, namely from the diagram identified by the
denominators that go simultaneously on-shell. The actual value of the
coefficients is clearly process-dependent, and its determination is
indeed the goal of the integrand-reduction. Integrand-reduction methods
determine the (unknown) coefficients by polynomial fitting, through the
evaluation of the (known) integrand at values of the loop-momenta
fulfilling the cut conditions.

The integrand-reduction methods have been originally developed at one
loop by Ossola, Papadopoulos and Pittau (OPP) [ 9 ] . Extensions beyond
one-loop were first proposed by Mastrolia and Ossola in [ 45 ] , and
later refined by Badger, Frellersvig and Zhang [ 46 ] . Both the
numerator and the denominators of any integrand are multivariate
polynomials in the components of the loop variables. As recently shown
in tandem by Zhang [ 2 ] , and Mastrolia, Ossola, Mirabella and Peraro [
1 ] , the decomposition of the integrand can be obtained by performing
the multivariate polynomial division between the numerator and the
denominators, using basic principles of algebraic geometry, like the
division modulo a Gröbner basis. Moreover, the multivariate polynomial
divisions gives a systematic classification of the polynomial structures
of the residues, leading to both the identification of the MI’s and the
determination of their coefficients. By using multivariate polynomial
division, a systematic classification of a four dimensional integral
basis for two-loop integrands is doable [ 47 ] .

In [ 1 ] , the mathematical framework for the multi-loop
integrand-reduction algorithm was developed. Accordingly, the residues
are uniquely determined by the denominators involved in the
corresponding multiple cut, and the multi-particle pole decomposition
for any scattering amplitude is achieved through a simple integrand
recurrence relation . The algorithm is valid for arbitrary amplitudes,
irrespective of the number of loops, the particle content (massless or
massive), and of the diagram topology (planar or non-planar).
Interestingly, at one-loop our algorithm allows for a simple derivation
of the one-loop OPP reduction formula. The spurious terms, when present,
naturally arise from the structure of the denominators entering the
generalized cuts. In the same work [ 1 ] , the so called maximum-cut
theorem was proven. The theorem deals with cuts where the number of
on-shell conditions is equal to the number of integration variables and
therefore the loop momenta are completely localized. The theorem ensures
that the number of independent solutions of the maximum-cut is equal to
the number of coefficients parametrizing the corresponding residue. The
maximum cut theorem generalizes at any loop the simplicity of the
one-loop quadruple-cut [ 7 , 9 ] , where the two coefficients
parametrizing the residue are determined by the two solutions of the
cut.

New approaches tackling the evaluation of one-loop multi-parton
amplitudes have recently been under intense development (see [ 48 ] and
[ 49 , 50 , 51 , 52 , 53 , 54 , 55 ] for a comprehensive review). As
previously said, various new structures have been uncovered in the
amplitudes of gauge and gravity theories.

One such structure is the duality between color and kinematics found by
Bern, Carrasco, and Johansson (BCJ) [ 14 , 15 ] . This duality is
conjectured to hold at all loop orders in Yang-Mills theory and its
supersymmetric counterparts. Besides imposing strong constraints on
gauge-theory amplitudes, whenever a gauge-theory loop integrand is
obtained, where the duality is manifest, gravity integrands can be
simply obtained from the double-copy relation, namely by replacing color
factors with specified kinematic numerator factors. The duality between
color and kinematics has been confirmed in numerous tree-level studies [
56 , 57 , 58 , 59 , 60 , 61 , 62 ] . At loop level, the duality remains
a conjecture, but there is already significant nontrivial evidence in
its favor for supersymmetric theories [ 15 , 63 , 64 , 65 , 66 , 67 ]
and for special helicity configurations in non-supersymmetric pure
Yang-Mills theory [ 15 , 68 , 69 ] .
Results obtained for gauge-theory amplitudes may be used to study the
ultra-violet divergences of the corresponding gravity amplitudes. Recent
years have seen a renaissance in the study of ultra-violet divergences
in gravity theories, mainly due to the greatly improved ability to carry
out explicit multiloop computations in gravity theories [ 15 , 63 , 64 ,
65 , 40 , 70 , 71 , 72 ] . The unitarity method also has revealed hints
that multiloop supergravity theories may be better behaved in the
ultra-violet than power counting arguments based on standard symmetries
suggest [ 73 ] . However the question of whether it is possible to
construct a finite supergravity is still an open one. The duality
between color and kinematics and its associated double-copy formula
offer a new angle on the ultra-violet divergences in supergravity
theories [ 15 , 63 , 71 , 72 , 74 ] .

In this thesis, I combine for the first time two of the most advanced
techniques for the evaluation of scattering amplitudes in gauge
theories: the color-kinematic duality and the integrand-reduction via
polynomial division. I will apply them to the decomposition of one- and
two-loop five-point amplitudes in @xmath sYM theory in four dimension.
In particular, I will use the super-amplitudes tree-level formalism for
constructing the integrands of the multiple-cuts. Such integrands are
the input for the determination of the polynomial residues within the
integrand-reduction algorithm. The color-kinematic equations are then
used for imposing additional restrictions on the shape of the residues,
which are needed for constructing graph numerators satisfying the
duality. The decomposition of the amplitudes in terms of MI’s is finally
used to determine the UV behavior of the @xmath sYM amplitudes. The
results contained in this thesis are already available in the literature
[ 76 , 75 ] , but they will be obtained in a new fashion. The
methodology hereby presented is purely four-dimensional, nevertheless,
the extension to dimensionally regulated amplitudes, as well as to
non-supersymmetric theories, may follow exactly the same procedure.
Therefore the technique hereby presented has the potential to become a
standard technique for the reduction of multi-loop Feynman amplitudes.

This thesis is organized as follows: In the first chapter we will
introduce the general notation used to describe the kinematic and gauge
group part of scattering amplitudes. The next chapter discusses the
conjectured color-kinematics duality at tree- and loop-level. We will
then move to the calculation of one-loop amplitudes with the OPP method
and the calculation of multi-loop amplitudes via the newly proposed
integrand-reduction through multivariate polynomial division. Afterwards
we will cover an efficient description of scattering amplitudes in
@xmath =4 sYM. Chapters four and five will apply the former described
techniques to derive the five-point one-loop and two-loop amplitudes,
with the help of the color-kinematical duality. Chapter six will contain
a derivation of the same one- and two-loop amplitude only from general
properties of @xmath =4 sYM. The final chapter discusses the leading
ultra-violet properties of the previously calculated five-point one- and
two-loop amplitudes.
All numerical and semi-analytic computations presented in this thesis
have been obtained using Mathematica with the Spinor-Helicity Formalism
package S@M [ 77 ] .

## Chapter 2 Scattering Amplitudes

### 2.1 Spinor Helicity Formalism

Before we start our discussion on amplitudes it is important to
determine some notation. We will work in the so called spinor helicity
formalism see [ 78 , 79 , 80 , 81 ] for reviews.
In the 1980s Berends and Wu used the fact that every lightlike momentum
can be written in terms of massless spinors [ 82 ] and that the
polarization vectors also have a presentation as spinors [ 83 , 84 ] to
develop a very compact formalism for amplitudes.
A spinor @xmath is a four-vector which solves the Dirac equation

  -- -------- -- -------
     @xmath      (2.1)
  -- -------- -- -------

where we used the Feynman slash notation @xmath . The four-vector @xmath
can be split into a part with positive and a part with negative helicity
also called right-handed and left-handed respectively @xmath . Using the
Weyl representation of the gamma matrices

  -- -------- -- -------
     @xmath      (2.2)
  -- -------- -- -------

we can see that the mass term mixes both helicities

  -- -------- -- -------
     @xmath      (2.3)
  -- -------- -- -------

where @xmath and @xmath are vectors of Pauli matrices. In the massless
limit the equations for positive and negative helicity will decouple and
give us the Weyl equations

  -- -------- -- -------
     @xmath      (2.4)
     @xmath      (2.5)
  -- -------- -- -------

The solutions to these equations are plane waves @xmath and @xmath ,
where @xmath and @xmath are two component Weyl spinors. ¹ ¹ 1 Usually
there would be a second set of spinors for plane waves with negative
frequencies, but since we are working with massless spinors they are the
same up to normalization conventions.
Fixing the normalization in the usual way

  -- -------- -- -------
     @xmath      (2.6)
     @xmath      (2.7)
  -- -------- -- -------

we find the following solutions for the spinors

  -- -------- -- -------
     @xmath      (2.8)
     @xmath      (2.9)
  -- -------- -- -------

where we used a different basis for the momenta defined by

  -- -------- -- --------
     @xmath      (2.10)
     @xmath      (2.11)
  -- -------- -- --------

The latter definition is useful since @xmath . In order to form scalar
products between the spinor it is advantageous to go back to the full
four-vector so we define

  -- -------- -- --------
     @xmath      (2.12)
     @xmath      (2.13)
  -- -------- -- --------

and form the Lorentz invariant spinor products

  -- -------- -- --------
     @xmath      (2.14)
     @xmath      (2.15)
  -- -------- -- --------

where i and j are two particles with momentum @xmath and @xmath . With
the Gordon Identity and the spin-decoupled completeness relation we are
able to connect a momentum to a spinor product

  -- -------- -- --------
     @xmath      (2.16)
     @xmath      (2.17)
     @xmath      (2.18)
  -- -------- -- --------

From the definitions of the spinors we can derivate the first five
identities:
1. Antisymmetry

  -- -------- -- --------
     @xmath      (2.19)
  -- -------- -- --------

2. Fierz rearrangement

  -- -------- -- --------
     @xmath      (2.20)
  -- -------- -- --------

3. Charge Conjugation of a current

  -- -------- -- --------
     @xmath      (2.21)
  -- -------- -- --------

4. Schouten Identity

  -- -------- -- --------
     @xmath      (2.22)
     @xmath      (2.23)
  -- -------- -- --------

5. Momentum conservation

  -- -------- -- --------
     @xmath      (2.24)
  -- -------- -- --------

Furthermore to formulate an amplitude completely in terms of spinors we
need a representation of the polarization vector in terms of spinors [
83 , 84 ]

  -- -------- -- --------
     @xmath      (2.25)
     @xmath      (2.26)
  -- -------- -- --------

where @xmath is light-like reference vector, which is not collinear with
@xmath . The difference between two choices of reference vectors
corresponds to an on-shell gauge transformation

  -- -------- -- --------
     @xmath      (2.27)
     @xmath      (2.28)
     @xmath      (2.29)
     @xmath      (2.30)
     @xmath      (2.31)
  -- -------- -- --------

where we used the completeness relation and the charge conjugation of a
current.
Moreover we can check that the definition in ( 2.26 ) satisfies the
properties of a polarization vector.
First they have to be perpendicular to its momentum

  -- -------- -- --------
     @xmath      (2.32)
     @xmath      (2.33)
  -- -------- -- --------

where we used the Dirac Equation in the last step. Secondly they need to
be properly normalized

  -- -------- -- --------
                 (2.34)
     @xmath      (2.35)
  -- -------- -- --------

where we used the Fierz Identity and the antisymmetry of the spinor
product. With this formalism it is possible to efficiently describe the
kinematical factors of an amplitude. But there is a second part to the
amplitude, namely, the color structure. It turns out that we can treat
this part rather trivially as we will see in the next section.

### 2.2 Color Decomposition

Generally there are two parts in the Feynman rules of a gauge theory.
One is the structure constant of the underlying gauge group and the
other one is kinematical part of the external particles. Here we will
present a way of solving the color structure beforehand. This will
correspond to a reordering of the amplitude in terms of so called
color-ordered amplitudes. This has two advantages. First, the number of
independent color-ordered amplitudes is lower than the number Feynman
diagrams and secondly each color-ordered amplitude is gauge invariant in
contrast to a single Feynman diagram.
In our case the underlying gauge group is @xmath with structure
constants @xmath . Normally the Feynman rules are written in terms of
these structure constants but in order to strip off the color we will
find it beneficial to transform them into the fundamental representation
where we replace the structure constants with the corresponding traces
over the generators of @xmath

  -- -------- -- --------
     @xmath      (2.36)
  -- -------- -- --------

The fundamental indices @xmath and @xmath represent the rows and columns
in the generators and the adjoint indices @xmath and @xmath tell us
which generator we have to use.
The next step is to remove all contracted adjoint indices by the
repeated use of the Fierz-Identity

  -- -------- -- --------
     @xmath      (2.37)
  -- -------- -- --------

Finally we are able to collect all independent traces of generators
appearing in the amplitude and their corresponding kinematical parts.
These kinematical parts are then called color-ordered amplitudes. This
leads us to an alternative expansion of the tree-level amplitude

  -- -------- -- --------
     @xmath      (2.38)
  -- -------- -- --------

where @xmath are the color-ordered amplitudes and the sum runs over all
permutations @xmath of n elements except over the cyclic ones denoted by
the subgroup @xmath .
Later we will apply this color decomposition to an example but first we
should discuss a graphical approach to convert the color factors.

#### 2.2.1 Color Algebra in Graphform

An even faster way to transform the color factors is to represent them
with graphs, do the color algebra there, and then read off the
corresponding traces. To do that every fundamental index is represented
by an ’quark’ line and every adjoint index is represented by a ’gluon’
line. This means the full generator @xmath is represented by an
quark-gluon vertex. The three main operations for simplifying these
graphical representations are displayed in figure 2.1 which are just
graphical representations of the equations ( 2.36 , 2.37 ).

As an example we are going to show how a s-channel color factor of a
four-point amplitude

  -- -------- -- --------
     @xmath      (2.39)
  -- -------- -- --------

is translated into traces over the generators. The color factor can be
represented by the graph in figure 2.2 .

The next step is to use the identities displayed in figure 2.1 to
simplify the graph.

From the last line in figure 2.3 we can simply read off the ordering of
the generators in the trace by following the closed fermion line.

  -- -------- -- --------
     @xmath      (2.40)
  -- -------- -- --------

#### 2.2.2 Color Decomposition of a Four-Point Amplitude

Going back to our color decomposition of tree-level amplitudes in ( 2.38
) we will apply this algorithm now to a four-point amplitude.
In the normal Feynman diagram expansion we have four diagrams with their
corresponding color factors

  -- -------- -- --------
     @xmath      (2.41)
  -- -------- -- --------

where @xmath denotes the kinematical part and @xmath is the four-point
vertex part which has the color factor of channel @xmath . The color
factors of the channels are given by

  -- -------- -- --------
     @xmath      (2.42)
     @xmath      (2.43)
     @xmath      (2.44)
  -- -------- -- --------

We already translated the first color factor into traces over generators
in ( 2.40 ). The other color factors can be obtained by a simple
relabeling of the s-channel color factor @xmath

  -- -------- -- --------
     @xmath      (2.45)
     @xmath      (2.46)
  -- -------- -- --------

If we plug the transformed color factors into ( 2.41 ) we find

  -- -------- -- --------
     @xmath      (2.47)
                 (2.48)
  -- -------- -- --------

Now we can define the kinematical objects in front of the traces as the
color-ordered amplitudes

  -- -------- -- --------
     @xmath      (2.49)
  -- -------- -- --------

At first it looks like we introduced more objects then before in ( 2.41
) but from our definitions in ( 2.48 ) we immediately find the first
identities for the color-ordered amplitudes

  -- -------- -- --------
     @xmath      (2.50)
     @xmath      (2.51)
  -- -------- -- --------

which are based on the cyclicity of the trace and C-invariance. It turns
out that there are even more identities for color-ordered amplitudes
which greatly simplify the number of diagrams which we have to
calculate. [ 94 , 14 ]
As we have seen in our simple example of a four-point amplitude. The
color-ordered amplitude @xmath had only contributions coming from
s-channel, the t-channel and from the contact term. This statement can
be generalized to: Every color-ordered amplitude can only have
contributions from Feynman graphs where adjacent particles become
collinear and form a pole in the amplitude and the corresponding contact
terms.
This will become important later on when we are talking about the
color-kinematics duality.

#### 2.2.3 Photon Decoupling Equation

With some basic knowledge of color-ordered amplitudes we can derive
another identity for tree amplitudes. If we have a look at the complete
four-point amplitude again ( 2.49 ) we find

  -- -------- -- --------
     @xmath      (2.52)
     @xmath      (2.53)
  -- -------- -- --------

where we used the cyclicity of the color-ordered amplitudes ( 2.50 ) and
the reflection identity ( 2.51 ). We would find the same decomposition
as in equation ( 2.53 ) for the gauge group @xmath where the @xmath
corresponds to a ’photon’. The correspondence can be seen by having a
look at the field strength tensor

  -- -------- -- --------
     @xmath      (2.54)
  -- -------- -- --------

Since the generator of the @xmath is the unit matrix, the part
proportional to the structure constant will drop out, reducing the
non-abelian field strength tensor to an abelian one.

  -- -------- -- --------
     @xmath      (2.55)
  -- -------- -- --------

But this means that the corresponding particle, the photon, will have no
interactions with the particles associated with the @xmath group.
Therefore every scattering amplitude containing a photon will vanish.
In order to derive the photon decoupling equation we will pick one of
the generators to be the generator of @xmath and than demand that our
full amplitude must vanish. Here we choose the fourth generator to be
the unit matrix @xmath

  -- -------- -- --------
     @xmath      (2.56)
     @xmath      (2.57)
  -- -------- -- --------

There is at least one combination of generators which will make the
second part non-vanishing, hence the linear combination of color-ordered
amplitudes must be zero

  -- -------- -- --------
     @xmath      (2.58)
  -- -------- -- --------

This is the photon decoupling equation for a four-point amplitude. A
second way of deriving this equation is to calculate the full matrix
element and demand that there is no difference between the matrix
elements of @xmath and @xmath . This condition then boils down to the
photon decoupling identity.
Furthermore the derivation of the photon decoupling identity can be
generalized to an arbitrary number of legs

  -- -------- -- --------
     @xmath      (2.59)
  -- -------- -- --------

#### 2.2.4 Color-Ordered Feynman Rules

The question raised should be if there is a direct way to obtain these
color-ordered amplitudes. The answer is yes. We can find color-ordered
Feynman rules which allow us to compute these amplitudes directly from
their contributing Feynman diagrams. We can obtain these rules by
transforming the structure constants in the normal Feynman rules into
the fundamental representation and then collect all pieces which
correspond to a specific ordering of external particles. Doing this we
arrive at the color-ordered Feynman rules displayed in figure 2.4 .

##### Obtaining @xmath through Color-Ordered Feynman Rules

The color-ordered four-point amplitude @xmath has contributions from
three Feynman diagrams: a s-channel, a t-channel and the four-point
vertex which are displayed in figure 2.5 .

Using the color-ordered Feynman rules in figure 2.4 we find

  -- -------- -- --------
     @xmath      (2.60)
  -- -------- -- --------

The reference momenta in the polarization vectors correspond to
different gauge choices. Since color-ordered amplitudes are gauge
invariant objects we can use any convenient gauge. We only have to be
careful to stick to one gauge choice during the calculation.
A handy gauge is to choose a momentum of the opposite helicity as
reference momentum. This will lead to the vanishing of most scalar
products between the polarization vectors. In our example we will choose
@xmath as a reference momentum for the polarization vectors with
negative helicity and @xmath with positive helicity. Therefore all but
the scalar product of @xmath will vanish and we are only left with

  -- -------- -- --------
     @xmath      (2.61)
     @xmath      (2.62)
  -- -------- -- --------

The next step is multiplying and dividing by @xmath and applying
momentum conservation which gives us the well known result

  -- -------- -- --------
     @xmath      (2.63)
  -- -------- -- --------

### 2.3 Factorization and Recursion Relations

Next we will turn to a basic property of any amplitude: factorization.
This property controls the behavior of an amplitude in the limit where
one of the internal propagators goes on-shell. By inverting this limit
and with the help of complex analysis it was possible to derive the BCFW
recursion relations [ 5 ] which enables us to build tree-level
amplitudes from a product of two lower-point amplitudes.

#### 2.3.1 Factorization

Factorization tells us that an amplitude splits up into a product of two
lower point amplitudes if one of the internal propagators goes on-shell

  -- -------- -- --------
     @xmath      (2.64)
  -- -------- -- --------

where the sum runs over all possible intermediate particles and @xmath
is the mass of the internal propagator.
Factorization is connected to the unitarity of the S-Matrix which makes
it an extremely fundamental attribute of scattering amplitudes. Moreover
it is also one of the reason why MHV and @xmath amplitudes have such
easy expressions. Because if we try to factorize an MHV amplitude we
only have three gluons with negative helicity to distribute between the
lower point amplitudes. However since all amplitudes of the type @xmath
vanish the factorization channel must also vanish.

#### 2.3.2 A Recursive Relation for Tree-Level Amplitudes

In [ 5 ] it was first described and proven that it is possible to
reconstruct the whole color-ordered amplitude if we know all its
factorization channels. If we consider a tree-level amplitude @xmath
this can be achieved by introducing a complex shift on two external legs
@xmath and @xmath

  -- -------- -- --------
     @xmath      (2.65)
     @xmath      (2.66)
  -- -------- -- --------

where the complex shift is defined as

  -- -------- -- --------
     @xmath      (2.67)
  -- -------- -- --------

The introduced shift leaves the square of the momenta and the total
momentum conservation invariant

  -- -------- -- --------
     @xmath      (2.68)
     @xmath      (2.69)
  -- -------- -- --------

Since we have a complex shift we can now consider a contour integral
over the shifted amplitude

  -- -------- -- --------
     @xmath      (2.70)
  -- -------- -- --------

where we manually introduced a pole at @xmath . If @xmath vanishes as
@xmath approaches infinity then this integral vanishes. But Cauchys
theorem also tells us that this contour integral is given by its
residues.

  -- -------- -- --------
     @xmath      (2.71)
  -- -------- -- --------

The residues of a simple pole @xmath is given by

  -- -------- -- --------
     @xmath      (2.72)
  -- -------- -- --------

The only pole in @xmath of an amplitude comes from on-shell intermediate
particles and therefore correspond to a factorization channels. But as
we have already seen in eq. ( 2.69 ) the shifts we introduce cancel out
when both shifted legs are on the same side of the factorization
channel. So the only possibility to obtain a pole is from a
configuration where @xmath and @xmath are on different sides of the
factorization channel. If we consider leg @xmath to be on one side with
the legs @xmath to @xmath the intermediate on-shell propagator is given
by

  -- -------- -- --------
     @xmath      (2.73)
                 (2.74)
     @xmath      (2.75)
  -- -------- -- --------

Therefore we have the following pole

  -- -------- -- --------
     @xmath      (2.76)
  -- -------- -- --------

Looking back at the whole expression for the residue ( 2.72 ) we find

  -- -------- -- --------
     @xmath      (2.77)
     @xmath      (2.78)
     @xmath      (2.79)
     @xmath      (2.80)
     @xmath      (2.81)
     @xmath      (2.82)
  -- -------- -- --------

Taking into account that every possible subset of external legs, where
the shifted legs @xmath and @xmath are in different sets, provide a pole
@xmath we get the following expression for the contour integral

  -- -------- -- --------
     @xmath      (2.83)
  -- -------- -- --------

where we used that the manually introduced pole at @xmath is given by

  -- -------- -- --------
     @xmath      (2.84)
  -- -------- -- --------

But since this contour integral vanishes we arrive at the following
recursion relation

  -- -------- -- --------
     @xmath      (2.85)
  -- -------- -- --------

which connects the real amplitude @xmath to its factorization channels
into lower-point amplitudes evaluated at complex momenta.

## Chapter 3 Color-Kinematic Duality

The color-kinematics duality discovered by Bern, Carrasco and Johansson
(BCJ) [ 14 ] provides a different way of dealing with the color factors
of an amplitude. As the name suggest this approach treats the color and
kinematic factors of gauge amplitudes on the same footing. Therefore we
will introduce a new relation between numerators of an amplitude which
is the kinematical analog to the well known Jacobi Identity of the
structure constants

  -- -------- -- -------
     @xmath      (3.1)
  -- -------- -- -------

We will split the discussion of the color-kinematic duality into two
parts. First we will consider the duality at tree-level where it has
been shown to exist [ 85 , 86 , 87 , 88 ] and later at loop level where
it is still a conjecture. However there is a vast variety of nontrivial
evidence in the literature [ 15 , 63 , 64 , 65 , 66 , 67 , 68 , 69 ] .

### 3.1 The Duality at Tree-Level

At tree-level the duality enables us to expand the full amplitude in the
following way

  -- -------- -- -------
     @xmath      (3.2)
  -- -------- -- -------

where @xmath and @xmath are the kinematical and the color factor
respectively which both fulfill all possible Jacobi Identities. For
example if we have a Jacobi Identity of the form

  -- -------- -- -------
     @xmath      (3.3)
  -- -------- -- -------

then we will demand that the corresponding numerators satisfy the same
identity

  -- -------- -- -------
     @xmath      (3.4)
  -- -------- -- -------

In the upcoming part we will outline how such a representation can be
found for a four-point amplitude.

#### 3.1.1 Duality Representation of a Four-Point Amplitude

A four-point amplitude can be expanded in its channels accordingly to
equation ( 3.2 )

  -- -------- -- -------
     @xmath      (3.5)
  -- -------- -- -------

where the Mandelstem variables are given by @xmath , @xmath and @xmath .
At first glance equation ( 3.5 ) looks a lot like the normal expansion
in Feynman diagrams but note that the contact term has already been
absorbed into the three-point vertices and that the numerators are gauge
invariant since they are linear combinations of color-ordered amplitudes
as we will see later.
In order to find such an representation we should first consider the
Jacobi Identity at four-points shown in figure 3.1 .

  -- -------- -- -------
     @xmath      (3.6)
  -- -------- -- -------

or expressed in the three channels we have

  -- -------- -- -------
     @xmath      (3.7)
  -- -------- -- -------

Now we will demand that the corresponding kinematical parts fulfill the
same identity

  -- -------- -- -------
     @xmath      (3.8)
  -- -------- -- -------

The first step to find such numerators is to expand the well known
color-ordered amplitudes in the channels they can factorize in

  -- -------- -- -------
     @xmath      (3.9)
  -- -------- -- -------

The sign of these numerators are not arbitrarily chosen, they correspond
to the right ordering of color factors we defined before ( 3.6 , 3.7 ).
In order to get an expression in terms of color-ordered amplitudes for
these numerators we will write down functional equations, which demand
that the numerators behave exactly like their color factors

  -- -------- -- --------
     @xmath      (3.10)
  -- -------- -- --------

To solve these equations we will choose an ansatz in terms of the two
independent color-ordered amplitudes and the two independent Mandelstam
variables. From dimensional analysis we conclude that the numerators
consist of an color-ordered amplitudes multiplied by a Mandelstam
variable, therefore we can form the following ansatz

  -- -------- -- --------
     @xmath      (3.11)
  -- -------- -- --------

The first equation in ( 3.10 ) is trivially satisfied since the
color-ordered amplitudes and the Mandelstam variables are invariant
under reflections. But the last two equations give us

  -- -------- -- --------
     @xmath      (3.12)
     @xmath      (3.13)
     @xmath      (3.14)
  -- -------- -- --------

where we used the following identities for four-point amplitudes

  -- -------- -- --------
     @xmath      (3.15)
     @xmath      (3.16)
     @xmath      (3.17)
  -- -------- -- --------

Now we can repeat these steps for the other two numerators and arrive at

  -- -------- -- --------
     @xmath      (3.18)
     @xmath      (3.19)
     @xmath      (3.20)
  -- -------- -- --------

With the help of the expansion of the color-ordered amplitudes in their
poles ( 3.9 ) we can fix all three parameters @xmath and @xmath

  -- -------- -- --------
     @xmath      (3.21)
     @xmath      (3.22)
     @xmath      (3.23)
  -- -------- -- --------

We can check that this representation satisfies the Jacobi Identity

  -- -------- -- --------
     @xmath      (3.24)
  -- -------- -- --------

and that the expansion in ( 3.5 ) is really valid

  -- -------- -- --------
     @xmath      (3.25)
     @xmath      (3.26)
     @xmath      (3.27)
     @xmath      (3.28)
  -- -------- -- --------

where we used the identities in ( 3.17 ). Transforming the color factors
into the adjoint representation, using the photon decoupling identity
and collecting all terms corresponding to an independent trace we arrive
at

  -- -------- -- --------
     @xmath      (3.29)
  -- -------- -- --------

which we already know as the color decomposition of a four-point
amplitude ( 2.49 ). We might get the impression that these numerators
are completely determined by the derivation we introduced above, but
this is not the case as we will discuss in the next section.

#### 3.1.2 Gauge Freedom of Numerators

If we apply a transformation on the numerators of the following form

  -- -------- -- --------
     @xmath      (3.30)
     @xmath      (3.31)
     @xmath      (3.32)
  -- -------- -- --------

we will keep the pole structure of the amplitude ( 3.5 ) intact since
the prefactor of our transformation @xmath will vanish. Furthermore it
also leaves the Jacobi Identity for the kinematical factors invariant

  -- -------- -- --------
     @xmath      (3.33)
  -- -------- -- --------

since in the massless case we have @xmath . These transformation are
called Generalized Gauge Freedom. We can also choose an expression

  -- -------- -- --------
     @xmath      (3.34)
  -- -------- -- --------

which sets @xmath . But our u-pole is not gone it has just been absorbed
into the numerators @xmath and @xmath . With this choice our amplitudes
now have the following expansion

  -- -------- -- --------
     @xmath      (3.35)
     @xmath      (3.36)
     @xmath      (3.37)
  -- -------- -- --------

From this we can already see that if we plug the last two equations into
the first one we arrive at the photon decoupling equation. But if we
take the last two on themselves we can derive

  -- -------- -- --------
     @xmath      (3.38)
     @xmath      (3.39)
     @xmath      (3.40)
  -- -------- -- --------

Realizing that the kinematic Jacobi equation now reads @xmath we find

  -- -------- -- --------
     @xmath      (3.41)
  -- -------- -- --------

which is one of the equations which were known at four-points ( 3.17 ).
Similarly we can derive all the other equations by setting the other
numerators to zero

  -- -------- -- --------
     @xmath      (3.42)
     @xmath      (3.43)
  -- -------- -- --------

#### 3.1.3 Duality Representation of a n-Point Amplitude

From [ 89 ] we can see that the way of finding BCJ conform numerators,
we presented here, can be generalized.

1.  Form a basis of color-ordered amplitudes and expand them in their
    poles

2.  Write down all Jacobi Relations and graph automorphisms

3.  Create an ansatz out of the color-ordered amplitudes times
    Mandelstam variables with the right dimension of the numerators

4.  Solve the functional equations of step two with the ansatz

The obvious problem of this method is that the ansätze get unmanageable
since the number of independent color-ordered amplitudes and the number
of Mandelstem variables grow very fast.

### 3.2 The Duality at Loop-level

The expansion of a loop-level amplitude is very similar to the one at
tree-level.

  -- -------- -- --------
     @xmath      (3.44)
  -- -------- -- --------

where @xmath is a symmetry factor which accounts for over counting in
the sum. As in the tree-level case we will demand that the numerators
will behave accordingly to their color factors. This means if we have a
Jacobi relation of the form

  -- -------- -- --------
     @xmath      (3.45)
  -- -------- -- --------

we demand that the numerators to follow the same equations

  -- -------- -- --------
     @xmath      (3.46)
  -- -------- -- --------

It is important to mention that unlike in the tree-level case, the BCJ
relations at loop-level have not been proven. This means if we construct
an amplitude with the help of the BCJ equation we have to check if their
unitarity cuts are correct. This has been done for several examples so
far [ 75 , 90 , 91 , 92 ] .
The real strength in using BCJ relations lies in the fact that the
number of graphs that we need to generate is drasticly reduced as we
will see in the case of the two-loop five-point amplitude.

### 3.3 From Gauge Theory to Gravity

Probably the most important feature of the BCJ relations is the provided
connection to gravity by the double copy procedure. If we have a BCJ
expansion of an gauge theory amplitude ( 3.2 ) or ( 3.44 ) we can simply
replace the color factor with another copy of the corresponding
kinematical factor to obtain a gravity amplitude. For example if we
consider an L-loop amplitude in @xmath =4 sYM where the numerators
satisfy all BCJ equations

  -- -------- -- --------
     @xmath      (3.47)
  -- -------- -- --------

then we can connect it to an @xmath =8 SUGRA amplitude by replacing the
color factors @xmath with another copy of kinematical factor @xmath

  -- -------- -- --------
     @xmath      (3.48)
  -- -------- -- --------

where the R-symmetry indices in the second numerator have been shifted

  -- -------- -- --------
     @xmath      (3.49)
  -- -------- -- --------

This shift might be better understood after we will discuss amplitudes
in @xmath =4 sYM in chapter 5.
The details of which product of numerators is known to lead to which
gravity theory are given in the table below.

  gauge numerator @xmath   gauge numerator @xmath   Gravity
  ------------------------ ------------------------ -----------------
  @xmath =4 sYM            @xmath =4 sYM            @xmath =8 SUGRA
  @xmath =4 sYM            @xmath =0 sYM            @xmath =4 SUGRA
  @xmath =0 sYM            @xmath =0 sYM            @xmath =0 SUGRA

Here @xmath =0 SUGRA consists out of a graviton, an antisymmetric tensor
and a dilaton.
At tree-level this connection has the following form

  -- -------- -- --------
     @xmath      (3.50)
     @xmath      (3.51)
  -- -------- -- --------

and has been known before in the form of the KLT relations [ 93 ] .
These relations, originally derived in string theory but valid in the
field theory limit, connect gravity and gauge theories exactly through
this double copy procedure. But if we have an amplitude in the BCJ
representation it has been conjectured that the double copy procedure
can be applied directly. ¹ ¹ 1 Similar to the BCJ equations there have
been several non trivial examples where
This connection is rather remarkable. At the Lagrangian level the two
theories are quite different, while Yang-Mills gauge theories have a
rather simple Lagrangian which only involves three- and four-point
vertices, gravity has an infinite numer of interactions in the
Lagrangian. Therefore it is actually much easier to calculate an
amplitude in @xmath =8 SUGRA through the double copy procedure then
directly obtaining it. Due to the BCJ relations and the double copy
procedure it has become possible to directly carry out multiloop
calculations for gravity amplitudes, which stimulated a renaissance in
the study of ultra-violet properties of gravity theories.

## Chapter 4 Calculating Loop Amplitudes

If direct integration is prohibitive the general strategy of calculating
a loop amplitude is to rewrite the Feynman integrals as a linear
combination of master integrals

  -- -------- -- -------
     @xmath      (4.1)
  -- -------- -- -------

where @xmath is our basis of master integrals and @xmath are their
coefficients.
The basis of master integrals is theory independent and therefore we can
solve the MI’s for all theories and focus on the generation of the
theory dependent coefficients.
One strategy to obtain the coefficients is to extend equation ( 4.1 ) to
the integrand level. In order to achieve this we will need to introduce
additional terms; the so called spurious terms

  -- -------- -- -------
     @xmath      (4.2)
  -- -------- -- -------

Here m is in general bigger then n because @xmath denotes the integrands
of the master integrals @xmath , which also contain spurious integrands.
If we integrate equation ( 4.2 ) the spurious integrands we will vanish
and therefore we arrive back at equation ( 4.1 ). Since we are now
working at the integrand level we achieved that any explicit integration
procedure and/or any matching procedure between cuts of amplitudes and
cuts of master integrals is replaced by simple polynomial fit.
In the following chapter we will discuss two ways of calculating loop
amplitudes which are both based on a reduction algorithm which are valid
before integration. First we will explain how an one-loop amplitude is
calculated through the OPP method [ 9 , 23 ] and then move to the
calculation of arbitrary loop amplitudes via the integrand-reduction
through multivariate polynomial division [ 1 ] . The coefficients
appearing in the linear combination ( 4.2 ) will then be fitted by
evaluating product of tree amplitudes at the solution of the
corresponding cut system.

### 4.1 Integrand-Reduction for One-Loop Amplitudes

For simplicity we will write all upcoming formulas for massless
particles in four dimensions.

But it is important to note that these methods are valid for massive
particles as well and have been extended to arbitrary dimensions [ 23 ,
24 ] .
At one-loop it was realized that one can choose a basis of master
integrals which only has scalar integrals [ 19 ] . As the name suggests
a scalar integral is of the form

  -- -------- -- -------
     @xmath      (4.3)
  -- -------- -- -------

where @xmath or @xmath . Each of these integrals has a theory dependent
coefficient which we want to determine.

#### 4.1.1 The OPP Algorithm

Instead of determining the coefficients directly we will pull them under
the integral sign and delay the integration till these coefficients are
determined. Hence we reduce the problem of determining the coefficients
to a simple polynomial fit. Using a polynomial fit comes at a price
namely the introduction of additional spurious terms which will vanish
after integration.
With this idea the OPP parametrization of the numerator takes the
following form

  -- -------- -- -------
     @xmath      (4.4)
  -- -------- -- -------

where @xmath , @xmath , @xmath and @xmath are constants and @xmath ,
@xmath , @xmath and @xmath are polynomials in q. If we consider an
integrand instead of the numerator, cancel all propagators and combine
the constant and spurious terms in each channel into one residue @xmath
we see the driving principle of this reduction

  -- -------- -- -------
     @xmath      (4.5)
  -- -------- -- -------

namely the multi-pole nature of any amplitude. This means if we fix the
loop momenta in a way that it sets certain internal propagators on-shell
then we expect the amplitude to have a pole in this channel. The OPP
reduction can be understood as separating these poles into different
terms and therefore making this feature explicit.
As mentioned earlier if we integrate expression ( 4.5 ) the spurious
terms will vanish and we will arrive at the one-loop basis of master
integrals

  -- -------- -- -------
     @xmath      (4.6)
  -- -------- -- -------

In order to use the OPP method we have to identify all spurious terms
which can appear in the residues. These spurious terms are scalar
products between the loop momentum and auxiliary vectors which are
independent of the theory. Thus if we determine them once we can reuse
them in other calculations.

##### Obtaining the Spurious Terms

To see how we can determine the spurious terms we will consider a
four-point one-loop amplitude [ 89 ] .
In four dimensions any Lorentz vector can be expressed in terms of a
four dimensional basis e.g. for our loop momentum we find

  -- -------- -- -------
     @xmath      (4.7)
  -- -------- -- -------

where the auxiliary vectors @xmath and @xmath are given by

  -- -------- -- -------
     @xmath      (4.8)
     @xmath      (4.9)
  -- -------- -- -------

Here @xmath denotes the polarization vector @xmath without the
normalization. The auxiliary vector @xmath is perpendicular to all
external momenta

  -- -------- -- --------
     @xmath      (4.10)
  -- -------- -- --------

At one-loop it is always possible to express a scalar product between
the loop momentum and the momentum of an external particle as a linear
combination of propagators. But in order for OPP expansion ( 4.4 ) to be
meaningful we need the residues @xmath to be independent of the
propagators @xmath . Otherwise we would be able to absorb terms which
are proportional to the propagators into lower-point residues and the
expansion would be arbitrary.
Therefore our residues must be independent of scalar products between
the loop momenta and the momenta of external particles. To see which
other scalar products we can form we have to consider the loop momentum
basis for each residue.

##### Quadruple-Cut Residue

For the quadruple-cut displayed in figure 4.1 the overall momentum
conservation reduces our independent external momentums down to three.
But since @xmath is perpendicular to all these momenta we can use this
vector as the fourth base element for the Lorentz vectors

  -- -------- -- --------
     @xmath      (4.11)
  -- -------- -- --------

As we have mentioned earlier we can not have any scalar products with
external momenta. So the only possibility is to have scalar products of
the form @xmath in the residue. From renormalizability we know that the
power of loop momentum can not exceed the number of propagators in the
denominator. Therefore the quadruple-cut residue takes the following
form

  -- -------- -- --------
     @xmath      (4.12)
  -- -------- -- --------

From the corresponding quadruple-cut equations

  -- -------- -- --------
     @xmath      (4.13)
     @xmath      (4.14)
     @xmath      (4.15)
     @xmath      (4.16)
  -- -------- -- --------

we can see that as soon as we solve the quadratic equation for @xmath
all other quadratic equations reduce to linear ones. Hence we actually
have one quadratic and three linear equations, so we have only two
solutions to a quadruple-cut. But this is bad news since we are not able
to fit the coefficients of the residue at the corresponding cut.
Fortunately it is possible to reduce the number of coefficients down to
two. This can be seen if we expand the metric tensor in our Lorentz
basis

  -- -------- -- --------
     @xmath      (4.17)
  -- -------- -- --------

and use this to calculate the square of the loop momentum

  -- -------- -- --------
     @xmath      (4.18)
  -- -------- -- --------

But since we are on the quadruple-cut the square of the loop momentum is
set to zero. This means we can use equation ( 4.18 ) to connect the
square of our auxiliary vector @xmath to scalar products including only
external momenta. But these scalar products between external momenta and
the loop momentum are always reducible. In detail this means we can
absorb the scalar products of the form @xmath with @xmath into either
the linear term for odd @xmath s or into the constant term for even
@xmath s. Therefore our residue includes only terms which are maximal
linear in the loop momentum

  -- -------- -- --------
     @xmath      (4.19)
  -- -------- -- --------

##### The Triple-Cut Residue

For a triple-cut displayed in figure 4.2 we only have two independent
external momenta. This means we need two auxiliary vectors to form the
basis

  -- -------- -- --------
     @xmath      (4.20)
  -- -------- -- --------

By the same argument as we used in the quadruple-cut we can only have
scalar products of the form @xmath and @xmath with a maximum of three
powers in @xmath . Therefore the residue takes the following form

  -- -------- -- --------
     @xmath      (4.21)
  -- -------- -- --------

But if we expand the loop momenta in terms of our triple-cut basis

  -- -------- -- --------
     @xmath      (4.22)
  -- -------- -- --------

and have a look at the three cut conditions

  -- -------- -- --------
     @xmath      (4.23)
     @xmath      (4.24)
     @xmath      (4.25)
  -- -------- -- --------

we obtain the constraint that @xmath . Therefore all terms with both
scalar products @xmath and @xmath in our residues will vanish and we
only have

  -- -------- -- --------
     @xmath      (4.26)
  -- -------- -- --------

##### The Double-Cut Residue

For a double-cut displayed in figure 4.3 we only have one independent
external momenta and we have to use three auxiliary vectors to form the
basis

  -- -------- -- --------
     @xmath      (4.27)
  -- -------- -- --------

Therefore we can form three different scalar products @xmath , @xmath
and @xmath . From the renormalizability condition we know that we can
only have up to quadratic terms in the residue. Putting this together we
find the following parametric form of the residue

  -- -------- -- --------
     @xmath      (4.28)
  -- -------- -- --------

By the same argument we had before the scalar products belonging to the
coefficient @xmath vanish and therefore the residue for the bubble
reduces to

  -- -------- -- --------
     @xmath      (4.29)
  -- -------- -- --------

##### The Single-Cut Residue

For a single-cut displayed in figure 4.4 we have to use four auxiliary
vectors as the basis

  -- -------- -- --------
     @xmath      (4.30)
  -- -------- -- --------

Therefore we can form four scalar products between the loop momentum and
auxiliary vectors. If we take into account the renomalizability
condition we can find the following form of the residue

  -- -------- -- --------
     @xmath      (4.31)
  -- -------- -- --------

With the knowledge of the parametric form of the residue it is now
possible to simply evaluate the numerator at certain values of the loop
momenta in order to determine the theory dependent coefficients @xmath .
Reminding ourselves of the OPP parametrized numerator

  -- -------- -- --------
     @xmath      (4.32)
  -- -------- -- --------

we see that we have a large number of unknowns. In order to determine
the unknowns efficiently one triangularizes the system of equations.
This can be done by evaluating the integrand at loop momenta where
several propagators go on-shell. This reduces the number of contributing
residues as we can see from equation ( 4.32 ).
A second advantage from this way of fitting the coefficients comes from
the possibility to use the unitarity method before integration. This
method connects amplitudes where internal propagators are set on-shell
to product of simpler amplitudes. Hence we can skip the step of
calculating the full numerator and instead we are able to directly fit
the coefficients from products of simpler amplitudes.

#### 4.1.2 Residues from Unitarity Cuts

In the situation where are a set of certain internal propagators go
on-shell

  -- -------- -- --------
     @xmath      (4.33)
  -- -------- -- --------

the unitarity of the S-Matrix will ensure that the amplitude factorizes
into a product of lower-loop amplitudes. This can be seen if we split up
the S-Matrix into a trivial and non trivial part @xmath and then demand
the unitarity condition

  -- -------- -- --------
     @xmath      (4.34)
     @xmath      (4.35)
  -- -------- -- --------

The next step is to contract these matrices with a initial and final
state and insert a complete set of intermediate states on the right-hand
side

  -- -------- -- --------
     @xmath      (4.36)
  -- -------- -- --------

This is the well known optical theorem. If we perturbatively expand this
equation in the coupling constant of the theory and compare terms order
by order we see that we found a link between the imaginary part of a
scattering amplitude and the product of two lower-loop amplitudes. This
has been known since the 1960s in form of the Cutkosky rules. In recent
years this technique has been extended to compute the coefficients of
master integrals. This can be done by matching the unitarity cuts of an
amplitude to the cuts of the master integrals. Since the coefficients of
the master integrals are purely rational they are not affected by this
procedure and one can simply read them off after all integrations are
performed.
Given that we work at the integrand level it is sufficient to know that
unitarity guarantees that an amplitudes factorizes into products of
lower-loop amplitudes, which was first presented in [ 23 ] . With this
information we can go back to the several cuts we have to perform to
calculate a massless one-loop amplitude in four dimensions.

##### Generating a Quadruple-Cut Residue

From the OPP reduction algorithm we know that the first residue in our
decomposition ( 4.32 ) appears on top of four propagators @xmath and
@xmath . If we apply a quadruple-cut where we set all four propagators
on-shell we will isolate this residue. On the side of the integrand we
know from unitarity that setting the four propagators on-shell will lead
to a factorization of the amplitude into a product of four tree
amplitudes displayed in figure 4.5 .

This gives us the following equation for the determination of the
coefficients in the residue

  -- -------- -- --------
     @xmath      (4.37)
  -- -------- -- --------

Since there are two solutions for the loop momentum which set the four
propagators @xmath and @xmath to zero we obtain two equations of the
form of ( 4.37 ). With these equations it is then possible to fit the
two coefficients appearing in the parametrization of the quadruple-cut
residue ( 4.19 ).

##### Generating a Triple-Cut Residue

The next residue we want to determine sits on three propagators @xmath
and @xmath . If we set these propagators on-shell we will not only
isolate the corresponding residue but also have a contribution of the
quadruple-cut residue

  -- -------- -- --------
     @xmath      (4.38)
  -- -------- -- --------

where the sum runs over a subset of the quadruple-cut residues which
share the same propagators @xmath and @xmath . Since the product of
amplitudes includes all the propagators in the denominator we need to
divide this equation by them to obtain the key equation to fit the
residues

  -- -------- -- --------
     @xmath      (4.39)
  -- -------- -- --------

where we used the numerator will factorize into a product of tree
amplitudes is displayed in figure 4.6 .

In this situation the cut equations @xmath are not able to freeze the
four components of the loop momentum. Hence we have an infinite set of
solutions on this cut. This means we can easily fit all coefficients
appearing in the parametrization of the triple-cut residue ( 4.26 ).

##### Generating a Double-Cut Residue

The double-cut residue sits on two propagators @xmath and @xmath . Here
the situation is similar to the triple-cut residue. Setting the two
propagators on-shell not only isolates the residue but also the two
higher residues. Subtracting these higher residues to obtain an equation
for the determination of the pure double-cut residue we arrive at

  -- -------- -- --------
     @xmath      (4.40)
  -- -------- -- --------

Here unitarity ensures that our numerator will factorize into a product
of tree amplitudes as displayed in figure 4.7 .

In this situation the cut equations are only able to freeze two
components of the loop momentum and therefore we are also able to fit
all the coefficients in the parametrization of the double-cut residue (
4.29 ).

##### Generating a Single-Cut Residue

For the single-cut residue we only have on propagator @xmath which we
can set on-shell. Thus we will get contributions from all higher
residues, which share the propagator @xmath

  -- -------- -- --------
     @xmath      (4.41)
  -- -------- -- --------

As in the other cases we replaced the numerator with a product of tree
amplitudes as displayed in figure 4.8 .

With one cut equation we have three free components for the loop
momentum. Therefore we are able to fit all coefficients appearing in the
parametrization of the single-cut residue ( 4.31 ).

As we have seen in the discussion above we always need the higher
residues to obtain the lower ones. Therefore we can systematically
obtain an one-loop amplitude by starting with all maximum cuts and then
moving step by step down to the lower cuts. Where at each step we will
have to subtract the higher residues and then obtain the corresponding
residue by a polynomial fit of the coefficients in its parametrization.
This algorithm has been implemented into two computer codes namely
’CutTools’ [ 26 ] and ’SAMURAI’ [ 24 ] . Both codes have been
implemented into programs, ’MadLoop’ [ 95 ] and ’GoSam’ [ 31 ]
respectively, which provide efficient tools for automated NLO
calculations at the LHC.

### 4.2 Calculating Loop Amplitudes with the Integrand-Reduction
Algorithm

If we want to extend the ideas presented in the OPP method to higher
loop amplitudes we are confronted with one major problem. There is no
systemized approach to the determination of the scalar products which
can appear in the residues. Especially since at higher loops we have
additional scalar products appearing in the residues which will not
vanish upon integration. These scalar products will then lead to a
non-scalar master integral.
Here we will discuss the integrand-reduction through multivariate
polynomial division [ 1 ] which will solve this problem for any loop
amplitude and at one-loop will give rise to the OPP parametrization of
the integrand.

#### 4.2.1 Multivariate Polynomial Division

The aim of this integrand-reduction is to rewrite the integrand in its
multi-pole expansion

  -- -------- -- --------
     @xmath      (4.42)
  -- -------- -- --------

The basic principle of that algorithm is to iteratively perform a
multivariate polynomial division which allows us to split up the
numerator

  -- -------- -- --------
     @xmath      (4.43)
  -- -------- -- --------

into a part which is a linear combination of the propagators

  -- -------- -- --------
     @xmath      (4.44)
  -- -------- -- --------

and a part which can not be written as a linear combination of the
propagators the so called remainder @xmath . As the notation suggests
all the prefactors of the propagators in eq. ( 4.44 ) will be starting
points for another recursion step. The recursion will automaticly stop
when we only have one propagator left in the denominator @xmath .
Because we know from the renormalizibilty condition that the
corresponding numerator is linear in the loop momentum, we will
therefore not be able to express it in terms of one quadratic propagator
@xmath . Hence the whole numerator will be the remainder.
In order to understand how we can use a multivariate polynomial division
to reduce our integrand we first need to discuss some basic ideas of
algebraic geometry.

##### A small Excursion into Algebraic Geometry

-   Ideal

If we consider the space of all multivariate polynomials in z @xmath
where z is @xmath we can form a special subspace called ideal @xmath .
The ideal is special in a way that if we take any polynomial from it
@xmath and multiply it by an polynomial of the full space @xmath we end
up in the ideal again @xmath . We can generate such an subspace by
forming all linear combinations of its generators

  -- -------- -- --------
     @xmath      (4.45)
  -- -------- -- --------

where the coefficients of the linear combination are itself polynomials
in @xmath .

-   Gröbner Basis

If we choose a monomial ordering namely decide if @xmath is bigger or
smaller then @xmath then we can construct a special set of generators
out of an ideal by the Buchberger algorithm. This special set is called
Gröbner Basis

  -- -------- -- --------
     @xmath      (4.46)
  -- -------- -- --------

where in general @xmath the number of generators in the Gröbner Basis is
not equal to the number of generators in a different set e.g. @xmath in
equation ( 4.45 ). Another important attribute is that if we consider a
point in the ideal @xmath where all generators vanish simultaneously
@xmath then this point has the same effect one the Gröbner Basis namely
@xmath .

-   Multivariate Division with by a Gröbner Basis

Working in the Gröbner basis has the advantage that the multivariate
polynomial division of an expression by an ideal is well defined.
Meaning that if we take a polynomial @xmath and perform a division by a
Gröbner Basis @xmath we will obtain an unique remainder @xmath and an
unique quotient @xmath

  -- -------- -- --------
     @xmath      (4.47)
  -- -------- -- --------

This division can be understood as splitting up the polynomial @xmath
into two parts One which belongs to the ideal which is called the
quotient @xmath and one that does not which is called the remainder
@xmath .

-   Hilbert’s weak Nullstellensatz

Another important theorem is Hilbert’s weak Nullstellensatz. It simply
states that if we can not find a point where all generators vanish
simultaneously then one is in the ideal @xmath , meaning that the ideal
contains the whole space of polynomials.

##### Applying Algebraic Geometry to the Integrand

In order to apply these concepts to an integrand let us consider an
@xmath -loop numerator sitting on top of @xmath propagators

  -- -------- -- --------
     @xmath      (4.48)
  -- -------- -- --------

The first step is to express all our Lorentz vectors in their
components. Therefore we can reexpress the numerator and the propagators
as polynomials in the components of the loop momenta @xmath

  -- -------- -- --------
     @xmath      (4.49)
     @xmath      (4.50)
  -- -------- -- --------

The next thing to note is that the propagators form an ideal

  -- -------- -- --------
     @xmath      (4.51)
  -- -------- -- --------

From the ideal we can construct its Gröbner Basis by the Buchberger
algorithm

  -- -- -- --------
           (4.52)
  -- -- -- --------

where we chose here and in the following chapters the lexicographic
order.
With the help of the Gröbner Basis we can now perform a multivariate
polynomial division which splits the integrand into a part which belongs
to the ideal @xmath and one which is not in the ideal @xmath

  -- -------- -- --------
     @xmath      (4.53)
  -- -------- -- --------

But since gamma is in the ideal we can rewrite it as a linear
combination of the propagators

  -- -------- -- --------
     @xmath      (4.54)
  -- -------- -- --------

If we combine this with the whole integrand we find the following
formula

  -- -------- -- --------
     @xmath      (4.55)
  -- -------- -- --------

This equation provides us a recursion relation since we connected an
integrand with n propagators with its multi-pole channel and a sum over
integrands with @xmath propagators. The recursion relation will
automaticly stop when we only have one propagator in the denominator
left since there the whole numerator will be identified as the
remainder.
We can find the starting point of the integrand-reduction by introducing
the reducibility criterion [ 1 ] . We will call a numerator reducible if
the remainder of the polynomial division vanishes, which implies that
the whole numerator is part of the ideal formed by the propagators.
Therefore we can rewrite the numerator as a linear combination of
lower-point numerator times propagators.

###### Proposition 4.2.1

The integrand @xmath is reducible iff the remainder of the division
modulo a Gröbner basis vanishes, i.e. iff @xmath

Proposition 4.2.1 allows us to prove a second proposition

###### Proposition 4.2.2

An integrand @xmath is reducible if the cut @xmath leads to a system of
equations with no solution.

We can prove Proposition 4.2.2 with the help of the weak
Nullstellensatz.
If a system of cut equations has no solutions i.e.

  -- -------- -- --------
     @xmath      (4.56)
  -- -------- -- --------

does not have a solution, the weak Nullstellensatz tells us that @xmath
is part of the ideal

  -- -------- -- --------
     @xmath      (4.57)
  -- -------- -- --------

But if @xmath is part of the ideal the whole space of polynomials is
part of the ideal. Therefore also the numerator is part of the ideal.
Hence we can rewrite it as a combination of denominators

  -- -------- -- --------
     @xmath      (4.58)
  -- -------- -- --------

where the coefficients @xmath will play the role of a lower-point
integrand @xmath thus the integrand is reducible.
Now that we have identified the starting and end point of our reduction
we can see that equation ( 4.55 ) will produce an
integrand-decompositions of the form presented in ( 4.42 ).
In order to show that the remainders of the polynomial division are
really the multi-pole channels of the amplitude let us consider the
first non vanishing remainder. From the reducible criterion we know that
this will happen for an @xmath -loop amplitude when we have @xmath
propagators in the denominator. At this point the corresponding cut
equations

  -- -------- -- --------
     @xmath      (4.59)
  -- -------- -- --------

will freeze the loop momenta completely. We will refer to this situation
as a maximum cut. If we want to identify the corresponding remainder
with the multi-pole channel where all these propagators are on-shell
then the remainder should not get any contributions from lower-point
remainders.
We can easily verify this by reminding ourselves that all the
lower-point remainders will originate from the ideal constructed from
the propagators we set on-shell. Therefore all lower-point remainders
must vanish if we set all propagators to zero. Furthermore simply by the
definition of the integrand-reduction algorithm all irreducible scalar
products will appear in the remainders. Therefore we are really able to
identify these remainders with the residue at the corresponding cut.

##### Maximum Cut Theorem

The first important consequence of the reduction algorithm manifests
itself in the form of the maximum cut theorem [ 1 ] . Under the
assumption that the cut equations of the maximum cut provide us with a
finite number of solutions @xmath with multiplicity one the maximum cut
theorem states

###### Theorem 4.2.1 (Maximum cut)

The residue at the maximum-cut is a polynomial parametrized by @xmath
coefficients, which admits a univariate representation of degree @xmath
.

In other words the number of coefficients we have to fit to determine
the remainder of a maximum cut will always coincide with the number of
solutions of the cut equations. This ensures that at any cut we will
always have enough values of loop momenta to fit all the coefficients in
the residue. Because if we consider a cut where less then the maximum
number of propagators are on-shell we will always find an infinite
number of solutions. This theorem underlines the identification of the
remainder with the multi-pole channel of the amplitude and ensures that
every residue can be fixed with values of the loop momentum which
correspond to this channel.
As an example of this theorem we can look back at the maximum cut of an
one-loop amplitude. From the discussion of the quadruple-cut residue we
know that we have two unknowns in our parametrization [see equation (
4.19 )]. The cut equations of the maximum cut involve one quadratic
equation and three linear ones, therefore this system of equations has
two solutions. This means that as stated from the maximum cut theorem
the number of cut solutions and coefficients in the residue
coincidences.

#### 4.2.2 Application of the Reduction Algorithm

The presented integrand-reduction algorithm can be used in two ways. The
first approach is called ’fit-on-the-cut’. Here one basicly follows the
same strategy we presented in the OPP reduction. First we use a generic
numerator which includes all possible scalar products up to the
renormalizibilty condition and then reduces integrand with the reduction
algorithm. From this we will obtain the parametric form of the residues
which can appear. The parametric form only depends on the form of the
corresponding propagators and therefore we can reuse it for any other
amplitude which shares this residue.
After we obtained the parametric form of all residues the calculation of
the loop amplitude is reduced to the task of a polynomial fit. The
maximum cut theorem ensures that we are able to fit all the coefficients
of a residue on its corresponding cut. Furthermore also enables us to
use the unitarity method before integration for an even easier
generation of these coefficients.

The second approach is called ’divide-and-conquer’. The first step is to
generate the full integrand of the amplitude, which can be done through
any generator of loop amplitudes. The second step is to use
integrand-reduction directly on the integrand. The reduction algorithm
will directly produce the scalar products including their coefficients.
Besides this nice feature there is another advantage. At no step of the
reduction the explicit solutions to the cut equations is needed.
Therefore it becomes possible to reduce amplitudes which have higher
powers of propagators in the denominator [ 96 ] .
In chapter six and seven we will present two examples where we used the
’fit-on-the-cut’ approach for loop amplitudes. These two examples are
the five-point one- and two-loop amplitudes in @xmath =4 sYM. In order
to use unitarity method before integration to fit the coefficients in
the residues we need to discuss the tree amplitudes of this theory
first, which will be the subject of the next chapter.

## Chapter 5 Scattering Amplitudes in @xmath=4 sYM

@xmath =4 sYM is the harmonic oscillator of four dimensional gauge
theories…

David Gross

The harmonic oscillator is of extreme importance for the understanding
of modern physics and especially quantum mechanics. Furthermore it is
one of the few quantum mechanical systems where an exact analytic
solution is known. It therefore led to important insights into quantum
mechanics, such as the second quantization. There is reasonable hope
that @xmath =4 super Yang-Mills can play the same role for gauge
theories.
The recent years have shown that @xmath =4 sYM has a remarkable simple
structure in its results. This is always a sign that there are many
hidden symmetries at work in this theory and indeed in the planar limit
an infinitesimal Yangian symmetry [ 97 , 98 , 99 ] was found. The
Yangian symmetry is a combination of both the conformal and the dual
conformal invariance of the theory. Furthermore it was possible to
reformulate the theory in the planar limit in an on-shell formulation [
3 ] which made these symmetries manifest. The generalization of BCFW
recursion relations made it possible to write down the all loop
integrand in the planar limit [ 100 ] .
Even beyond the integrand there has been remarkable progress. The
technology of symbols of transcendental functions is able to strongly
constrain the polylogarithms which appear in the final result [ 101 ,
102 ] .
After a short introduction to @xmath =4 sYM we will describe on-shell
methods to construct any MHV or @xmath tree amplitude in @xmath =4 sYM [
103 ] . Later in this chapter we will discuss how this description also
helps us with the sum over all internal states in the unitarity
construction of our integrands [ 104 ] .

### 5.1 An Introduction to @xmath=4 sYM

Similar to Yang-Mills @xmath =4 super Yang-Mills (sYM) is a gauge theory
with a non-abelian gauge group @xmath living in four dimensions. The
difference to Yang-Mills comes from an additional symmetry between the
bosons and fermions called supersymmetry. In fact here we have four
supersymmtry generators as denoted by @xmath =4.
In order to be invariant under this fourfolded supersymmetry we need to
introduce a scalar field s and a spin- @xmath fermion field f besides
the normal gluon field g.

@xmath

For @xmath =4 sYM we have one gluon field @xmath with helicity @xmath ,
four fermion fields @xmath with helicity @xmath and six real scalar
fields @xmath with helicity @xmath . If we consider the generators of
the fourfolded supersymmetry the supercharges @xmath we can see that
they transform a bosonic field into a fermionic one and vice versa

  -- -------- -- -------
     @xmath      (5.1)
     @xmath      (5.2)
     @xmath      (5.3)
     @xmath      (5.4)
     @xmath      (5.5)
  -- -------- -- -------

A second thing to note is that the supersymmetry connects all three
fields we introduced. That was the reason why we had to introduce the
additional fields to our gluon field.
In order to make this fourfolded supersymmetry manifest we combine the
three fields into one superfield @xmath

  -- -------- -- -------
     @xmath      (5.6)
  -- -------- -- -------

and consider scattering amplitudes of these superfields [ 103 ] .
In the literature @xmath =4 sYM is often referred to as a maximal
supersymmetric theory because we have the maximum number of
supersymmetries without having to introduce a spin-two particle in the
superfield. This maximum amount of supersymmtry has an important
consequence. It leads to a vanishing @xmath -function. Therefore the
coupling constant does not run in the theory and this is a sufficient
condition for the UV finiteness of the theory.
Despite these differences Yang-Mills theory and @xmath =4 sYM share
several properties. Since the latter is a much simpler theory it serves
as an ideal testing ground for new calculations methods for Yang-Mills
theory and QCD. Furthermore at tree-level the all gluon part of @xmath
=4 sYM is identical to the Yang-Mills amplitude. At one-loop the
situation becomes a little bit more complicated but we can still split
up the one-loop Yang-Mills amplitude into a part in @xmath =4 sYM, one
in @xmath =1 sYM and one where a scalar runs in the loop

  -- -------- -- -------
     @xmath      (5.7)
  -- -------- -- -------

which is usually simpler than the original amplitude.
Another reason to study @xmath =4 sYM comes form the connection to
@xmath =8 SUGRA through the BCJ equations [ 14 ] we discussed earlier.
This connection enabled calculation of higher loop amplitudes in the
latter which would otherwise be considered impossible. In addition these
loop amplitudes turned out to be UV finite in four dimensions. This is
in contradiction with arguments which were based solely on power
counting and raised the hope that @xmath =8 SUGRA might be UV finite
too.

### 5.2 Three-Point Generating Functions

The introduction to on-shell methods as input for loop level
calculations mainly follows a lecture given at the Arnold Sommerfeld
School [ 89 ] and [ 103 ] .
The first scattering amplitudes which can appear are the three-point
ones, and these amplitudes are rather special. At three-points momentum
conservation is prohibiting any kinematical invariants for real massless
momenta

  -- -------- -- -------
     @xmath      (5.8)
  -- -------- -- -------

where @xmath . The solution for that problem is to go to complex momenta
and treat the momentum and its complex conjugate separately. Later this
will play an important role in our analysis.
With the big particle content we described before we get a huge variety
of color-ordered three-point amplitudes

  -- -------- -- --------
     @xmath      (5.9)
     @xmath      (5.10)
     @xmath      (5.11)
     @xmath      (5.12)
  -- -------- -- --------

In order to treat this abundance efficiently we should introduce a
generating function, which encodes the whole particle and helicity
content. From the example amplitudes we can already see that MHV
three-point amplitudes are functions only of the angle brackets and
@xmath amplitudes are functions only of the square brackets. Thus we
should distinguish between generating functions of MHV and @xmath
amplitudes. Let’s focus on the MHV generating functions for now.
Looking back at the example amplitudes we see that all MHV three-point
amplitudes sit on the same denominator @xmath and only have different
spinor products as a numerator. From dimensional analysis we know that
the total power of angle products in the numerator must be four. Since
this power is finite it is convenient to introduce Grassmann variables,
because they also support only finite powers. In detail that means we
introduce four Grassmann numbers @xmath for each particle, where @xmath
is the particle label and @xmath is the SU(4) group index which runs
form @xmath to @xmath according to the maximum power in the polynomial.
So putting everything together we get the following generating function

  -- -------- -- --------
     @xmath      (5.13)
  -- -------- -- --------

For Grassmann numbers the delta function and polynomials are the same
object so we can replace the product with an delta function raised to
the fourth power

  -- -------- -- --------
     @xmath      (5.14)
  -- -------- -- --------

where I dropped the @xmath label. If we now want to compute a specific
amplitude we need to integrate over all Grassmann numbers with the
appropriate measure. In order to understand this better let’s obtain the
all gluon amplitude

  -- -------- -- --------
     @xmath      (5.15)
     @xmath      (5.16)
     @xmath      (5.17)
  -- -------- -- --------

where we have used the notation @xmath . Furthermore the last lines
follows because it is the only expression with no @xmath ’s or @xmath
’s.
In general to obtain an amplitude of specific particles we need to use
the following measure for the integral.

  helicity   measure
  ---------- ---------
  @xmath     1
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath

As we have stated above this generating function only encodes MHV
amplitudes. So what happens if we try to obtain an @xmath amplitude
@xmath from our generating function

  -- -------- -- --------
     @xmath      (5.18)
     @xmath      (5.19)
  -- -------- -- --------

where the last line follows because we only have eight powers of @xmath
and integrate with 12 powers. This is what we should expect since the
introduced generating function only encodes MHV amplitudes. Following a
similar strategy as in the MHV case we find a @xmath generating function

  -- -------- -- --------
     @xmath      (5.20)
  -- -------- -- --------

which is the complex conjugated of the MHV generating functions. Note
that the generating functions now depends on different Grassmann numbers
@xmath . In order to obtain a specific amplitude with the @xmath ’s we
need to integrate with a different measure.

  helicity   measure
  ---------- ---------
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath

The measures can be motivated if we remind ourselves of the superfield
@xmath

  -- -------- -- --------
     @xmath      (5.21)
  -- -------- -- --------

Instead of considering a scattering amplitude of certain particles we
will now consider a scattering amplitude of super fields

  -- -------- -- --------
     @xmath      (5.22)
  -- -------- -- --------

If we plug in the expression for the superfields we get a sum over
scattering amplitudes of the different component fields

  -- -------- -- --------
     @xmath      (5.23)
  -- -------- -- --------

One way to extract a certain component field is to integrate over all
Grassmann variables and introduce a measure which is exactly opposite to
the powers of Grassmann variables in the superfield. This exactly
corresponds to the rules we introduced above. To obtain the integration
measure for the @xmath s one has to take the complex conjugate of the
superfield

  -- -------- -- --------
     @xmath      (5.24)
  -- -------- -- --------

Comparing this expression to the one before we see that the measure for
the @xmath s is exactly the opposite of the @xmath s. The only
additional information we put in the generating functions is that we
immediately used that some amplitudes vanish.
If we want to combine these amplitudes through let’s say a BCFW
recursion relation they need to live in the same superspace, which can
be done by Fourier transforming the generating function from the @xmath
superspace to the @xmath superspace or vice versa. Here we decide to
work in the @xmath superspace so we need to transform the MHV generating
function

  -- -------- -- --------
     @xmath      (5.25)
     @xmath      (5.26)
     @xmath      (5.27)
     @xmath      (5.28)
  -- -------- -- --------

At the moment we only talked about three-point generating functions, but
as we have already seen in the paragraph about superfields this concept
can be generalized to higher-point superamplitudes. One way to obtain a
higher point generating function is through a BCFW recursion. In the
next part we will use that to construct the four-point generating
function and then see how this generalizes.

### 5.3 @xmath-Point Generating Function

The first thing we need to discuss before using the BCFW recursion
relations is the merging of the generating functions. To merge two
generating functions we have to set all parameters of a leg equal @xmath
and integrate over the shared Grassmann variable, which takes care of
the internal helicities and particles that can propagate. To see this
mechanism at work lets use the BCFW recursion to obtain a four-point MHV
generating function. In order to obtain an overall MHV generating
function we need to combine a MHV three-point generating function and an
@xmath one, which can be seen by looking at the all gluon part of the
amplitude. There a MHV three-point amplitude has two gluons with
negative helicity and a @xmath amplitude has one gluon with negative
helicity. A propagator connects a gluon with negative helicity with one
of positive helicity. Thus we can write down the following formula for
the overall number of external negative gluons

  -- -------- -- --------
     @xmath      (5.29)
  -- -------- -- --------

where @xmath is the number of MHV amplitudes, @xmath the number of
@xmath amplitudes and @xmath is the number of internal legs. So in our
case we want to have an overall MHV generating function so we have
@xmath =2 and one internal leg @xmath , hence we need @xmath .
In order to use the BCFW recursion formula we will introduce a complex
shift on the external momenta @xmath and @xmath ¹ ¹ 1 When we combine
three-point functions we can always choose the shift to be in the square
brackets of the MHV generating function and in the angle brackets of the
@xmath generating function. But since the MHV generator only depends on
the angle brackets and the @xmath generator on the square brackets the
dependence on the shift of the external particles drops out. The only
remainder is the shift of the internal momenta @xmath .

  -- -------- -- --------
     @xmath      (5.30)
     @xmath      (5.31)
  -- -------- -- --------

This shift gives us the following three-point generating functions

  -- -------- -- --------
     @xmath      (5.32)
                 (5.33)
  -- -------- -- --------

where we used that the shift only effects angle brackets of @xmath and
only square brackets of @xmath . We can now merge these two generating
functions by the BCFW recursion formula and by integrating over the
shared Grassmann variable

  -- -------- -- --------
     @xmath      (5.34)
     @xmath      (5.35)
                 (5.36)
  -- -------- -- --------

The shift in the momenta @xmath will drop out because of the Fierz
identity and if we use momentum conservation in the delta function in
the form of

  -- -------- -- --------
     @xmath      (5.37)
  -- -------- -- --------

for MHV generators and

  -- -------- -- --------
     @xmath      (5.38)
  -- -------- -- --------

for @xmath generators we arrive at

  -- -------- -- --------
     @xmath      (5.39)
  -- -------- -- --------

which is the four-point generating function for an MHV amplitude. We can
now use more BCFW shifts to build up higher generating functions, but I
will just state the general formula which by now should be well
motivated

  -- -------- -- --------
     @xmath      (5.40)
  -- -------- -- --------

where @xmath . We also should note that q is one of the generators of
the @xmath Poincaré supersymmetry algebra. We can check our result by
obtaining the n-point gluon function

  -- -------- -- --------
     @xmath      (5.41)
     @xmath      (5.42)
     @xmath      (5.43)
  -- -------- -- --------

which is indeed the result found by Parke and Taylor [ 105 ] .
In order to also obtain the general @xmath amplitude we can complex
conjugate our result

  -- -------- -- --------
     @xmath      (5.44)
  -- -------- -- --------

But this generating function is now in the superspace generated by
@xmath . Therefore we need to Fourier-transform the result to go back to
the superspace generated by @xmath

  -- -------- -- --------
     @xmath      (5.45)
     @xmath      (5.46)
     @xmath      (5.47)
     @xmath      (5.48)
     @xmath      (5.49)
  -- -------- -- --------

### 5.4 Generating Functions as Input for Unitarity Cuts

The amplitudes we discussed here are sufficient to reconstruct all MHV
and @xmath loop amplitudes up to six-points in @xmath =4 sYM. This is
the case because the numerator in this theory is only linear in the loop
momentum. Thus the numerator can be completely reconstructed from
maximum and near-maximum cuts. The amplitudes in these cuts involve at
most five-particles and are therefore either MHV or @xmath amplitudes.
For the treatment of non-MHV amplitudes I refer to [ 104 ] . The key
fact is that these amplitudes can be written as products of MHV
amplitudes and therefore the here discussed methods can be extended to
the non MHV sector.
The calculation of an unitarity cut is nothing else then the merging of
all appearing tree-level amplitudes. The advantage of using the
Grassmann formulations lies in the fact that we can take care of the
complicated sum over internal particles and helicities by simply
integrating over the internal Grassmann variable. Therefore we are now
ready to discuss two examples for the integrand-reduction through
multivariate polynomial division where we will directly obtain the
residues through unitarity cuts.

## Chapter 6 The One-Loop Five-Point Amplitude in @xmath=4 sYM

The one- and two-loop five-point amplitude in @xmath =4 sYM have been
the subject of previous analyses. The planar part of the two-loop
amplitude was already calculated by Bern, Czakon, Kosower, Roiban and
Smirnov [ 76 ] . Later Carrasco and Johansson [ 75 ] used the
conjectured BCJ equations to obtain the full five-point one- and
two-loop amplitudes. Furthermore Mastrolia, Mirabella, Ossola and Peraro
[ 106 ] used the known integrands by Carrasco and Johansson of the
two-loop amplitudes to perform an integrand-reduction through
multivariate polynomial division.
The calculation of the one- and two-loop amplitude in [ 75 ] is done in
four steps. First they use the BCJ equations between different graphs to
reduce the number of graphs down to a set of master graphs. Secondly
they write down an ansatz for each master graph in terms of all possible
scalar products. In the third step this ansatz is reduced through
symmetries of graphs and BCJ equations which connect only master graphs.
In the last step they fix the remaining parameters with unitarity cuts.
In this thesis we will follow a slightly different approach. We will
also use the fact that the BCJ reduces the number of graphs down to a
set of master graphs, but then use the integrand-reduction to determine
the graph as far as possible through its unitarity cuts. In the last we
will fix the remaining freedom through BCJ equations which only involve
the master graph. Furthermore we will also present a way of obtaining
these amplitudes which does not rely on the BCJ equations.

Our goal is to reconstruct the one-loop MHV five-point amplitude with
the integrand-reduction method. Instead of sampling a known numerator on
the residues we will use the fact that the integrand factorizes into a
product of tree amplitudes in the corresponding channel.
If we absorb the four-point interactions into the three-point ones by
multiplying and dividing with the corresponding propagator and if we do
not consider any graphs with triangle subgraphs since they will sum up
to zero for @xmath =4 sYM [ 107 , 108 ] we arrive at two graphs for the
one-loop amplitude: a box and a pentagon. Both of these graphs can be
seen in figure 6.1 .

In @xmath =4 the numerator of an integrand can be at most linear in the
loop momentum. This means that our integrand-reduction will naturally
stop after the first step. Therefore the pentagon integrand has the
following expansion in its residues

  -- -------- -- -------
     @xmath      (6.1)
  -- -------- -- -------

with the following list of propagators

  -- -------- -- -------
     @xmath      (6.2)
     @xmath      (6.3)
     @xmath      (6.4)
     @xmath      (6.5)
     @xmath      (6.6)
  -- -------- -- -------

Before we proceed with the integrand-reduction we should notice a
contradiction. The integrand-reduction had a reducibility criterion
which told us that an one-loop integrand with five propagators should be
rewritable as a sum of integrands with four propagators. Therefore the
introduction of the pentagon topology is somewhat artificial. This will
obscure some features of integrand-reduction but we will try to follow
the strategy we discussed earlier as close as possible.
The box integrand in @xmath =4 sYM has the following expansion in its
propagator multipoles

  -- -------- -- -------
     @xmath      (6.7)
  -- -------- -- -------

We will now use maximum cuts of the one-loop amplitude to fit the
coefficients in the residues of the pentagon and the box numerator.

### 6.1 Residues from Unitarity Cuts

In four dimensions the maximum number of propagators we can set on-shell
is four. As we can see from the expressions for the box ( 6.7 ) and
pentagon ( 6.1 ) integrand we will have contributions from both graphs
in this case. Therefore we are only able to sample the mixed residues of
the pentagon and the box numerator. Generally the quadruple-cut has two
solutions, @xmath and @xmath so we will solve the following two by two
system

  -- -------- -- -------
     @xmath      (6.8)
     @xmath      (6.9)
  -- -------- -- -------

As stated above the @xmath has contributions from the pentagon and the
box numerator

  -- -------- -- --------
     @xmath      (6.10)
     @xmath      (6.11)
     @xmath      (6.12)
  -- -------- -- --------

As we have mentioned earlier the introduction of the pentagon obscures
some features of the integrand-reduction. This fact becomes visible
here. Normally we would use the quadruple-cut to fit the constant and
the linear term of quadruple-cut residue. But here the pentagon
numerator replaces the linear term and a mix of the pentagon and the box
will build up the constant.
Since we do not expect that the maximum cut theorem is violated the
residue of the pentagon @xmath and the mixed residue of the pentagon and
the box @xmath are both constants

  -- -------- -- --------
     @xmath      (6.13)
     @xmath      (6.14)
     @xmath      (6.15)
     @xmath      (6.16)
     @xmath      (6.17)
     @xmath      (6.18)
     @xmath      (6.19)
  -- -------- -- --------

We will verify this assumption on the corresponding unitarity cuts.

#### 6.1.1 Quadruple-Cut of @xmath and @xmath

First we will consider a quadruple-cut where we have a four-point
amplitude involving the external legs one and two as displayed in figure
6.2 .

This means our product of generating functions involves one four-point
generator and three three-point ones. As we discussed while merging
generating functions we can use the following formula to determine how
many MHV and @xmath vertices we need

  -- -------- -- --------
     @xmath      (6.20)
  -- -------- -- --------

where the four-point generating function has also two negative gluons so
it can be counted as a three-point MHV generating function. Applying
this formula for a MHV amplitude with @xmath and with four internal legs
@xmath we find that we have two MHV and two @xmath amplitudes to
distribute. To find all ways to distribute the three-point generating
functions we should also note that we cannot connect two external legs
with two generating functions of the same type. This follows from the
fact that the @xmath s or the @xmath s of the two neighboring vertices
would be proportional to each other which means that the two external
momenta would not be independent of each other.
With this restriction and the fact that the four-point amplitude is
already fixed we only have one way of distributing the generating
functions

  -- -------- -- --------
     @xmath      (6.21)
  -- -------- -- --------

Plugging in our generating functions ( 5.39 , 5.28 , 5.20 ) and
integrating over the shared Grassmann variables we find ¹ ¹ 1 The
complete calculation can be found in the appendix 11.1 .

  -- -------- -- --------
     @xmath      (6.22)
  -- -------- -- --------

The @xmath corresponds to the cut propagator @xmath . The next step is
to find the solutions of the cut equations on which we will evaluate
this integrand. This can be done with the following decomposition for
the loop momentum

  -- -- -- --------
           (6.23)
  -- -- -- --------

Solving the first three equations we find that

  -- -------- -- --------
     @xmath      (6.24)
     @xmath      (6.25)
     @xmath      (6.26)
  -- -------- -- --------

This leads us to the two possible solutions that either @xmath or @xmath
has to be zero. With the help of the last cut equation we can then
determine @xmath or @xmath respectively. Doing this we arrive at the two
solutions of the quadruple-cut

  -- -------- -- --------
     @xmath      (6.27)
     @xmath      (6.28)
  -- -------- -- --------

Evaluating the product of tree amplitudes ( 6.22 ) on the two cut
solutions we find the following two expressions

  -- -------- -- --------
     @xmath      (6.29)
     @xmath      (6.30)
  -- -------- -- --------

These two expressions span a system of equations with which we can
obtain the two coefficients of the maximum cut as we mentioned in ( 6.9
)

  -- -------- -- --------
     @xmath      (6.31)
     @xmath      (6.32)
  -- -------- -- --------

Solving this system we find the two constants @xmath and @xmath

  -- -------- -- --------
     @xmath      (6.33)
     @xmath      (6.34)
  -- -------- -- --------

We should note that the denominator of beta and gamma can be written as

  -- -------- -- --------
     @xmath      (6.35)
  -- -------- -- --------

where epsilon is defined through the equation

  -- -------- -- --------
     @xmath      (6.36)
     @xmath      (6.37)
  -- -------- -- --------

In the special case of a five-point kinematic we find that @xmath .
The other unitarity cuts can be obtained by relabeling the results
@xmath and @xmath according to the labels in the parenthesis. The
pentagon coefficient @xmath is invariant under these relabellings.
Therefore we can conclude that the maximum cut theorem really holds even
for this obscured case. The introduction of the pentagon can be
understood as an absorption of the linear term of the box into the
introduced pentagon.

### 6.2 The Duality Equations

We obtained a mix of the pentagon numerator and the box numerator. This
means we have some freedom where we can move terms between these two
graphs as long as the unitarity cuts are satisfied. In order to
disentangle the two graphs in a BCJ conform manner we will use the
following BCJ equations

  -- -------- -- --------
     @xmath      (6.38)
     @xmath      (6.39)
     @xmath      (6.40)
  -- -------- -- --------

The easiest way to understand these equations is to remind ourselves of
the Jacobi Identity displayed in figure 6.3

and then consider the corresponding graphs of the equations displayed in
6.4

#### 6.2.1 Residues and BCJ equations

By plugging in the expansion of the numerators into the BCJ equations we
can translate these equations into constraints on our residues. While
the equations on the boxes do this in a straightforward manner the first
equation needs a more careful analysis. We should start by noting that

  -- -------- -- --------
     @xmath      (6.41)
     @xmath      (6.42)
  -- -------- -- --------

With that we can go into the first equation to see that

  -- -------- -- --------
     @xmath      (6.43)
     @xmath      (6.44)
  -- -------- -- --------

where we already collected all the terms belonging to the propagators
with the equation @xmath . As we have stated earlier in the discussion
of the one-loop amplitude we expect the box to be a constant. Therefore
all the prefactors of the denominators must vanish giving us the
following five equations

  -- -------- -- --------
     @xmath      (6.45)
  -- -------- -- --------

Together with the two constraints from the BCJ equations on the box
numerators and the conditions that the unitarity cut has to be satisfied
we arrive at a set of 13 constraints on the residues

  -- -------- -- --------
     @xmath      (6.46)
  -- -------- -- --------

#### 6.2.2 @xmath-Decomposition

In order to solve these functional equations we should formulate an
ansatz for the appearing functions. This can be done by realizing that
all the dependence on the external momenta can be captured by the gammas

  -- -------- -- --------
     @xmath      (6.47)
  -- -------- -- --------

The gammas have two properties which can be easily proven. First they
are completely symmetric in the last three indices. Secondly they are
antisymmetric in the first two indices. This makes it sufficient to
label the gammas by the first two indices. Therefore there are only
@xmath independent gammas, but there are five more identities of the
form

  -- -------- -- --------
     @xmath      (6.48)
  -- -------- -- --------

which reduce the number of independent gammas down to six, since one of
the identities is not independent.
Choosing six gammas we can formulate ansätze for @xmath and @xmath

  -- -------- -- --------
     @xmath      (6.49)
     @xmath      (6.50)
  -- -------- -- --------

with 12 rational coefficients @xmath and @xmath . Expanding the six
equations ( 6.46 ) in terms of the six gammas and comparing the
coefficients of the gammas we find @xmath equations. But 24 of the 36
equations are not linearly independent. Therefore we can still find a
solution which can be verified with any algebraic program.

#### 6.2.3 Solution

Imposing the last two duality equations on the boxes

  -- -------- -- --------
     @xmath      (6.51)
     @xmath      (6.52)
  -- -------- -- --------

tells us that the box constant @xmath has to be completely symmetric in
the last three arguments @xmath and @xmath .

  -- -------- -- --------
     @xmath      (6.53)
  -- -------- -- --------

Therefore the unitarity cut equation

  -- -------- -- --------
     @xmath      (6.54)
  -- -------- -- --------

directly implies that

  -- -------- -- --------
     @xmath      (6.55)
  -- -------- -- --------

Now looking at the five constraints from the first BCJ equation ( 6.45 )

  -- -------- -- --------
     @xmath      (6.56)
     @xmath      (6.57)
     @xmath      (6.58)
     @xmath      (6.59)
     @xmath      (6.60)
  -- -------- -- --------

we find that the only solutions is

  -- -------- -- --------
     @xmath      (6.61)
  -- -------- -- --------

which immediately gives us

  -- -------- -- --------
     @xmath      (6.62)
  -- -------- -- --------

Plugging these solutions into the numerator expansions of the pentagon
and the box we arrive at the following result

  -- -------- -- --------
     @xmath      (6.63)
     @xmath      (6.64)
  -- -------- -- --------

which is in agreement with the results from [ 75 ] .

### 6.3 The Full One-Loop Amplitude

We can obtain the full color dressed amplitude if we sum over all
permutations of legs, dress up each graph with the corresponding product
of structure constants and include a factor for each graph to compensate
for over counting

  -- -------- -- --------
     @xmath      (6.65)
  -- -------- -- --------

where the color factors are given by

  -- -------- -- --------
     @xmath      (6.66)
     @xmath      (6.67)
  -- -------- -- --------

and the corresponding integrals are

  -- -------- -- --------
     @xmath      (6.68)
     @xmath      (6.69)
  -- -------- -- --------

In the next section we are going to discuss the two-loop five-point
amplitude. At two-loops we will not have to introduce a reducible graph
to apply the BCJ equations as we have done here. This has the advantage
that the integrand-reduction can be used in a more normal fashion.

## Chapter 7 The Two-Loop Five-Point Amplitude in @xmath=4 sYM

In order to obtain all graphs for the two-loop five-point amplitude we
are going to follow the same strategy as in the one-loop case. This
means drawing all possible two-loop graphs with only three-point
vertices and no loops with less then four legs attached. Doing so we can
find the six graphs displayed in figure 7.1 .

The remarkable thing is that all these graphs can be connected by BCJ
equations

  -- -------- -- -------
     @xmath      (7.1)
     @xmath      (7.2)
     @xmath      (7.3)
     @xmath      (7.4)
     @xmath      (7.5)
  -- -------- -- -------

This drasticly reduces the work that has to be done in order to
determine this amplitude. Here we will choose to promote the pentabox to
the master graph and then obtain the rest through the BCJ equations.

### 7.1 Two-Loop Pentabox Diagram

As in the one-loop case we are going to use the integrand reduction
technique and the unitarity method to constraint the pentabox diagram as
much as possible. After that we will end up with some leftover freedom
how to disentangle the seven-pole cuts which can be used to apply BCJ
equations.
The integrand of the pentabox has the following expansion in its
residues

  -- -------- -- -------
     @xmath      (7.6)
  -- -------- -- -------

with the following list of propagators

  -- -------- -- --------
     @xmath      (7.7)
     @xmath      (7.8)
     @xmath      (7.9)
     @xmath      (7.10)
     @xmath      (7.11)
     @xmath      (7.12)
     @xmath      (7.13)
     @xmath      (7.14)
  -- -------- -- --------

In order to determine the residues we will first evaluate the integrand
at the solutions of the eightfold-cut to isolate the eightfold-cut
residue @xmath and to fit all the coefficients in the eightfold-cut
residue. In the next step we will proceed to the sevenfold-cuts to
determine the rest of the residues.

#### 7.1.1 The Eightfold-Cut

The eightfold-cut is displayed in figure 7.2

The maximum cut theorem [ 1 ] tells us that the number of cut solutions
is equal to the number of free parameters in the residue. Indeed in [
106 ] we can find that the polynomial of the eightfold-cut residue of
the pentabox has four coefficients

  -- -------- -- --------
     @xmath      (7.15)
  -- -------- -- --------

and by solving the cut equations we find four solutions. So in total we
will solve the following system

  -- -------- -- --------
     @xmath      (7.16)
  -- -------- -- --------

where @xmath and @xmath denote the @xmath th solution of the cut
equations. In order to solve this system of equations we will use
factorization of the integrand through unitarity. This means that
instead of sampling the cut solutions on the integrand we will sample
them on the product of tree generating functions and sum over all
choices of internal helicities. In our example we can find four ways of
distributing the generating functions

  -- -------- -- --------
     @xmath      (7.17)
     @xmath      (7.18)
     @xmath      (7.19)
     @xmath      (7.20)
  -- -------- -- --------

The next step is to solve the cut equations so we can later plug their
solutions into the product of trees. Using the same decomposition for
the loop momentum as in the one-loop case

  -- -- -- --------
           (7.21)
           (7.22)
  -- -- -- --------

we find the following four solutions of the cut equations.

  solution   @xmath   @xmath
  ---------- -------- --------
  1st        @xmath   @xmath
  2nd        @xmath   @xmath
  3rd        @xmath   @xmath
  4th        @xmath   @xmath

These solutions can now be plugged into the product of tree amplitudes

  solution   Integrand
  ---------- -----------
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath
  @xmath     @xmath

to span the left-hand side of the system of equations in ( 7.16 )

  -- -------- -- -- --------
     @xmath         (7.23)
  -- -------- -- -- --------

Solving this system we find the coefficients of the maximum-cut residue

  -- -------- -- --------
                 (7.24)
     @xmath      (7.25)
     @xmath      (7.26)
     @xmath      (7.27)
  -- -------- -- --------

This means the residue of the eightfold-cut is completely determined by
the maximum cut and has the following form

  -- -------- -- --------
     @xmath      (7.28)
  -- -------- -- --------

In the next step we will calculate all sevenfold-cuts of the pentabox in
order to determine the corresponding residues.

#### 7.1.2 The Sevenfold-Cut without @xmath

The considered sevenfold-cut is displayed in figure 7.3 where we simply
expanded the four-point amplitude in its channels.

From the three different graphs in the figure we can see the different
residues which will contribute to our cut. The integrand-reduction
algorithm tells us that we need to subtract all higherfold-cut residues
from the integrand. Since the doublebox has only seven propagators we
only have one eightfold-cut residue to subtract we find

  -- -------- -- --------
     @xmath      (7.29)
     @xmath      (7.30)
  -- -------- -- --------

In general the sevenfold-cut residue @xmath would be a polynomial of the
loop momentum with 32 coefficients ¹ ¹ 1 The polynomial is given in the
appendix in table 11.1 [ 106 ] . But in @xmath =4 we only have
numerators which are linear in the loop momentum therefore the
sevenfold-cut residues are only constants. We will prove this by fitting
the constant from several solutions of the sevenfold cuts.
On the solution of the sevenfold-cut equations the integrand factorizes
into product tree amplitudes. In order to take all helicity choices into
account we have to sum over the three ways of distributing the MHV and
@xmath generating functions

  -- -------- -- --------
     @xmath      (7.31)
     @xmath      (7.32)
     @xmath      (7.33)
  -- -------- -- --------

Now we can solve the cut equations numericly and evaluating these
products of generating functions at the solutions and obtaining the
mentioned constant we find

  -- -------- -- --------
     @xmath      (7.34)
  -- -------- -- --------

#### 7.1.3 The Sevenfold-Cut without @xmath

As we can see from figure 7.4 , which is very similar to the one before.

This time we want to solve the following equation

  -- -------- -- --------
     @xmath      (7.35)
     @xmath      (7.36)
  -- -------- -- --------

Since there is no second eightfold-cut residue to subtract we can
immediately focus on the integrand. There are three possibilities to
distribute the MHV and @xmath generating functions

  -- -------- -- --------
     @xmath      (7.37)
     @xmath      (7.38)
     @xmath      (7.39)
  -- -------- -- --------

Using the super amplitudes techniques as before and then evaluating the
product of generating functions at the cuts we find the following result

  -- -------- -- --------
     @xmath      (7.40)
  -- -------- -- --------

#### 7.1.4 The Sevenfold-Cut without @xmath

The corresponding unitarity cut is displayed in figure 7.5 .

In this example we have two graphs with eightfold-cuts contributing.
Thus we have to subtract a second maximum cut coming from the pentabox
with a different ordering of external legs

  -- -------- -- --------
     @xmath      (7.41)
     @xmath      (7.42)
  -- -------- -- --------

Here we used that the two pentaboxes share all propagators except @xmath
.
The second eightfold-cut residue appearing in ( 7.41 ) is just a
relabeling of the one we obtained earlier

  -- -------- -- --------
     @xmath      (7.43)
  -- -------- -- --------

With these informations we can now focus on the integrand. As before we
will use the product of tree generating functions to sample the
constant. In this cut there are three ways of distributing them

  -- -------- -- --------
     @xmath      (7.44)
     @xmath      (7.45)
     @xmath      (7.46)
  -- -------- -- --------

Solving the cut equations and plug the solutions into product of
generating functions to obtain the constant

  -- -------- -- --------
     @xmath      (7.47)
  -- -------- -- --------

#### 7.1.5 The Sevenfold-Cut without @xmath

Leaving propagator @xmath uncut leaves us with a very similar situation
to the sevenfold-cut we solved earlier.

Again we have two graphs with eightfold-cut residues contributing which
gives the following equation

  -- -------- -- --------
     @xmath      (7.48)
     @xmath      (7.49)
  -- -------- -- --------

with the propagator @xmath and the second eightfold-cut residue

  -- -------- -- --------
     @xmath      (7.50)
  -- -------- -- --------

As an input for the integrand we will use the product of generating
functions, which has three ways of distributing the different
three-point generators

  -- -------- -- --------
     @xmath      (7.51)
     @xmath      (7.52)
     @xmath      (7.53)
  -- -------- -- --------

Now we can use the techniques from the super amplitudes to merge the
generating functions, plug in the solutions of the cut equations and
obtain the constant mentioned in the beginning of the section. Doing so
we find the following expression

  -- -------- -- --------
     @xmath      (7.54)
  -- -------- -- --------

#### 7.1.6 The Duality Equations

As in the one-loop case we arrived at a point where we have freedom to
distribute the seven-pole cuts into different graphs. Once more we are
able to use this freedom to apply the BCJ equations.
Even though we have mentioned the doublebox numerator we haven’t looked
at its expansion in residues yet, which is only a constant

  -- -------- -- --------
     @xmath      (7.55)
  -- -------- -- --------

With the help of the following duality equations we can disentangle the
seven-pole cuts

  -- -------- -- --------
     @xmath      (7.56)
     @xmath      (7.57)
     @xmath      (7.58)
  -- -------- -- --------

These equations are also displayed in figure 7.7

Plugging in the expansion in residues and demanding that the doubleboxes
are a constants we arrive at the following 12 equations

  -- -------- -- --------
     @xmath      (7.59)
  -- -------- -- --------

Now we can form ansätze for the all the sevenfold-cuts in terms of the
six independent gammas

  -- -------- -- --------
     @xmath      (7.60)
     @xmath      (7.61)
     @xmath      (7.62)
     @xmath      (7.63)
  -- -------- -- --------

Plugging the ansätze into our @xmath constraints ( 7.59 ) and comparing
the coefficients we arrive at @xmath equations. But since 48 equations
are not linearly independent we can find one solution to the system of
constraints

  -- -------- -- --------
     @xmath      (7.64)
     @xmath      (7.65)
     @xmath      (7.66)
     @xmath      (7.67)
  -- -------- -- --------

### 7.2 The Full Two-Loop Amplitude

Putting all our pentabox results together we find the following
numerator

  -- -------- -- --------
     @xmath      (7.68)
     @xmath      (7.69)
  -- -------- -- --------

and in order to fit the unitarity cuts we need the following expression
for the doublebox

  -- -------- -- --------
     @xmath      (7.70)
  -- -------- -- --------

With the complete result of the pentabox we can now obtain all other
numerators through the BCJ equations

  -- -------- -- --------
     @xmath      (7.71)
     @xmath      (7.72)
     @xmath      (7.73)
     @xmath      (7.74)
  -- -------- -- --------

The only non trivial equation is the second one where we obtain the
numerator of the double penta @xmath . Plugging in the expressions for
the numerators and then reconstructing the propagators of the double
penta out of the scalar products we can find the following numerator

  -- -- -- --------
           (7.75)
  -- -- -- --------

Since we obtained all expressions for the numerators, there are only two
steps left: dressing up each diagram with the corresponding color
factor, and then summing over all permutations of external legs. The
full two-loop amplitude reads

  -- -------- -- --------
     @xmath      (7.76)
  -- -------- -- --------

where the sum runs over all permutation of external legs, the factors in
front of the integrals account for over counting in the sum and the
integrals are given by

  -- -------- -- --------
     @xmath      (7.77)
     @xmath      (7.78)
     @xmath      (7.79)
     @xmath      (7.80)
     @xmath      (7.81)
     @xmath      (7.82)
  -- -------- -- --------

The propagators appearing in the integrals can be read off the graphs in
figure 7.1 and the color factors in the full two-loop amplitude are
given by

  -- -------- -- --------
     @xmath      (7.83)
     @xmath      (7.84)
     @xmath      (7.85)
     @xmath      (7.86)
     @xmath      (7.87)
     @xmath      (7.88)
  -- -------- -- --------

In the next section we will present a way of obtaining the one- and
two-loop numerators without the use of the BCJ equations.

## Chapter 8 Alternative Approach to Color-Kinematic conform Graphs

In this section we will analyze which assumptions in the derivation of
the BCJ conform numerators lead to which consequences for the graphs. In
order to do this we will start from the unitarity cuts of the amplitude
with a minimal set of graphs. From there we will start imposing the
assumptions one by one.

### 8.1 The One-Loop Five-Point Amplitude

To arrive at the BCJ pentagon and box numerator for the one-loop
amplitude we assumed that we have a linear dependence in the loop
momentum, that no triangles appear in the graphs and we only used graphs
with cubic vertices.
Our starting point is the pentagon numerator and all its unitarity cuts.
As a remainder we have the following numerator decomposition for the
pentagon

  -- -------- -- -------
     @xmath      (8.1)
  -- -------- -- -------

and the five quadruple-cuts which correspond fix the quadruple-cut
residues in the integrand-decomposition

  -- -------- -- -------
     @xmath      (8.2)
     @xmath      (8.3)
     @xmath      (8.4)
     @xmath      (8.5)
     @xmath      (8.6)
     @xmath      (8.7)
  -- -------- -- -------

where all the factors just been obtained by the unitarity cuts and we
have no leftover freedom. Now we will start to impose the assumptions
from the derivation of the BCJ conform answer and look at their
consequences.

#### 8.1.1 Linear Dependence on the Loop-Momenta

The first assumption is that the pentagon numerator is linear in the
loop momentum, which comes from the fact that we are working in @xmath
=4 sYM. The pentagon has five vertices which can give us at most five
powers of loop-momentum. But now we expect the four-fold supersymmetry
to translate four of these powers into the over all supermomentum delta
function @xmath .
The integrand-decomposition of the pentagon

  -- -------- -- -------
     @xmath      (8.8)
  -- -------- -- -------

has in general a quadratic term. This can be seen if we expand all
denominators in their scalar products. The coefficient of this quadratic
term is then

  -- -------- -- -------
     @xmath      (8.9)
  -- -------- -- -------

since it has contributions from all quadruple-cut residues. To get rid
of the quadratic dependence we need to demand that its coefficient
vanishes

  -- -------- -- --------
     @xmath      (8.10)
  -- -------- -- --------

which is not satisfied by the expression ( 8.1 ). In order to get a
linear numerator we need to introduce a set of new graphs namely the box
numerators with a massive leg. Since the quadruple-cuts are a
combination of the introduced box and the pentagon we are able to absorb
the unitarity cuts into the boxes and guarantee a linear numerator. This
introduces the following integrand-decomposition for the box numerators

  -- -------- -- --------
     @xmath      (8.11)
  -- -------- -- --------

where we used another assumption namely that we do not expect to have
triangles present in @xmath =4 sYM and indeed a triangle cut leads to a
vanishing unitarity cut.
Together with the pentagon the choice of the box numerator gives us the
right unitarity cuts

  -- -------- -- --------
     @xmath      (8.12)
  -- -------- -- --------

Now we have some leftover freedom in the form of the @xmath s. Since
they are constants we can parametrize them in terms of the six
independent gammas

  -- -------- -- --------
     @xmath      (8.13)
  -- -------- -- --------

At this point we went through all assumptions of the BCJ equations. We
arrived at an ansatz with some leftover freedom which we could
parameterize in terms of the gammas. This freedom can now be used to
apply the BCJ equations. Instead of doing that we will go a different
way and use graph automorphism to fix this freedom.

#### 8.1.2 Graph Automorphism

A graph automorphism is a symmetry of an graph where we relabel the
external particles in a way that all internal propagators stay the same.
Secondly, the color factors of the two graphs must also be the same up
to a minus sign, which provides us with an equation between two
different relabellings of the same graph.
For the box numerator we find such an automorphism if we exchange the
two external particles on the massive leg

  -- -------- -- --------
     @xmath      (8.14)
  -- -------- -- --------

Plugging in the integrand-decomposition this translates into the
following constraints on our residues

  -- -------- -- --------
     @xmath      (8.15)
  -- -------- -- --------

Solving this equation and the linearity condition ( 8.10 ) with our
ansatz we find that the only solution is

  -- -------- -- --------
     @xmath      (8.16)
  -- -------- -- --------

and therefore we arrived at the same result as the BCJ equations gave
us. Looking back at our list of assumptions we saw that introducing no
graphs with a four-point vertices was not a strong restriction. This can
be understood in the way that every four-point vertex has a part with a
color structure of an s-,t- and u-channel and by simply multiplying and
dividing the corresponding kinematical part by the propagator of the
channel we can absorb these contribution to corresponding three-point
ones.
The assumption that we don’t have triangles appearing in our theory and
that we have a linear numerator are connected to each other, which comes
from the fact that the unitarity cuts of triangles vanish if we subtract
the contributions from the box and the pentagon. Therefore the only non
trivial way of introducing graphs with triangles is to allow higher
order terms in the integrand-reduction. But having higher order terms in
the numerators conflicts with our expectation that four powers of
loop-momentum are converted by the supersymmetry into the overall delta
function @xmath . On the other hand introducing triangles would
correspond to even more freedom in our numerators. But as we have seen
in this section introducing the box numerator already provided enough
freedom to apply the BCJ equations. Even more demanding a linear
integrand-reduction of the pentagon and using graph automorphisms was
enough to arrive at the BCJ numerators and therefore to fulfill all the
BCJ equations.

### 8.2 The Two-Loop Five-Point Amplitude

In the two-loop case we will follow the same strategy as in the one-loop
case. We will start by the minimal set of graphs which are the pentabox,
the crossed pentabox and the double penta displayed in fig 8.1 and then
step by step impose the assumptions.

In the section about the BCJ equations at two-loops it was sufficient to
discuss only the integrand-decomposition of the pentabox and then obtain
the rest of the graphs with the help of the BCJ equations. But here we
also need the unitarity cuts of the other diagrams.

#### 8.2.1 The Pentabox

As a short reminder we will first list the sevenfold-cuts of the
pentabox

  -- -------- -- --------
     @xmath      (8.18)
     @xmath      (8.19)
     @xmath      (8.20)
     @xmath      (8.21)
     @xmath      (8.22)
     @xmath      (8.23)
     @xmath      (8.24)
     @xmath      (8.25)
  -- -------- -- --------

#### 8.2.2 The Crossed Pentabox

The crossed pentabox can be obtained in the same way as the pentabox in
the two-loop section. Starting from the integrand-decomposition we will
apply a maximum cut to determine the eightfold-cut delta and then move
on to the sevenfold-cut ones.
For the crossed pentabox we find the following expansion in its residues

  -- -------- -- --------
     @xmath      (8.26)
  -- -------- -- --------

with the denominators

  -- -------- -- --------
     @xmath      (8.27)
     @xmath      (8.28)
     @xmath      (8.29)
     @xmath      (8.30)
     @xmath      (8.31)
     @xmath      (8.32)
     @xmath      (8.33)
     @xmath      (8.34)
  -- -------- -- --------

Solving the cut equations and plugging them into the products of tree
generating functions we can find the following solution for the
eightfold-cut delta

  -- -------- -- --------
     @xmath      (8.35)
  -- -------- -- --------

which is the same as the eight-point delta of the pentabox. Now we can
move on to the sevenfold-cut which again can have contributions from two
graphs

  -- -------- -- --------
     @xmath      (8.36)
     @xmath      (8.37)
     @xmath      (8.38)
     @xmath      (8.39)
     @xmath      (8.40)
     @xmath      (8.41)
     @xmath      (8.42)
  -- -------- -- --------

One should note again that all unitarity cuts are the same as in the
pentabox case. The only point where the two diagrams are differing are
the contributing diagrams in the sevenfold-cuts. Nevertheless it becomes
feasible that the two graphs could be equal as demanded by the BCJ
equations.

#### 8.2.3 The Double Penta

The numerator of the double penta has the following expansion in its
residues

  -- -------- -- --------
     @xmath      (8.43)
  -- -------- -- --------

with these propagators

  -- -------- -- --------
     @xmath      (8.44)
     @xmath      (8.45)
     @xmath      (8.46)
     @xmath      (8.47)
     @xmath      (8.48)
     @xmath      (8.49)
     @xmath      (8.50)
     @xmath      (8.51)
  -- -------- -- --------

From solving the system of equations of the maximum cut we find the
following eightfold-cut residue

  -- -------- -- --------
     @xmath      (8.52)
     @xmath      (8.53)
     @xmath      (8.54)
     @xmath      (8.55)
     @xmath      (8.56)
  -- -------- -- --------

Proceeding to the sevenfold-cuts we find the following two graphs
contributing to the following unitarity cuts

  -- -------- -- --------
     @xmath      (8.57)
     @xmath      (8.58)
     @xmath      (8.59)
     @xmath      (8.60)
     @xmath      (8.61)
     @xmath      (8.62)
     @xmath      (8.63)
     @xmath      (8.64)
     @xmath      (8.65)
     @xmath      (8.66)
     @xmath      (8.67)
     @xmath      (8.68)
     @xmath      (8.69)
     @xmath      (8.70)
     @xmath      (8.71)
     @xmath      (8.72)
  -- -------- -- --------

We are now in a similar position as in the one-loop case. From these
unitarity cuts our amplitude is well defined. One only has to be careful
when summing over all diagrams with different ordering to not over count
certain terms. First we will try to separate these graphs from each
other and see that there is leftover freedom. After demanding that the
numerators of these graphs are linear in the loop momentum we will
increase this freedom even further. But after imposing some graph
automorphism this freedom will be completely fixed.

#### 8.2.4 @xmath-Decomposition

As we have seen above several unitarity cuts have two different graphs
which contribute. In order to solve these functional equations we need
to write down ansätze for all deltas in terms of our six gammas

  -- -------- -- --------
     @xmath      (8.73)
     @xmath      (8.74)
     @xmath      (8.75)
     @xmath      (8.76)
     @xmath      (8.77)
     @xmath      (8.78)
     @xmath      (8.79)
     @xmath      (8.80)
     @xmath      (8.81)
     @xmath      (8.82)
  -- -------- -- --------

This means we introduced @xmath free parameters. The first obvious
constraint is to reproduce the unitarity cuts

  -- -------- -- --------
     @xmath      (8.83)
     @xmath      (8.84)
     @xmath      (8.85)
     @xmath      (8.86)
     @xmath      (8.87)
     @xmath      (8.88)
     @xmath      (8.89)
     @xmath      (8.90)
     @xmath      (8.91)
     @xmath      (8.92)
  -- -------- -- --------

By plugging in the expansion in gammas and comparing their coefficients
we obtain @xmath equations from the unitarity constraints reducing our
60 parameters down to 11, since not all of the equations are linear
independent. To restrict these parameters even further we will demand
that the numerators of the graphs are linear in the loop momenta.

#### 8.2.5 Linear Dependence on the Loop-Momenta

As in the one-loop case we can obtain a linear integrand-decomposition
by imposing that the coefficient of the quadratic term vanishes in the
integrand-reduction. This gives five more equations on the sevenfold-cut
residues

  -- -------- -- --------
     @xmath      (8.93)
     @xmath      (8.94)
     @xmath      (8.95)
     @xmath      (8.96)
     @xmath      (8.97)
  -- -------- -- --------

It turns out that with our current ansatz these equations do not have a
solution, so we need to introduce new graphs which absorb the @xmath
terms. These graphs are analog to the one-loop case the doubleboxes with
the following expansion in their residues

  -- -------- -- ---------
     @xmath      (8.98)
     @xmath      (8.99)
     @xmath      (8.100)
     @xmath      (8.101)
     @xmath      (8.102)
     @xmath      (8.103)
  -- -------- -- ---------

where we took into account the cancellation that can occur between this
numerator and the sevenfold-cut residues at the unitarity cuts. But this
means we have to introduce @xmath new parameters for the six new deltas

  -- -------- -- ---------
     @xmath      (8.104)
     @xmath      (8.105)
     @xmath      (8.106)
     @xmath      (8.107)
     @xmath      (8.108)
     @xmath      (8.109)
  -- -------- -- ---------

Even though the linearity condition gives us @xmath new equations the
number of free parameters goes up from 11 to 19.

#### 8.2.6 Graph Automorphism

Completely analog to the one-loop case we will use graph automorphism to
fix the rest of our free parameters. First the doubleboxes must be
antisymmetric under the exchange of the particles in the massive leg

  -- -------- -- ---------
     @xmath      (8.110)
     @xmath      (8.111)
     @xmath      (8.112)
     @xmath      (8.113)
     @xmath      (8.114)
     @xmath      (8.115)
  -- -------- -- ---------

and three other automorphisms for the doubleboxes and the crossed
pentabox

  -- -------- -- ---------
     @xmath      (8.116)
     @xmath      (8.117)
     @xmath      (8.118)
  -- -------- -- ---------

Plugging in the integrand-decompositions and the ansätze we find @xmath
new equations which fix all parameters

  -- -------- -- ---------
     @xmath      (8.119)
     @xmath      (8.120)
     @xmath      (8.121)
     @xmath      (8.122)
     @xmath      (8.123)
     @xmath      (8.124)
     @xmath      (8.125)
     @xmath      (8.126)
     @xmath      (8.127)
     @xmath      (8.128)
     @xmath      (8.129)
     @xmath      (8.130)
     @xmath      (8.131)
     @xmath      (8.132)
     @xmath      (8.133)
     @xmath      (8.134)
  -- -------- -- ---------

The solutions are exactly the solutions of the BCJ conform numerators we
found earlier. This means that in the one-loop and the two-loop case
demanding a linear ansatz was the key step. It increased our minimal set
of graphs to the one used by the BCJ conform presentation and
distributed the terms from the unitarity cuts in a way that they could
be disentangled by graph automorphisms. This was somehow enough to
reorder to Feynman diagrams in a way that their corresponding graphs
satisfy the BCJ equations.
But as we discussed already for the one-loop case this can not be the
key ingredient for the BCJ equations, since we know that there also BCJ
representation of amplitudes in theories with non-linear numerators e.g.
[ 109 ] . Linearity merely simplifies the BCJ equations to make the
identification of the corresponding amplitudes easier.

## Chapter 9 Ultra-Violet Behavior

As known since the 1980s @xmath =4 sYM is UV finite [ 110 ] , however
this is only true for four dimensions. Explicit calculations in higher
dimensions [ 111 , 112 ] established a finiteness bound in @xmath
dimensions at @xmath loops as

  -- -------- -- -------
     @xmath      (9.1)
  -- -------- -- -------

which conforms to the finiteness in four dimensions. One of the
remaining questions is if this bound is saturated or not. The question
is tightly bound to the issue if there are any hidden symmetries in
@xmath =4 sYM which could further alter the finiteness bound.
Furthermore all amplitudes in @xmath =4 sYM are connected through the
double copy procedure to amplitudes in @xmath =8 SUGRA. Here the
question of the finiteness of the theory is not settled yet. Even though
general arguments point out that @xmath =8 SUGRA should not be finite
recent calculations [ 92 ] show that the finiteness bound of @xmath =8
SUGRA seems to follow the one of @xmath =4 sYM and therefore point
towards a finite theory.
The UV behavior of the one- and two-loop five-point @xmath =4 sYM were
already studied in [ 75 ] . We can determine the critical dimension of
any Feynman integral by a simple power counting argument. In the UV
limit all external momenta become infinitesimal small compared to the
loop momentum so we can neglect them. Doing so we are left with an
integral of the following form

  -- -------- -- -------
     @xmath      (9.2)
  -- -------- -- -------

where x can be obtained by setting all the external momenta to zero in
e.g. equation ( 6.69 ). Furthermore we introduced a regulator @xmath to
prevent the integral from vanishing in dimensional regularization. Such
an integral will diverge if @xmath .

### 9.1 The One-Loop Amplitude

If we have a look at our one-loop amplitude we can see that the box
numerator diverges in @xmath dimensions.
In order to extract the UV divergence we will use dimensional
regularization, which means instead of calculating the loop integral in
the critical @xmath dimension we will shift the dimensions by a @xmath
term and extract a pole in the shifting parameter epsilon. The epsilon
pole then corresponds to the UV divergence in the critical dimensions.
Here we will show three methods of calculating the UV divergence of the
Box integral: Direct Integration with Feynman parametrization,
Integration-by-parts Identities [ 113 ] and Small Momentum Injection.
For the first two methods we need to reintroduce a regulator to the
integral, which is done by making the internal momenta massive

  -- -------- -- -------
     @xmath      (9.3)
  -- -------- -- -------

To obtain the right integral we should take the limit of the mass going
to zero in the end of the calculation.
For the last method we will keep two small momenta and let them flow
through the diagram. This small momentum then will be our regulator. As
in the other two methods we will take the limit of the regulator going
to zero in the end.

#### 9.1.1 Direct Integration with Feynman Parametrization

As we can see from eq. ( 9.3 ) the box integral is already in the
Feynman parametrization. Therefore we can directly turn the integral
over the Minkowski space into an Euclidean one by a Wick rotation

  -- -------- -- -------
     @xmath      (9.4)
  -- -------- -- -------

The next step is to introduce spherical coordinates which gives us

  -- -------- -- -------
     @xmath      (9.5)
  -- -------- -- -------

where @xmath is the surface of the @xmath dimensional sphere and given
by

  -- -------- -- -------
     @xmath      (9.6)
  -- -------- -- -------

The fourth step is a parameter transformation of the form @xmath

  -- -------- -- -------
     @xmath      (9.7)
  -- -------- -- -------

Now we notice that the remaining integral is actually a combination of
Gamma functions

  -- -------- -- -------
     @xmath      (9.8)
  -- -------- -- -------

which gives us

  -- -------- -- --------
     @xmath      (9.9)
     @xmath      (9.10)
  -- -------- -- --------

The regulator @xmath indicates that the critical dimension is @xmath .
As discussed before using dimensional regularization with @xmath gives
us

  -- -------- -- --------
     @xmath      (9.11)
  -- -------- -- --------

Now the pole in @xmath is located in the Gamma function, which can be
seen by expanding the Gamma function in a small argument

  -- -------- -- --------
     @xmath      (9.12)
  -- -------- -- --------

Together with the expansion of an exponential function

  -- -------- -- --------
     @xmath      (9.13)
  -- -------- -- --------

we can take the limit of @xmath going to zero

  -- -------- -- --------
     @xmath      (9.14)
  -- -------- -- --------

to obtain the leading UV pole of the one-loop amplitude.

#### 9.1.2 Integration-by-Parts Identities

The Integration-by-Parts Identities [ 114 ] (see [ 113 ] for a nice
review) give us the possibility to connect an integral of the form

  -- -------- -- --------
     @xmath      (9.15)
  -- -------- -- --------

by a recursive relation to an integral with a lower power in the
propagator

  -- -------- -- --------
     @xmath      (9.16)
  -- -------- -- --------

As a convention we choose to promote the integral with @xmath to the
master integral

  -- -------- -- --------
     @xmath      (9.17)
     @xmath      (9.18)
     @xmath      (9.19)
  -- -------- -- --------

In our case, as we can see from eq. ( 9.3 ), we have

  -- -------- -- --------
     @xmath      (9.20)
  -- -------- -- --------

Using the recursive formula once and then the known result for @xmath we
find

  -- -------- -- --------
     @xmath      (9.21)
     @xmath      (9.22)
  -- -------- -- --------

From our regulator we can identify the critical dimensions @xmath .
Plugging this into our expression and using an identity of the @xmath s

  -- -------- -- --------
     @xmath      (9.23)
  -- -------- -- --------

we can expose the pole in @xmath

  -- -------- -- --------
     @xmath      (9.24)
  -- -------- -- --------

Taking the limit of @xmath going to zero and with the expansion for
@xmath and the exponential function we obtain

  -- -------- -- --------
     @xmath      (9.25)
  -- -------- -- --------

#### 9.1.3 Small-Momentum-Injection

In order to obtain the UV pole with the small-momentum-injection we
won’t directly send all external momenta to zero. Instead we will keep
two external momenta, which reduces our box integral to a bubble one.
The only information left from the legs where the external momenta are
set to zero is the power the propagators are raised to, which is denoted
by a dot in figure 9.1 . In our example we have the following integral

  -- -------- -- --------
     @xmath      (9.26)
     @xmath      (9.27)
  -- -------- -- --------

where @xmath and @xmath are

  -- -------- -- --------
     @xmath      (9.28)
     @xmath      (9.29)
  -- -------- -- --------

The advantage of this method is that these integrals are known for each
power of the propagators in form of the following function [ 115 ]

  -- -------- -- --------
     @xmath      (9.30)
  -- -------- -- --------

where @xmath can be expressed in terms of Gamma functions

  -- -------- -- --------
     @xmath      (9.31)
  -- -------- -- --------

Back to our case we find for our integral

  -- -------- -- --------
     @xmath      (9.32)
  -- -------- -- --------

where we can see from our regulator that the critical dimension is
@xmath . Plugging this in we find

  -- -------- -- --------
     @xmath      (9.33)
  -- -------- -- --------

In the last step we send epsilon to zero. Together with the expansion of
the Gamma function we find

  -- -------- -- --------
     @xmath      (9.34)
  -- -------- -- --------

With this expression of the UV pole we can now go back to our full
amplitude and expose the divergence of the full one-loop amplitude.

#### 9.1.4 UV poles of the Full One-Loop Amplitude

In order to determine the UV Pole of the full amplitude we should first
remind ourselves of the full one-loop amplitude

  -- -------- -- --------
     @xmath      (9.35)
  -- -------- -- --------

As we have argued earlier the leading UV pole comes only from the box
integral, therefore we can neglect the pentagon integral @xmath . It is
convenient to turn the structure constant of the box integral

  -- -------- -- --------
     @xmath      (9.36)
  -- -------- -- --------

into traces over the generators like we did in the section about
color-ordered amplitudes

  -- -- -- --------
           (9.37)
  -- -- -- --------

where we used the notation

  -- -------- -- --------
     @xmath      (9.38)
  -- -------- -- --------

But since the sum in ( 9.35 ) runs over all permutation of external legs
we also have to take into account the different orderings of external
legs can contribute to one trace. Collecting all the pieces from
different orderings and taking into account the prefactor of @xmath of
the box in ( 9.35 ) we arrive at

  -- -------- -- --------
     @xmath      (9.39)
  -- -------- -- --------

which is the leading UV divergence of the five-point one-loop amplitude
at @xmath as previously presented in [ 75 ] .

### 9.2 The Two-Loop Amplitude

The UV divergence at two-loop can be obtained in a similar way to the
one-loop case. We will calculate the integral by a recursive use of the
small-momentum-injection method and then obtain the divergence of the
full amplitude by summing over all orderings of external legs.
By power counting we can conclude that the first UV divergence occurs at
@xmath . This divergence only occurs in the doubleboxes since the @xmath
dependence in the propagators of the other graphs drops out. This comes
from the fact that our numerators are at most linear in loop momentum
and can be easily seen by expanding the denominators in terms of scalar
products in eq. ( 7.69 ).
Other than in the one-loop case we have two two-point functions
appearing in the UV limit. The planar doublebox reduces to a two-point
function @xmath and the non-planar left and right crossed doublebox to a
two-point function @xmath . Both integrals are displayed in figure 9.2 .

We can calculate these bubble integrals with the
small-momentum-injection method. Therefore we will only keep two momenta
and call the remaining momenta @xmath

  -- -------- -- --------
     @xmath      (9.40)
     @xmath      (9.41)
  -- -------- -- --------

In contrast to the one-loop case we now have two integrals over the loop
momenta. But we can overcome this difficulty by recursively using the
small-momentum injection. In detail this means we will first calculate
the loop in the top of the diagram, absorb the momentum factor into the
left over propagators and then calculate the second loop. For the planar
case this takes the following form

  -- -------- -- --------
     @xmath      (9.42)
     @xmath      (9.43)
     @xmath      (9.44)
  -- -------- -- --------

From the regulator we can see that this integral diverges at @xmath as
we expected from power counting. Using the shifting parameter epsilon we
calculate the integral at @xmath dimensions and taking the limit of
epsilon going to zero we find for the planar integral

  -- -------- -- --------
     @xmath      (9.45)
  -- -------- -- --------

The non-planar integral can be obtained in the same way as we have
obtained the planar one

  -- -------- -- --------
     @xmath      (9.46)
     @xmath      (9.47)
     @xmath      (9.48)
  -- -------- -- --------

As in the planar case this integral will diverge at @xmath . Shifting
the dimension by @xmath we can extract the following pole in epsilon

  -- -------- -- --------
     @xmath      (9.49)
  -- -------- -- --------

#### 9.2.1 UV poles of the Full Two-Loop Amplitude

In order to obtain the leading UV pole of the full amplitude we should
first remind ourselves of the full two-loop amplitude.

  -- -------- -- --------
     @xmath      (9.50)
  -- -------- -- --------

Since the planar and non-planar doubleboxes will diverge first we can
neglect the pentabox, crossed pentabox and the double penta for the
leading UV divergence. Furthermore it is convenient to transform the
product of structure into traces over generators

  -- -------- -- --------
     @xmath      (9.51)
     @xmath      (9.52)
     @xmath      (9.53)
  -- -------- -- --------

The first thing to note is that the left and right crossed doublebox
have the same color factor namely @xmath . This means instead of keeping
track of both we can just add them together.
As in the one-loop case the sum in ( 9.50 ) runs over all ordering of
external legs, therefore we need to collect all the pieces that belong
to a certain color trace. Doing so we can find the following UV
divergence of the full amplitude

  -- -------- -- --------
     @xmath      (9.54)
  -- -------- -- --------

The UV pole of the two-loop five-point amplitude is in full agreement
with the results presented earlier in [ 75 ] .

## Chapter 10 Conclusion

This work focused on the development of new mathematical methods for
computing multi-loop scattering amplitudes in gauge theories, aiming at
the combined use of multiloop integrand-decomposition , unitarity-based
methods , and color-kinematic duality .

We have shown, for the first time, how the recently introduced
multi-loop integrand-reduction technique can be combined with a
unitarity-based construction of the integrand, yielding the
decomposition of scattering amplitudes in terms of independent
integrals.

We discussed the generic features of this novel reduction algorithm,
based on multivariate polynomial division and basic principles of
algebraic geometry, and we applied it to the one- and two-loop
five-point amplitudes in @xmath sYM. The integrands of the multiple-cuts
were built as products of tree-level amplitudes within the
super-amplitudes formalism, accounting for the whole particle content of
the whole @xmath super-multiplets which can run in the loops. The
reduction of the amplitudes in terms of independent integrals was
achieved by fitting the multiple-cut residues analytically. The
parametric form of the residue could be determined a priori by means of
successive polynomial divisions using the Gröbner basis generated from
the denominators that go simultaneously the on-shell.

In this work, the integrand-reduction method has been exploited to
investigate the color-kinematic duality for multi-loop @xmath sYM
scattering amplitudes. We aimed at understanding how the shape of the
residues at the multiple-cuts can be made compatible with a
cut-reconstruction of graph numerators which automatically satisfy the
color-kinematic dualities. Furthermore we provided the first step into a
new research direction, namely how symmetries can restrict the number of
monomials in a residue. Through the integrand-reduction we know that the
each monomial in the integrand is corresponding to a potential master
integral. Therefore we can use symmetries of the integr and to further
reduce the number of appearing master integ rals . We finally extracted
the leading ultra-violet divergences of the one- and two-loop five-point
amplitudes in @xmath sYM, which represent a paradigmatic example for
studying the UV behavior of supersymmetric amplitudes.

## Acknowledgements

I want to thank my Co-Supervisor Pierpaolo Mastolia for the huge amount
of time he invested into my training and this thesis. Furthermore I want
to thank him for all the useful discussion we had and the insight he
provided me into this extremely interesting field. In addition I want to
thank Tiziano Peraro and Johannes Schlenk for the fruitful discussions
we had. Furthermore I want to thank my parents, who made it possible for
me to study at the Technical University Munich (TUM) and for their
endless support on the way. A special thanks goes to my girlfriend Kate
for all the support and the motivation she gave me.

## Chapter 11 Appendix

### 11.1 Merging of the One-Loop Integrand

The product of generating functions for the one-loop amplitude is given
by

  -- -------- -- --------
     @xmath      (11.1)
  -- -------- -- --------

Plugging in the generating functions for @xmath =4 sYM we find the
following expression

  -- -------- -- --------
     @xmath      (11.2)
     @xmath      (11.3)
     @xmath      (11.4)
  -- -------- -- --------

From the momentum conservation at the all incoming @xmath three point
vertices we find the following identity

  -- -------- -- --------
     @xmath      (11.5)
     @xmath      (11.6)
  -- -------- -- --------

where we obtained the last line by contracting the expression with a
@xmath . With this identity we can now continue to calculate the
quadruple-cut residue

  -- -------- -- --------
     @xmath      (11.7)
     @xmath      (11.8)
     @xmath      (11.9)
  -- -------- -- --------

where we have obtained the last line by the identity @xmath . Continuing
our calculation we find

  -- -------- -- ---------
     @xmath      (11.10)
     @xmath      (11.11)
     @xmath      (11.12)
  -- -------- -- ---------

Putting this together with the denominator we find

  -- -------- -- ---------
     @xmath      (11.13)
  -- -------- -- ---------

Using momentum conservation to cancel as many spinor products as
possible we arrive at equation ( 6.22 )

  -- -------- -- ---------
     @xmath      (11.14)
  -- -------- -- ---------

### 11.2 Monomials in the Residues

The monomials which parametrize the residues of the pentabox, crossed
pentabox and the double penta have been obtained in [ 106 ] . For
convenience we will just state the main results here.

#### 11.2.1 Pentabox

The pentabox in @xmath =4 sYM had four sevenfold-cut residues @xmath ,
@xmath , @xmath and @xmath and an eightfold-cut residue @xmath . If we
use the following general decomposition for the loop momentum

  -- -------- -- ---------
     @xmath      (11.15)
  -- -------- -- ---------

we can write down a basis for each cut

  -- -------- -- ---------
     @xmath      (11.16)
     @xmath      (11.17)
     @xmath      (11.18)
  -- -------- -- ---------

The monomials of the residues can be obtained through a multivariate
polynomial division of a generic integrand. These monomials are shown in
table 11.1 . ¹ ¹ 1 The differences to the tables in [ 106 ] stem from a
different labeling of the propagators.

#### 11.2.2 Crossed Pentabox

The crossed pentabox has also four sevenfold-cut residues @xmath ,
@xmath , @xmath and @xmath and an eightfold-cut residue @xmath . With
the same basis as for the pentabox we can find the monomials displayed
in table 11.2.2 .

#### 11.2.3 Double Penta

The double penta has eight sevenfold-cut residues. But we also know that
it is invariant under the transformation

  -- -------- -- ---------
     @xmath      (11.19)
  -- -------- -- ---------

therefore it is enough to parametrize the residues @xmath , @xmath ,
@xmath , @xmath and @xmath . The basis for each cut in terms of the
general decomposition ( 11.15 ) are given by:

  -- -------- -- ---------
     @xmath      (11.20)
     @xmath      (11.21)
  -- -------- -- ---------

The monomials appearing in each residue are given in table 11.2.3