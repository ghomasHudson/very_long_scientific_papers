###### Contents

-    1 Introduction.
-    2 Voronoi diagrams.
    -    2.1 Convex hull.
    -    2.2 Voronoi diagram.
    -    2.3 Topological changes.
    -    2.4 Delaunay triangulation.
    -    2.5 Geometric transformations.
-    3 A Voronoi poset.
    -    3.1 Introduction.
    -    3.2 Higher order Voronoi diagrams.
    -    3.3 The Voronoi poset.
    -    3.4 Symmetry relations.
    -    3.5 Even versus odd order cells.
-    4 Limits of Voronoi diagrams.
    -    4.1 Introduction.
    -    4.2 Preliminaries.
    -    4.3 The type of a set of polynomial sites.
    -    4.4 The Voronoi diagram of a set of points and angles between
        the points.
    -    4.5 The positive area cells for one cluster.
    -    4.6 Degenerate Voronoi cells and edges.
    -    4.7 Example: 20 polynomial sites.
    -    4.8 The shape of a Voronoi diagram at @xmath .
    -    4.9 Generalizations and conclusion.
-    5 Voronoi diagrams and angle compactifications.
    -    5.1 @xmath : space of angles on @xmath points.
    -    5.2 From angles back to point configurations.
    -    5.3 Angle models for small @xmath .
    -    5.4 The triangle variety @xmath .
-    6 Continuity of the Voronoi map.
    -    6.1 Introduction.
    -    6.2 Preliminaries.
    -    6.3 One point continuity.
    -    6.4 The distance between two Voronoi diagrams.
    -    6.5 Continuity of the Voronoi map.
-    7 Clickable Voronoi diagrams and hook compactifications.
    -    7.1 Fulton-MacPherson related models.
    -    7.2 Informal introduction.
    -    7.3 Angles and hooks.
    -    7.4 Nests and screens.
    -    7.5 Filling @xmath -screens.
    -    7.6 Reading off data elements from filled screens.
    -    7.7 Consistency Theorem.
    -    7.8 @xmath is smooth.
    -    7.9 Voronoi diagrams in the @xmath -screens.
    -    7.10 Conclusion.
-    Bibliography

## Chapter 1 Introduction.

In this thesis we study sets of points in the plane and their Voronoi
diagrams, in particular when the points coincide. We bring together two
ways of studying point sets that have received a lot of attention in
recent years: Voronoi diagrams and compactifications of configuration
spaces. We study moving and colliding points and this enables us to
introduce ‘limit Voronoi diagrams’. We define several compactifications
by considering geometric properties of pairs and triples of points. In
this way we are able to define a smooth, real version of the
Fulton-MacPherson compactification. We show how to define Voronoi
diagrams on elements of these compactifications and describe the
connection with the limit Voronoi diagrams.

#### Voronoi diagrams and supermarkets.

Consider all supermarkets in a city. We divide the city in sectors by
considering the closest supermarket: all people in the sector of some
supermarket are closer to this supermarket than to any other
supermarket. The Voronoi diagram of the supermarkets is this subdivision
of the city into sectors. The Voronoi cell of one supermarket is just
the sector of the supermarket. An example of a Voronoi diagram of six
supermarkets, numbered @xmath to @xmath , is given in Figure 1.1 .

In the figure we see some boundaries, for example the boundary between
supermarket @xmath and supermarket @xmath . People living on this
boundary are at equal distance between those supermarkets. The boundary
is part of a line, the dotted line in the picture, which is called the
bisector of @xmath and @xmath , because on one side of the line people
are closer to supermarket @xmath and on the other side people are closer
to supermarket @xmath . So, the bisector divides the plane into two
sectors or half-planes . The sector containing supermarket @xmath is
called Voronoi half-plane @xmath and the sector on the other side of the
bisector is Voronoi half-plane @xmath . We can express the sector @xmath
of supermarket @xmath in terms of these Voronoi half-planes:

  -- -------- -- -------
     @xmath      (1.1)
  -- -------- -- -------

Of course this formula just states that you are in the sector of
supermarket @xmath if you are closer to supermarket @xmath than to
@xmath , closer to supermarket @xmath than to @xmath , etcetera. If we
want to code the bisector of @xmath and @xmath , we need only two
ingredients: one point on the bisector and the angle that the bisector
makes with the horizontal line. This will be important later on.

#### Driving supermarkets: changing Voronoi diagrams.

In the Dutch countryside food is supplied by little supermarket lorries,
or supervans. These vans drive through the countryside looking for
customers. In the part of the countryside we are considering there are
five supervans. If we know their positions at a certain moment, we can
determine the Voronoi diagram of the five vans at that moment. But, if
the vans drive continuously the Voronoi diagram of the vans changes
continuously as well. In Chapter 4 we model these driving supervans and
their changing Voronoi diagrams. For every supervan there is a curve
that gives at any time @xmath the position of the supervan. If we want
to know the Voronoi diagram at time @xmath , we specify @xmath in the
curves describing the position of the vans. Using positions given by the
curves we compute the Voronoi diagram.

There is only one problem. At one day a very unfortunate accident
happens: all vans run into each other at @xmath . How should we define
the Voronoi diagram of the vans at @xmath ? In this particular example
we decide to analyze the situation just before the accident happens.
That is, we let time run backwards and investigate what is going on for
small negative @xmath . The route covered by the five vans before the
accident is shown in Figure 1.2 .a. A Voronoi diagram of the positions
of the vans just before the accident is given in Figure 1.2 .b.

Our strategy is to define a Voronoi diagram at @xmath that is consistent
with the situation just before @xmath . We call such a diagram a ‘limit
Voronoi diagram’ and an example of this that resembles the Voronoi
diagram in Figure 1.2 .b is shown in Figure 1.2 .c. Compare the two
diagrams. Note that the directions of the outgoing edges in the two
diagrams are very similar. The Voronoi cell of van @xmath , in the
middle of the diagram of Figure Figure 1.2 .b seems to have completely
disappeared in Figure 1.2 .c. These two remarks address questions that
we answer in Chapter 4 and the chapters after that: what information is
needed to to create a diagram as shown in figure 1.2 .c? And, can we
still say something about the Voronoi cells that seem to disappear in
the limit, like the cell of van @xmath ?

#### Voronoi diagrams for coinciding points.

We restrict ourselves for a moment to the case of two points, @xmath and
@xmath . The position of each point at time @xmath is given by a curve.
Suppose that the two points meet at @xmath . Such situation is shown in
Figure 1.3 .a-c. In Figures 1.3 .a and b, the two points are still
distinct. Therefore we can draw the line @xmath that passes through both
points. This line makes some angle @xmath with the horizontal axis. So
this angle @xmath is in some sense the angle of the points @xmath and
@xmath . As the positions of the points depend on time @xmath , the
angle @xmath also depends on time, that is @xmath . The Voronoi diagram
of points @xmath and @xmath is determined by the line at equal distance
from the points @xmath and @xmath . That line is exactly the bisector of
@xmath and @xmath : the line perpendicular to line @xmath passing
through the middle of the line segment @xmath . If @xmath and @xmath
coincide, we define the middle of the line segment @xmath as the point
@xmath itself. And we define the angle @xmath as the limit for small
negative @xmath of @xmath . Now we define the bisector at @xmath in
terms of this angle and this middle point. That is, the bisector of
@xmath is the line passing through @xmath perpendicular to the direction
@xmath . But this implies that we have created a Voronoi diagram for the
two coinciding points @xmath and @xmath !

We drop this particular example but conclude the following: we can
define a limit Voronoi diagram for two coinciding points @xmath and
@xmath if we know the following information:
kip – the position @xmath of the coinciding points.
kip – an angle @xmath mod @xmath .
In this way we can define a limit Voronoi diagram for an arbitrary
number of coinciding points as well: as long as we have for every pair
of coinciding points @xmath and @xmath a position @xmath and an angle
@xmath , we can define the bisector of @xmath and @xmath . And, using
the bisector we can determine the two Voronoi half-planes @xmath and
@xmath . Now we are done, as any Voronoi cell can be expressed as an
intersection of half-planes, as we saw in Equation 1.1 .

We work along these lines in Chapter 4 . For example, the curves
describing the positions of the two points @xmath and @xmath in Figure
1.3 are given by @xmath and @xmath . We only allow curves given by pairs
of polynomials in @xmath . We call points described by such curves
polynomial sites . After having defined Voronoi diagrams for polynomial
sites we show how to determine the Voronoi diagrams without having to
compute all bisectors.

First we assume that we have a set of @xmath polynomial sites that all
coincide at @xmath . So, this is the situation in Figure 1.2 .a, where
five polynomial sites cluster together. Leaving out polynomial site
@xmath in the beginning will not change the shape of the limit diagram
as we see in figure 1.2 .c. We show in Section 4.5 which sites exactly
can be left out without changing the boundary of the diagram. So, we
want to characterize those sites that are somehow in the interior of the
cluster. Of course we could as well characterize the sites that are on
the exterior of the cluster. This is done in terms of the convex hull of
the sites in the cluster for small enough positive @xmath .

For a general set @xmath of @xmath polynomial sites, the boundary of the
Voronoi diagram at @xmath is determined by plugging . We demonstrate
plugging in Figure 1.4 where we compute the Voronoi diagram of @xmath ,
for @xmath , @xmath and @xmath . The other polynomial sites form a
cluster in the origin. In fact we used this cluster already for the
supervan example in Figure 1.2 . The cluster locations of @xmath at
@xmath are the distinct positions of the sites at @xmath . So, we have
four cluster locations. The Voronoi diagram of the cluster locations is
given in Figure 1.4 .a. Next, the cell of every cluster location is
filled, if necessary. Three cells in our example correspond to a single
point, so no filling is needed there. The limit Voronoi diagram of the
points clustering in the origin, is shown in Figure 1.4 .b. We simply
plug this diagram in the appropriate cell in order to obtain the limit
Voronoi diagram of @xmath . The result is shown in Figure 1.4 .c.

The limit Voronoi diagrams are really new diagrams: in general they can
not be realized as classic Voronoi diagrams, for example Figure 1.4 .c.
In classic Voronoi diagrams, every Voronoi cell has positive area, for
example. This is not true for limit Voronoi diagrams.

#### Compactifications of configuration spaces.

A collection of @xmath points in @xmath is often called a configuration
. The configuration space of @xmath distinct points in @xmath is just
the space that consists of all possible configurations of @xmath
distinct, ordered points. Suppose for example that @xmath . Any element
of the configuration space consists of three lebeled points @xmath such
that: @xmath is distinct from @xmath ; @xmath is distinct from @xmath ;
and @xmath is distinct from @xmath . A natural way of describing the
configuration @xmath is by listing the coordinates of @xmath , @xmath ,
and @xmath . But if we list all six coordinates in single file, we
obtain an element @xmath in @xmath . That is, the configuration space of
three distinct point in the plane is part of a six dimensional space. In
fact it is six dimensional, as almost all elements of @xmath can be seen
as some configuration @xmath of three distinct points.

We are interested in the Voronoi diagram of @xmath points in the plane.
That is, we want to define a Voronoi diagram for every configuration in
a configuration space of @xmath points. We are especially interested in
possible Voronoi diagrams for point sets that contain coinciding points.
We call such point sets degenerate configurations. The idea of a
compactification of a configuration space is as follows: we want to
construct a space that encodes all possible configurations of @xmath
distinct points, both non-degenerate and degenerate. Degenerate
configurations should be on the boundary of this space. By adding this
boundary the degenerate configurations are incorporated. For a bounded
space, adding the boundary is the same as compactifying, which explains
the name ‘compactification’. One important reason to compactify is the
hope to be able to extend some definition, in our case the definition of
Voronoi diagram, to the degenerate configurations. This extension would
give access to limit objects which in our case are limits of Voronoi
diagrams.

We denote the set of ordered @xmath tuples of all pairwise distinct
points in the plane by @xmath . Although this is not very useful for us,
an easy example is the compactification @xmath of the configuration
space @xmath itself. The problem with this compactification is that it
gives very little information on degenerate configurations: for two
coinciding points @xmath , the only point that is added by compactifying
is the point @xmath . Consider the two points @xmath and @xmath where
@xmath . If @xmath goes to zero, @xmath will coincide with @xmath .
Describe the Voronoi diagram of @xmath and @xmath as in Figure 1.3 .
Then every distinct value of @xmath corresponds to a distinct direction
of the bisector of the points @xmath and @xmath . But this means that
there is not one Voronoi diagram corresponding to @xmath but a complete
collection of diagrams, parameterized by @xmath mod @xmath .

#### Compactifying using angles.

By now, the attentive reader should be convinced that it is not a
strange idea to use angles for a suitable compactification. In Chapter 5
we may consider all angles between @xmath points: we start with @xmath
distinct, labeled points in the plane. For every two points @xmath and
@xmath with @xmath we consider the directed line @xmath passing through
the two points. This line makes some angle @xmath mod @xmath with the
horizontal axis. The angle map @xmath maps a configuration of @xmath
distinct points to the @xmath directed angles @xmath with @xmath . Let
@xmath be a triangle with vertices @xmath , @xmath and @xmath . If we
know the angles @xmath , @xmath and @xmath , we know in fact the shape
of the triangle @xmath . So, @xmath describes in a way all distinct
triangles on three points. We describe explicitly this image @xmath in
Chapter 5 . We explain the consequences of the action of the symmetric
group @xmath on the labels of the three vertices. Finally we give
geometric interpretations of boundary points of @xmath in terms of
degenerate configurations.

The first compactification that we encounter is @xmath , the
compactification of directed angles . This space is defined as the
closure of the graph of the angle map @xmath , so a point @xmath
consists of @xmath points and @xmath angles between those points. If
@xmath is a boundary point of @xmath , then not all points need to be
distinct. In any case we know for every two points @xmath an angle
@xmath and the position(s) @xmath or @xmath . This implies that for
@xmath a Voronoi diagram @xmath is defined.

In Chapter 6 we prove a continuity theorem for Voronoi diagrams of data
sets from @xmath . It states essentially that two data sets @xmath that
are close in the Euclidean metric, have Voronoi diagrams whose
boundaries are close in the Hausdorff metric. The Hausdorff metric is
very suitable to compare images. Two sets @xmath and @xmath in the plane
are within Hausdorff distance @xmath iff @xmath is the smallest number
such that any point of @xmath is within distance @xmath from some point
in @xmath and vice versa.

#### An algebraic description: from angles to slopes.

The line through the points @xmath and @xmath is given algebraically by
the equation

  -- -------- -- -------
     @xmath      (1.2)
  -- -------- -- -------

The quantity @xmath is of course the slope of the line. Instead of
writing down the angle @xmath for every two points @xmath and @xmath ,
we consider all slopes @xmath . It turns out that there exists an
algebraic relation between the six possible slopes for four distinct
points @xmath , @xmath , @xmath and @xmath . This relation is called the
six-slopes formula, compare Figure 1.5 . The formula is given by @xmath
, where

  -- -------- --
     @xmath   
  -- -------- --

We prove in Chapter 5 that there also exists a triangle formula. This is
a relation @xmath between slopes and @xmath -coordinates of the points
@xmath , @xmath , and @xmath . So by now we have two formulas involving
points and slopes: one holds for any three points and the other holds
for any four points. Suppose we have some configuration @xmath of points
and slopes such that all triangle formulas and all six-slopes formulas
hold. A question that we consider in Chapter 5 is the following: is such
configuration @xmath always a limit of non-degenerate configurations. To
that end we introduce a variety that consists of exactly those
configurations such that all triangle formulas and all six-slopes
formulas hold. That is: the algebraic variety @xmath is just the set of
zeroes common to all triangle formulas and all six-slopes formulas. It
serves as an algebraic counterpart of the compactification @xmath of
undirected angles . We prove that @xmath is not a smooth variety and
give a geometric interpretation for the non-singular configurations.

#### A smooth and clickable compactification.

Look at Figure 1.2 again. On the right, a limit Voronoi diagram of the
points @xmath is displayed. For every point @xmath a Voronoi cell is
visible, except for @xmath . One could say that the Voronoi cell @xmath
is so small that we cannot see it. A solution in this case could be to
rescale or magnify the picture somehow until the cell @xmath becomes
visible. After magnifying enough we would get a picture that is very
similar to Figure 1.2 .b In more complicated configurations we might
need to rescale or zoom in several times at several positions in order
to distinguish every cell.

This shows the need of a ‘clickable’ compactification on which we can
define ‘clickable’ Voronoi diagrams. An example is given in Figure 1.6 .
In the top ‘screen’, six points are visible. But the two points in the
middle are in fact clusters of points. One cluster consists of the
points @xmath , @xmath and @xmath . This can be ‘seen’ by clicking on
the cluster: The bottom left screen appears, displaying these points
separately. The bottom right screen appears after clicking on the other
cluster and displays the points @xmath , @xmath , @xmath , @xmath and
@xmath .

The Fulton-MacPherson compactification is a well-known compactification
of the configuration space of @xmath distinct labeled points that has
such a ‘clickable’ structure. To analyze Voronoi diagrams we do not need
the full generality of this compactification. That is why we construct a
real version of this compactification, incorporating some ideas of
Kontsevich-Soibelman. Let @xmath be some configuration of @xmath
distinct points. Kontsevich and Soibelman write down both the angles
@xmath between any two points, and, for every ordered triple of points
@xmath , the ratio @xmath . They take the closure of the image of @xmath
under the map that assigns all angles and ratios to a set of distinct
points. This results in a manifold with corners @xmath .

In Chapter 7 we show how to adapt their approach so that the resulting
compactification is a smooth manifold. Instead of just a ratio, we write
down a hook for every triple of points. A hook @xmath consists of this
ratio @xmath together with an angle @xmath between the legs of the hook,
cf. Figure 1.7 . We define a space @xmath as the closure of the image of
@xmath under the map

  -- -------- --
     @xmath   
  -- -------- --

where @xmath denotes the identification of @xmath with @xmath .

Any point @xmath that is added to @xmath by taking the closure has some
ratio @xmath equal to zero. We think of these points as corresponding to
degenerate configurations, that is, configurations that have some
coinciding points. We exploit these zero ratios to define a series of
screens corresponding to @xmath . A screen is just a copy of the plane
@xmath . In Figure 1.6 for example, there are three screens. We ‘fill’
these screens with the degenerate configuration. We can do it so that
any two points in the configuration are separated in at least one
screen. Moreover, the process is such that it shows how to write @xmath
locally as the graph of a function. This proves that @xmath is indeed a
smooth manifold.

The close connection between @xmath and the manifold with corners @xmath
has two immediate applications. First of all there is Theorem 7.65 that
reveals the corner structure of @xmath : the corners appear
automatically if we describe the natural map from @xmath to @xmath .

Moreover, we can apply this same method of defining and filling screens
to the manifold with corners @xmath . That is, we add a family of
screens to a degenerate configurations @xmath . But @xmath contains all
angles mod @xmath between two points. Therefore we can, without
ambiguities, define a clickable Voronoi diagram as shown in Figure 1.6
for every @xmath . We conclude Chapter 7 by showing how to jump between
several descriptions and models in this thesis. Suppose we start with
some @xmath , for example. We can always construct a set @xmath of
polynomial sites @xmath with the following property: if we write down
all angles and ratio’s for the sites in @xmath , we exactly obtain
@xmath .

#### Comparing prices: higher order Voronoi diagrams.

In what preceded we have extended Voronoi diagrams by limit Voronoi
diagrams. Another extension or generalization of the classic Voronoi
diagrams are the higher order Voronoi diagrams. We discuss some results
on higher order Voronoi diagrams in Chapter 3 .

People in the Netherlands like to compare prices. That is, they have no
fixed supermarket, but frequent the, say, five closest supermarkets to
pick the bargains. For those people we have to divide the city into
different sectors that we call @xmath -sectors. In one @xmath -sector,
the five closest supermarkets are the same. So, if people know which
@xmath -sector they live in, they know the five closest supermarkets. An
example is given in Figure 1.8 . In Figure 1.8 .a the 6 supermarkets of
above are displayed again. In Figure 1.8 .b the four different @xmath
-sectors are drawn. So, in sector @xmath , the five closets supermarkets
are supermarkets @xmath , @xmath , @xmath , @xmath and @xmath . Or, if
we put it the other way around: in @xmath -sector @xmath , supermarket
@xmath is the most far away supermarket. This diagram is the fifth order
Voronoi diagram of the six supermarkets.

Note that in Figure 1.8 .b only four distinct @xmath -sectors are
present. This implies that two supermarkets (which ones?) are nowhere
the most far away supermarket. We can change however the position of the
supermarkets in such a way that every supermarket is somewhere the most
far away supermarket. (How to do this? Put the supermarkets on the
vertices of a convex @xmath -gon.) This shows that if we change the
position of the supermarkets, the set of @xmath -sectors may change as
well. In Chapter 4 we write down all @xmath -sectors. Moreover, we write
down all @xmath -sectors, all @xmath -sectors and all @xmath -sectors.
And we add all @xmath -sectors and all @xmath -sectors, although they
are trivial (why?). If we collect everything we get a collection of
subsets of @xmath . Or more general: we start with a set @xmath of
@xmath distinct points in the plane. The Voronoi poset @xmath consists
exactly of those subsets of @xmath that have a non-empty Voronoi cell.

Although the @xmath -sectors may change if we change the position of the
supermarkets, there are certain invariants. An invariant is just a
number that is independent of the position of the supermarkets. In
Theorem 3.24 we prove for example the following: suppose the number of
supermarkets is odd. Then the number of odd sectors equals the number of
even sectors. Or more formal: for almost every configuration @xmath the
total number of cells in all even order Voronoi diagrams of @xmath
equals the total number of cells in all odd order Voronoi diagrams of
@xmath .

## Chapter 2 Voronoi diagrams.

In this chapter we give a short introduction to Voronoi diagrams. Most
material covered in this chapter can be found in good books on
computational and discrete geometry. A very readable general
introduction to computational geometry is the book by De Berg, Kreveld,
Overmars and Schwarzkopf, see [ BKOS ] . The book by Edelsbrunner, see [
Ed ] , is more in-depth, but less suited as an introduction. Okabe,
Boots and Sugihara wrote a monograph on Voronoi diagrams for a broad
audience, see [ OBS ] . Most recent is the chapter on Voronoi diagrams
written by Aurenhammer and Klein in the Handbook of Computational
Geometry ( [ AK ] ). Some concepts that are used in the rest of this
thesis are shortly discussed in an overview paper on computational
topology, cf. [ DEG ] .

Apparently, Dirichlet in 1850 and Voronoi in 1908, cf. [ Vo ] , were the
first that used a notion of Voronoi diagram. They considered Voronoi
diagrams of regular point sets, associated to quadratic forms. Consult [
CF ] for a recent and recommendable book on Voronoi diagrams of
quadratic forms.

### 2.1 Convex hull.

A subset @xmath of the plane is convex if for any two points @xmath the
line segment @xmath is contained in @xmath as well. The convex hull
@xmath of a set @xmath is the smallest convex set containing @xmath .
Any two non-coinciding points @xmath and @xmath define two hull
half-planes @xmath and @xmath where:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The determinant @xmath is given by:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Let @xmath be a finite set of distinct points in @xmath . We can write
@xmath as an intersection of hull half-planes. More precisely, @xmath
equals the intersection of those half-planes defined by points in @xmath
that contain all points of @xmath

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

As a non-empty intersection of half-planes, @xmath is a convex polygon.
We can represent this polygon by listing its consecutive vertices in
clockwise order. In this way @xmath corresponds to a cyclically ordered
list of points from @xmath .

###### Example 2.1

In Figure 2.1 , @xmath .

Suppose the points in @xmath start moving around in the plane. Assume
that at the start of the motion, no three points in @xmath are
collinear. A small enough disturbance of the points in @xmath does not
change the ordered list of points of @xmath . Only when a point @xmath
passes a convex hull edge @xmath , the list changes (simultaneously
@xmath ). We call this change in @xmath a convex hull event .

### 2.2 Voronoi diagram.

Start again with a set @xmath of @xmath distinct points in the plane.
The Voronoi cell @xmath of a point @xmath is defined as

  -- -------- --
     @xmath   
  -- -------- --

Here, @xmath denotes the ordinary Euclidean distance between @xmath and
@xmath . Note that we define a Voronoi cell as a closed subset of @xmath
, in contrast to the choice made in [ Ed , BKOS ] . The Voronoi diagram
@xmath of @xmath is the family of subsets of @xmath consisting of the
Voronoi cells and all of their intersections. The boundary of a Voronoi
cell consists of Voronoi edges and Voronoi vertices . A point @xmath is
on the Voronoi edge @xmath if @xmath and @xmath if @xmath . A point
@xmath is a Voronoi vertex if it is present on at least two Voronoi
edges. A circle @xmath is an empty circle with respect to @xmath if
there are no points of @xmath inside the circle. For any three points
@xmath , @xmath , and @xmath , that are not collinear, there exists a
unique circle @xmath passing through @xmath , @xmath , and @xmath . A
circle @xmath is a Voronoi circle if it is an empty circle.

###### Lemma 2.2

@xmath is a Voronoi vertex if and only if @xmath is the center of a
Voronoi circle.

###### Proof..

[ BKOS ] , Theorem 7.4. ∎

The bisector @xmath of two points @xmath and @xmath is the line
equi-distant to @xmath and @xmath . It is perpendicular to the line
segment @xmath passing through @xmath . A point @xmath is in the Voronoi
half-plane @xmath if it is not closer to @xmath than to @xmath :

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

As a consequence, the Voronoi half-plane @xmath is bounded by the
bisector @xmath . Any Voronoi cell is an intersection of half-planes

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Therefore, any Voronoi cell @xmath is convex and is either bounded or
unbounded.

###### Lemma 2.3

@xmath is unbounded if and only if @xmath , where @xmath denotes the
boundary of the convex hull @xmath .

###### Proof..

[ OBS ] , Property V2. ∎

###### Lemma 2.4

Let @xmath , @xmath and @xmath be three distinct points that are not
collinear. Let @xmath be the center of the circle through @xmath ,
@xmath and @xmath . Then:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

The point @xmath is equi-distant to @xmath and @xmath . ∎

### 2.3 Topological changes.

###### Definition 2.5

Let @xmath be a Voronoi diagram. Represent every vertex @xmath of @xmath
as an ordered list of labels of the points of @xmath on the Voronoi
circle @xmath of @xmath . The order of the labels corresponds to the
cyclic, clockwise order of the points on @xmath . The set of all these
lists is the type of the Voronoi diagram @xmath .

###### Example 2.6

A diagram of type @xmath is depicted in Figure 2.3 .

A point set @xmath is in general position iff no three points are
collinear and no four points are cocircular. If @xmath is in general
position, then every Voronoi circle has exactly three points on its
boundary. When the points in @xmath start to move around in the plane,
the type of @xmath changes exactly when the configuration of empty
circles changes. This can happen generically in two ways.

The first is when two empty circles @xmath and @xmath coincide. This is
a circle event , see Figure 2.4 . Before the event, @xmath , @xmath ,
@xmath , and @xmath define two empty circles @xmath and @xmath . If
@xmath moves to the left in the leftmost figure, @xmath , @xmath ,
@xmath and @xmath become cocircular. If @xmath continues moving left,
one arrives in the situation of the rightmost figure, where @xmath and
@xmath are the empty circles. The corresponding change in type is given
by:

  -- -------- --
     @xmath   
  -- -------- --

The other way by which the type of a Voronoi diagram can change is by
means of a convex hull event, see Figure 2.5 . Consider the circle
defined by the points @xmath and @xmath . In the figure on the left,
@xmath . The circle @xmath contains all other points of @xmath in its
interior. Suppose @xmath moves to the left. At some stage, @xmath passes
through the line segment @xmath . At this moment, the circle @xmath
swaps over, and becomes empty, as in the picture on the right. This
means that in the type of @xmath , an extra term @xmath appears.

### 2.4 Delaunay triangulation.

Starting from a Voronoi diagram @xmath we define the Delaunay graph ,
@xmath , of @xmath . The vertices of @xmath are exactly the points in
@xmath . Two vertices @xmath and @xmath are connected by an edge in
@xmath exactly if there exists an edge @xmath of positive length in the
Voronoi diagram @xmath . Let @xmath be the straight line embedding of
the Delaunay graph @xmath . For point sets @xmath that are in general
position, @xmath triangulates the convex hull @xmath . For this reason,
the straight line embedding @xmath of the Delaunay graph @xmath is
called the Delaunay triangulation of @xmath . This terminology is also
used for point sets @xmath that are not in general position. In the
latter case @xmath is not necessarily a triangulation. An example of a
Delaunay triangulation is presented in Figure 2.6 .

The Delaunay triangulation @xmath is dual to the Voronoi diagram @xmath
in the following sense: vertices in the Voronoi diagram correspond to
faces in the Delaunay triangulation, while Voronoi cells correspond with
vertices of @xmath . As a consequence, the effect of a convex hull event
and a circle event on the Delaunay triangulation @xmath is easily found.
At the convex hull event depicted in Figure 2.5 a triangle @xmath
appears in the Delaunay triangulation @xmath . Moreover, for any triple
of points @xmath , @xmath , and @xmath in a point set @xmath it follows
that @xmath , @xmath , and @xmath gives a triangle in @xmath if and only
if the circle @xmath is a Voronoi circle. Indeed, in the circle event of
Figure 2.4 an edge @xmath of the Delaunay triangulation flips over in an
edge @xmath . This proves the following lemma.

###### Lemma 2.7

Let @xmath be a set of distinct points in @xmath in general position.
The type of the Voronoi diagram @xmath is the list of triangles in the
Delaunay triangulation @xmath .

The following characterization of Delaunay triangulations explains why
Delaunay triangulations are often used in the generation of altitude
maps and contour plots. The minimal angle of a triangulation is the
smallest angle that occurs in any of the triangles of the triangulation.
In Figure 2.6 , the minimal angle is the angle @xmath .

###### Lemma 2.8

Let @xmath be a point set in general position. The Delaunay
triangulation @xmath is that triangulation that maximizes the minimal
angle over all triangulations of @xmath .

###### Proof..

[ BKOS ] , Theorem 9.9. ∎

### 2.5 Geometric transformations.

#### 2.5.1 The lifting transformation.

There is an easy correspondence between Delaunay triangulations of point
sets in @xmath and convex hulls in @xmath : the lifting transformation .
This transformation is established by the map

  -- -------- --
     @xmath   
  -- -------- --

It maps a point in the plane onto a point of the paraboloid @xmath
defined by @xmath , see Figure 2.7 . The map @xmath has two properties
that are important to us.

###### Lemma 2.9

Let @xmath be a circle in the @xmath -plane.

-   @xmath , where @xmath is a plane in @xmath .

-    A point @xmath is inside @xmath if and only if @xmath below @xmath
    .

###### Proof..

The proof follows directly from combining the equation of a circle in
the plane and the equation of the paraboloid @xmath . ∎

Let @xmath be a set of points in the @xmath -plane and @xmath the set of
images of the points in @xmath on the paraboloid @xmath . By Lemma 2.9 ,
@xmath maps empty circles defined by @xmath onto faces of the lower
convex hull of @xmath . Therefore, the projection of the lower hull
faces of @xmath onto the @xmath -planes gives exactly the Delaunay
triangulation @xmath .

Let @xmath be a set of @xmath points in general position. A subset
@xmath of @xmath points of @xmath is a @xmath -set if it can be
separated from the complementary set @xmath of @xmath points by a plane
@xmath . Here we say that @xmath separates @xmath from @xmath if @xmath
can be oriented so that all points in @xmath are on the positive side of
@xmath , while all points of @xmath are on the negative side. Lemma 2.9
shows that any set of @xmath points contained in a circle in @xmath can
be mapped to a @xmath -set in @xmath .

#### 2.5.2 Mapping points to planes.

A set of @xmath planes @xmath defines a subdivision of @xmath into
connected pieces of dimension @xmath or @xmath . This subdivision is the
arrangement @xmath of @xmath . Arrangements form a topic of their own,
cf. [ OT ] . We assume that any point in any plane @xmath for @xmath can
be written as @xmath , for some linear function @xmath . That is, @xmath
consists of non-vertical planes only. We say that @xmath is above plane
@xmath iff @xmath ; similarly for below . The @xmath -level of the
arrangement @xmath consists of those points in @xmath above or in @xmath
planes and below or in @xmath planes of @xmath . The @xmath -level of an
arrangement @xmath is also called the upper envelope of @xmath .

Using the map @xmath again, we show that we can determine the Voronoi
diagram of a set @xmath of points in @xmath by computing the boundary of
an upper envelope in @xmath . Consider Figure 2.8 that demonstrates the
principle one dimension lower. To any point @xmath in a fixed point set
@xmath we associate a plane @xmath in @xmath . That is, we map @xmath to
the unique plane @xmath tangent to the paraboloid @xmath at the point
@xmath . Lemma 2.10 shows that the set of planes @xmath completely
encodes the relative distances of points @xmath to points in @xmath .

###### Lemma 2.10

Let @xmath and let @xmath be the intersection of the vertical line
through @xmath and the plane @xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

An easy computation or [ Ed ] , Observation 13.3. ∎

Applying this result, we compute the Voronoi diagram @xmath as follows.
Let @xmath . Suppose that @xmath is in the interior @xmath of the
Voronoi cell @xmath . By Lemma 2.10 this is equivalent to @xmath being
the first hyperplane that one encounters from the set @xmath if one goes
downwards in negative vertical direction, starting from @xmath . But
this means that @xmath is exactly the projection of the boundary of the
upper envelope of the arrangement @xmath on @xmath .

We can connect the Delaunay triangulation @xmath of a point set @xmath
with the lower convex hull of a set @xmath . Meanwhile the Voronoi
diagram @xmath can be obtained from the upper envelope of an
arrangement. Remember that the Delaunay triangulation @xmath is dual to
the Voronoi diagram @xmath . By now it may not come as a surprise, that
there exists a duality transfer from lower convex hulls to upper
envelopes and vice versa. For more information consult [ Ed , BKOS ] .

## Chapter 3 A Voronoi poset.

Given a set @xmath of @xmath points in general position, we consider all
@xmath -th order Voronoi diagrams on @xmath , for @xmath ,
simultaneously. We recall symmetry relations for the number of cells,
number of vertices and number of circles of certain orders. We introduce
a poset @xmath that consists of the @xmath -th order Voronoi cells for
all @xmath , that occur for some set @xmath . We prove that there exists
a rank function on @xmath and moreover that the number of elements of
odd rank equals the number of elements of even rank of @xmath , provided
that @xmath is odd.

### 3.1 Introduction.

The dynamics of Voronoi diagrams in the plane is well understood. When
@xmath points are fixed and one point is moving continuously somewhere
inside the convex hull, combinatorial changes of the Voronoi diagram
correspond to changes in the configuration of empty circles, see
Chapter 1 and [ AGMR ] for example. Changes in the configuration of
non-empty circles correspond to combinatorial changes of higher order
Voronoi diagrams. Here the @xmath -th order Voronoi diagram associates
to each subset of size @xmath of generating sites that region in the
plane that consist of points closest to these @xmath sites.

We consider all @xmath -th order Voronoi diagrams simultaneously for
@xmath between @xmath and @xmath . We do so by introducing the Voronoi
poset @xmath of a set @xmath of @xmath distinct sites in the plane. The
poset consists of all sets of labels that correspond to a subset of
sites that defines some non-empty Voronoi cell in some @xmath -th order
Voronoi diagram.

Higher order Voronoi diagrams have been investigated by numerous people.
Many results are published in an article by D.T. Lee, see [ Le ] . A
survey is given in Edelsbrunners book on algorithms in combinatorial
geometry, see [ Ed ] . In Chapter 1 we have introduced @xmath -sets and
we have shown that there exists a map @xmath that changes the point
inside circle relation in @xmath into a point below hyperplane relation
in @xmath . It turns out that these circles containing points serve as a
‘building block’ for higher order Voronoi diagrams as we discuss in full
detail in Section 3.2 . As a consequence, formulas counting @xmath -sets
in @xmath can be applied in the counting of vertices, edges and cells of
higher order Voronoi diagrams. Instead of considering circles that
contain a fixed number of, say, @xmath points, one can also consider
circles that contain at most @xmath points. This is done in [ GHK ] .

Let @xmath be a set of @xmath points in @xmath in general position that
are the vertices of a convex polytope. Sharir, [ Sh ] , Lemma 4.4 and
Clarkson and Shor, [ CS ] , Theorem 3.5 prove that the number of @xmath
-sets of @xmath is given by @xmath . They prove this formula using
probabilistic methods that we do not discuss here.

This formula can also be derived in the context of @xmath -th order
Voronoi diagrams from Lee’s results as has been observed by several
people, see again Clarkson and Shor, [ CS ] or Andrzejak et al. , [
AAHSW ] . We give this derivation explicitly and state in Theorem 3.18
that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath denotes the number of circles defined by a set @xmath of
@xmath points in general position in the plane, containing exactly
@xmath points of @xmath . For an illustration, see Figure 3.1 . Moreover
we explicitly derive similar formulas for the number of cells @xmath in
the @xmath -th order Voronoi diagram @xmath , see Lemma 3.16 , and the
number of vertices @xmath , see Lemma 3.17 , in @xmath .

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

These ‘symmetry relations’ are independent of the particular position of
the sites in @xmath , provided @xmath is in general position: while the
number of cells in some @xmath -th order Voronoi diagram may change,
depending on the configuration, the sum of the number of cells in the
@xmath -th order diagram and the number of cells in the @xmath -th
diagram remains constant.

In Section 3.3 we introduce the Voronoi poset mentioned above and prove
that @xmath has a rank function. As an application of the symmetry
relations we prove in Theorem 3.24 that the number of elements of odd
rank in @xmath equals the number of even rank, provided that @xmath is
odd.

The Voronoi poset of a set @xmath of @xmath moving points seems a
natural object to study as changes of the poset occur exactly at those
moments where @xmath is not in general position. As there are tight
connections between higher order Voronoi diagrams, @xmath -levels in
certain arrangements in @xmath and certain @xmath -sets in @xmath , the
study of the Voronoi poset may have applications in these areas as well.

### 3.2 Higher order Voronoi diagrams.

#### 3.2.1 Definition of @xmath-th order Voronoi diagram.

Let @xmath be a set of @xmath distinct points in @xmath in general
position. Let @xmath . For every point @xmath in the plane we ask for
the @xmath nearest points from @xmath . That is, we look for a subset
@xmath , such that

  -- -------- --
     @xmath   
  -- -------- --

For two points in @xmath , we define a half-plane

  -- -------- --
     @xmath   
  -- -------- --

The Voronoi cell of @xmath of order @xmath is the intersection of
half-planes

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

whenever this intersection is not empty. As an intersection of
half-planes, @xmath is a convex polygon.

###### Remark 3.1

It is left as an exercise to the reader to show that assuming general
position implies that a Voronoi cell is not a line segment or a single
point.

The @xmath -th order Voronoi diagram is the subdivision of @xmath ,
induced by the set of Voronoi cells of order @xmath . For later
purposes, we identify the @xmath -th order Voronoi diagram with the set
of non empty @xmath -th order Voronoi cells.

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Example 3.2

Let @xmath . Figure 3.2 .a.  shows the first order Voronoi diagram. The
second order diagram is shown in Figure 3.2 .b. and the third order
diagram in Figure 3.2 .c. All non-empty Voronoi cells are indicated by
their generators. Note that not all possible triples occur.

###### Remark 3.3

A planar graph that represents a point-face dual of the @xmath -th order
Voronoi diagram can be constructed as follows, cf. [ AS ] . Write down
for every @xmath with @xmath and @xmath its centroid @xmath , defined by
@xmath . Two centroids @xmath and @xmath are connected by an edge
exactly iff @xmath and @xmath share an edge.

#### 3.2.2 Circles and higher order Voronoi diagrams.

In this section, we state some elementary properties of higher order
Voronoi diagrams. Every edge in @xmath is part of some bisector @xmath ,
with @xmath . The Voronoi vertices are exactly those points that are in
the centers of the circles determined by three points from @xmath .
Therefore, under our general position assumption, every Voronoi vertex
has valency three. The following theorem describes the local situation
around a Voronoi vertex. The symbol @xmath denotes the circle passing
through the points @xmath , @xmath , and @xmath .

###### Theorem 3.4

Let @xmath be the center of @xmath , for @xmath , let

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

and let @xmath . Then @xmath is a Voronoi vertex of @xmath and @xmath .
The Voronoi edges and cells that contain @xmath are given in Figure 3.3
. Moreover, all Voronoi vertices are of this form.

###### Proof..

[ De ] , Theorem 1 and Theorem 2. ∎

Let @xmath and @xmath be as defined in Theorem 3.4 . We define the order
of a circle @xmath as @xmath . Notation: @xmath . An order k Voronoi
circle @xmath is a circle through three points @xmath and @xmath from
@xmath that contains exactly @xmath points from @xmath . In fact, from
all @xmath Voronoi circles @xmath and all sets @xmath , compare Theorem
3.4 , almost enough information is provided to construct all @xmath -th
order Voronoi diagrams @xmath for @xmath .

###### Algorithm 3.5

Voronoi diagrams of all orders.

0: set @xmath of @xmath points in general position.

0: all @xmath -th order Voronoi diagrams @xmath for @xmath .

1: Compute all circles @xmath defined by @xmath .

2: Compute all sets @xmath defined by @xmath .

3: Take all circles of order @xmath and order @xmath . The centers of
these circles are exactly the vertices of @xmath .

4: Theorem 3.4 gives for every vertex the three incident edges and the
three incident cells.

5: Two vertices are connected by an edge iff the two vertices have two
incident cells in common. Skip the edge if it is used.

6: Edges that are not skipped are unbounded edges. Their direction and
orientation still have to be computed. The direction is simply the
direction of the bisector containing the edge. The orientation follows
from Figure 3.3 .

###### Remark 3.6

Denote the number of circles of order @xmath by @xmath and the number of
vertices in a @xmath -th order Voronoi diagram by @xmath . As a
consequence of Theorem 3.4 we get

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (3.1)
  -- -------- -------- -------- -- -------

#### 3.2.3 Counting vertices, edges and cells.

The following theorem shows that the total number of vertices, edges and
Voronoi cells does not depend on the positions of the points in @xmath ,
assuming general position.

###### Theorem 3.7

Let @xmath , @xmath , and @xmath denote the number of vertices, edges
and cells in @xmath for some set @xmath of size @xmath in general
position. The total number of vertices, edges and cells in the Voronoi
diagram of all orders are as follows.

-   @xmath @xmath @xmath .

-   @xmath @xmath @xmath .

-   @xmath @xmath @xmath .

###### Proof..

We prove the three claims.

-   Every circle center defined by three distinct sites from @xmath is a
    Voronoi vertex in some @xmath -th and @xmath -th order Voronoi
    diagram. As there are @xmath distinct circles, the first claim
    follows.

-   Consider the arrangement of bisectors @xmath . Fix one bisector
    @xmath . As @xmath is in general position, we may assume that the
    bisector @xmath is divided into @xmath line segments by the Voronoi
    circle centers @xmath , where we write @xmath . Every line segment
    is an edge in some @xmath -th order Voronoi diagram. As there are
    @xmath distinct bisectors, claim (ii) follows.

-   The Euler formula, @xmath , holds for every order. Therefore

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

    which completes the proof. ∎

The number of vertices, edges and cells in @xmath depends on the
configuration of @xmath as the ordinary Voronoi diagram shows. The
following theorem gives expressions for these numbers. Let @xmath denote
the number of unbounded cells in the @xmath -th order Voronoi diagram.
By definition @xmath .

###### Theorem 3.8

Let @xmath be in general position. Then the number of vertices, edges
and cells in the @xmath -th order Voronoi diagram can be expressed as
follows.

-   @xmath @xmath @xmath

-   @xmath @xmath @xmath

-   @xmath @xmath @xmath

###### Proof..

[ Ed , Le ] . ∎

Note that @xmath . Substituting @xmath in the expression for @xmath in
Theorem 3.8 yields the following equation for the total number of
unbounded cells:

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (3.2)
  -- -------- -------- -------- -- -------

The unbounded cells in the @xmath -th order Voronoi diagram can be
characterized as follows: let @xmath denote the line segment with
endpoints @xmath and @xmath and @xmath the line through @xmath and
@xmath .

###### Property 3.9

A cell @xmath of the @xmath -th order Voronoi diagram @xmath is
unbounded if and only if one of the following two conditions holds.

-    There exists a line @xmath that separates @xmath from @xmath .

-    There exist two consecutive points @xmath and @xmath , with @xmath
    , on @xmath such that the points in @xmath are in the open half
    plane defined by @xmath opposite to @xmath .

###### Proof..

[ OBS ] , Property OK4. ∎

Under the general position assumption, we only need to consider
condition (i) in Property 3.9 . It is clear that in this case the
following symmetry holds:

  -- -------- -- -------
     @xmath      (3.3)
  -- -------- -- -------

#### 3.2.4 Circle events and hull events.

In Section 2.3 we have discussed the type of a Voronoi diagram in
connection with circle events and convex hull events. We generalize
these notions to @xmath -th order Voronoi diagrams. Let @xmath be a set
of points in general position and fix some @xmath . As in [ Le ] we call
a Voronoi vertex of @xmath old if its corresponding circle has order
@xmath and new if its corresponding circle has order @xmath . We will
also use the words old and new to indicate order @xmath and order @xmath
circles with respect to @xmath .

###### Example 3.10

In the classic or first order diagram, vertices correspond with empty
circles, so all vertices are new.

Represent every vertex @xmath of @xmath as an ordered list of labels of
the points of @xmath on the @xmath or @xmath order Voronoi circle @xmath
corresponding to @xmath . Order the labels as in Definition 2.5 . The
type of a @xmath -th order Voronoi diagram @xmath consists of two lists:
a list of ordered labels of old vertices and a list of ordered labels of
new vertices.

###### Example 3.11

Consider the configuration in Figure 3.5 .a. The circles @xmath and
@xmath are empty, while the circles @xmath and @xmath both contain one
point. Therefore, the type of the second order Voronoi diagram is given
by: @xmath .

Suppose that the points in @xmath start moving. @xmath is in general
position, as long a no four points are cocircular and no three points
are collinear. If four points become cocircular, then two circles @xmath
and @xmath , both surrounding a subset @xmath of size @xmath , coincide
and change into two circles @xmath and @xmath , see Figure 2.4 . This
corresponds to a change of the Voronoi vertices @xmath and @xmath into
Voronoi vertices @xmath and @xmath in both @xmath and @xmath . This is
the generalization of a circle event and is called a @xmath -th order
circle event . So, a zero order circle event is just a circle event.

If three points become collinear, an order @xmath circle @xmath changes
into an order @xmath circle @xmath , see Figure 3.4 . This implies that
the vertex @xmath disappears in @xmath and @xmath and appears in @xmath
and @xmath . This is the generalization of a hull event and is called a
@xmath -th order hull event . So, a zero order hull event is just a hull
event. At a @xmath -th order circle event the type of @xmath and @xmath
changes. At a @xmath -th order hull event, the type of @xmath and @xmath
changes.

### 3.3 The Voronoi poset.

#### 3.3.1 Definition and examples.

Fix a labeling of the sites in @xmath and identify a set of sites @xmath
that defines a non-empty Voronoi cell @xmath with the set of labels
@xmath of the sites in @xmath . A subset @xmath of @xmath may or may not
correspond to some Voronoi cell @xmath . For @xmath we retain the
ordinary Voronoi diagram, which implies the correspondence

  -- -------- --
     @xmath   
  -- -------- --

We define @xmath . The set @xmath corresponds to @xmath . We consider
the set of all Voronoi cells that appear for a given set @xmath of
points and call the set of corresponding labels the Voronoi poset @xmath
of @xmath :

  -- -------- --
     @xmath   
  -- -------- --

This definition also makes sense when we drop the general position
assumption.

We order the elements in the poset by set inclusion of the sets @xmath .
This yields a partially ordered set. For more on partially ordered sets
consult [ Zi ] . The poset is bounded since we have the empty set as
@xmath , the unique minimal element, and the set @xmath as @xmath , the
unique maximal element. In general, a poset is called graded if it is
bounded and if every maximal chain has equal length. We show that @xmath
is graded. Below we give an example showing that @xmath is in general
not a lattice.

###### Property 3.12

@xmath is graded.

###### Proof..

We show that @xmath is a rank function for @xmath . A rank function maps
an element @xmath from a poset to a unique level in such a way that the
level corresponds to the length of any maximal chain from @xmath to
@xmath . Let @xmath , with @xmath . Every point @xmath has all @xmath
points from @xmath as its @xmath nearest neighbors. Order those points
with respect to their distance to @xmath . As we assumed general
position it is always possible to change the choice of @xmath in such a
way that this order is strict. By removing at each step the furthest
point still available, we obtain a chain of length @xmath that descends
to @xmath . ∎

We analyze the two smallest cases, assuming general position.

###### Example 3.13

For @xmath there is one poset, the full poset on @xmath . That is,

  -- -------- --
     @xmath   
  -- -------- --

###### Example 3.14

For @xmath there are two essentially distinct posets as is evident from
the circles defined by four points. Since @xmath , Voronoi circles are
of order one or two. Eulers formula rules out four circles of order one.
At the same time less than two circles would not yield enough cells in
the first order diagram.

Figure 3.5 .a has two empty Voronoi circles. Clearly, subset @xmath is
the only subset of @xmath missing, leaving us with :

  -- -------- --
     @xmath   
  -- -------- --

This example shows that the Voronoi poset is in general not a lattice. A
lattice requires that every two elements of the poset have a unique
minimal upper bound. In this example, the elements @xmath and @xmath
have two minimal upper bounds, namely @xmath and @xmath .

In Figure 3.5 .b. there are three empty Voronoi circles. The cell @xmath
cannot appear in the third order diagram, but all other subsets of
@xmath do appear, thus:

  -- -------- --
     @xmath   
  -- -------- --

#### 3.3.2 The order complex of the Voronoi poset.

The standard way to associate a topological space to a finite poset
@xmath is by means of the order complex @xmath of the poset, see [ Bj ,
Wa ] . The order complex is the simplicial complex of all nonempty
chains of @xmath . A chain of @xmath of length @xmath is a totally
ordered subset

  -- -------- --
     @xmath   
  -- -------- --

of elements @xmath . The well-known geometric realization associates a
topological space with a simplicial complex.

As a Voronoi poset on a set of @xmath points @xmath always has a unique
maximal element @xmath , the geometric realization of the order complex
is a cone and therefore contractible. This shows that the topological
space that we have associated with @xmath is homotopy equivalent with a
point, and therefore not very interesting.

More promising is to consider the complement, that is the anti Voronoi
poset @xmath , consisting of those subsets of @xmath that are not in the
Voronoi poset. Another possibility is to consider the arrangement of
bisectors.

### 3.4 Symmetry relations.

Given a set @xmath of sites, we count for every order @xmath the number
of vertices @xmath , the number of edges @xmath and the number of non
empty Voronoi cells @xmath . The @xmath -vector of @xmath is the vector
@xmath . The @xmath - and @xmath -vector are defined analogously. Note
that the @xmath -vector of @xmath may change if the position of the
sites in @xmath changes.

###### Example 3.15

Consider the two configurations @xmath and @xmath on four points,
presented in Example 3.14 . The @xmath -vector of @xmath equals @xmath ,
while the @xmath -vector of @xmath equals @xmath .

#### 3.4.1 Symmetry in the number of cells.

It turns out that a symmetry exists in the @xmath -vectors.

###### Lemma 3.16

Consider the @xmath -vector of @xmath , where @xmath . Then @xmath is a
constant independent of the position of the points in @xmath . More
precisely,

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (3.4)
  -- -------- -------- -------- -- -------

###### Proof..

We apply Theorem 3.8 to @xmath and @xmath :

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
                       @xmath   
              @xmath   @xmath   
  -- -------- -------- -------- --

We join the two sums by applying Symmetry Equation 3.3 . and evaluate
the result by using Equation 3.2 .

  -- -------- --
     @xmath   
  -- -------- --

The lemma follows from combining the two equations above. ∎

#### 3.4.2 Symmetry in the number of vertices.

A similar equation holds for the number of vertices of a collection of
Voronoi diagrams @xmath , for @xmath .

###### Lemma 3.17

Let @xmath be a set of points in general position with @xmath . Let
@xmath denote the number of vertices in the @xmath -th order Voronoi
diagram. Then:

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (3.5)
  -- -------- -------- -------- -- -------

###### Proof..

Using Theorem 3.8 we write @xmath in terms of numbers of cells. Next we
regroup and apply Symmetry Equation 3.3 . After applying Theorem 3.8 we
combine using symmetry again. Finally, using @xmath completes the proof.

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
              @xmath   
              @xmath   
              @xmath   
              @xmath   
  -- -------- -------- --

#### 3.4.3 Symmetry in the number of Voronoi circles.

Recall that the order of a Voronoi circle equals the number of points of
@xmath contained in its interior. We define the @xmath -vector of @xmath
as the vector

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath denotes the number of circles of order @xmath . The
following theorem states that for @xmath arbitrary points in general
position, the number of circles containing exactly @xmath points on
their inside plus the number of circles containing exactly @xmath points
on their outside is constant. We prove this by applying the above
results.

###### Theorem 3.18

Consider the @xmath -vector of @xmath , where @xmath . Then @xmath is a
constant independent of the position of the points in @xmath . More
precisely,

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
              @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

We prove the theorem by induction.

[i=0]. We use the lifting transformation . This transformation changes
the point-inside-circle relation in 2-dimensional space in a
point-below-plane relation in 3-dimensional space. See also Section
2.5.1 . The lifting transformation map @xmath is defined by

  -- -------- --
     @xmath   
  -- -------- --

It lifts points in the plane to the unit paraboloid in three-space. As
every circle defined by @xmath in the plane contains only three points
from @xmath , every hyperplane defined by @xmath contains only three
points from @xmath as well. The number @xmath of empty circles of @xmath
in the plane equals the number of facets of the lower hull of @xmath in
three dimensions. At the same time, the number @xmath of circles that
contain all other points of @xmath equals the number of facets of the
upper hull of @xmath . All images of points in @xmath under @xmath are
part of the convex hull of @xmath . Since the convex hull of a point set
of @xmath points consists of @xmath facets, if every facet is a
triangle, see [ BKOS ] , Theorem 11.1, the claim follows.

[induction step]. We deduce the expression for @xmath by applying
Equation 3.1 , followed by combining Lemma 3.17 and the induction
hypothesis:

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
              @xmath   
              @xmath   
              @xmath   
  -- -------- -------- --

Let @xmath and @xmath . By the reduced @xmath -vector , denoted @xmath ,
we mean the vector of @xmath ’s for all distinct @xmath . That is

  -- -------- --
     @xmath   
  -- -------- --

@xmath is defined similarly. As a consequence of Lemma 3.16 and Theorem
3.18 , @xmath and @xmath are only dependent on @xmath .

###### Example 3.19

As an example we present the reduced @xmath - and @xmath -vectors for
@xmath .

  n    @xmath                     @xmath
  ---- -------------------------- ----------------------
  3    (4, 6)                     (2)
  4    (5, 9)                     (4)
  5    (6, 12, 14)                (6, 8)
  6    (7, 15, 19)                (8, 12)
  7    (8, 18, 24, 26)            (10, 16, 18)
  8    (9, 21, 29, 33)            (12, 20, 24)
  9    (10, 24, 34, 40, 42)       (14, 24, 30, 32)
  10   (11, 27, 39, 47, 51)       (16, 28, 36, 40)
  11   (12, 30, 44, 54, 60, 62)   (18, 32, 42, 48, 50)
  12   (13, 33, 49, 61, 69, 73)   (20, 36, 48, 56, 60)

###### Remark 3.20

Computer calculations did not suggest any similar symmetry relation for
the number of edges.

#### 3.4.4 Relations between cells and circles.

###### Corollary 3.21

@xmath = @xmath = @xmath .

###### Proof..

This follows directly from Lemma 3.16 and Theorem 3.18 . ∎

###### Property 3.22

Let @xmath denote the number of unbounded cells in the @xmath -th order
diagram and let @xmath denote the number of circles of order @xmath :

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (3.7)
  -- -------- -------- -------- -- -------

###### Proof..

We prove the property by induction.

[i=1] @xmath is zero by definition. The number of vertices @xmath in the
first order Voronoi diagram equals the number of circles of order zero,
@xmath . The claim follows from applying Theorem 3.8 :

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
              @xmath   
  -- -------- -------- --

[induction step] Assume we have proved that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

We rewrite this, by using induction, as

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (3.8)
  -- -------- -------- -------- -- -------

Evaluate @xmath :

  -- -------- -------- -- -------
     @xmath   @xmath      (3.9)
              @xmath      
              @xmath      
  -- -------- -------- -- -------

Substituting this expression for @xmath and applying Theorem 3.8 and
Equation 3.8 proves the claim:

  -- -------- -------- --
     @xmath   @xmath   
              @xmath   
  -- -------- -------- --

###### Corollary 3.23

The @xmath -vector totally determines the @xmath -vector. The
correspondence is given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

Applying Equation 3.7 we get

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The claim follows from evaluating Theorem 3.8 using the expression
above. ∎

### 3.5 Even versus odd order cells.

Given a grading on a set of objects, it is common to consider the
Poincaré polynomial @xmath of the grading. The @xmath -th coefficient of
this polynomial equals the number of objects of grade @xmath . In our
case, the objects are the elements of the Voronoi poset @xmath , while
the grading is given by the rank function on the poset. Recall that the
rank of an element @xmath in @xmath is just the order @xmath of the
Voronoi diagram in which @xmath occurs as a cell. The @xmath -th
coefficient of the Poincaré polynomial @xmath is given by @xmath , as
@xmath gives the number of cells in the @xmath -th order diagram @xmath
. So, the Poincaré polynomial @xmath of @xmath with respect to our rank
function is given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

As an application of the symmetry relations we compare the number of
cells in the even order Voronoi diagrams with the number of cells in the
odd order diagrams. In terms of the Poincaré polynomial @xmath of above,
the following result can also be formulated as

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Theorem 3.24

Let @xmath be a set of points in general position with @xmath . Assume
@xmath is odd. In this case, the number of cells in the even order
Voronoi diagrams equals the number of cells in the odd order Voronoi
diagrams.

###### Proof..

Write @xmath . We show that @xmath , where:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

So @xmath is the number of cells in the odd order diagrams minus the
number of cells in the even order diagrams:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Clearly, @xmath , as @xmath counts the empty set. @xmath is the number
of points in @xmath plus the number of cells in @xmath , so @xmath .
Applying Equation 3.4 gives:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Straightforward calculations show that:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

from which it follows that:

  -- -------- --
     @xmath   
  -- -------- --

The claim of Theorem 3.24 does not hold when @xmath is even. However,
the following result does hold.

###### Lemma 3.25

Let @xmath be a set of points in general position, with @xmath . Assume
@xmath is even. Let @xmath denote the number of cells in the odd order
Voronoi diagrams minus the number of cells in the even order diagram.
Then:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

Similar computations as in the proof of Theorem 3.24 . ∎

Note that as @xmath it follows immediately that:

  -- -------- --
     @xmath   
  -- -------- --

for all @xmath , where @xmath denotes the number of vertices in the
@xmath -th order Voronoi diagram.

## Chapter 4 Limits of Voronoi diagrams.

The Voronoi diagram of a set @xmath of @xmath distinct points in @xmath
associates to a point @xmath that part of the plane that is closer to
@xmath than to any other point in @xmath . In this chapter we assume
that the position of any of the @xmath points in @xmath is given by a
pair of polynomials in one parameter @xmath , such that no two points
are represented by the same pair of polynomials. We call the elements of
@xmath polynomial sites. In this setup it is possible that sites
coincide at, say, @xmath . We define a Voronoi diagram @xmath . That is,
@xmath is defined as a limit diagram in a particular sense of the
ordinary Voronoi diagram of the positions, at small positive @xmath , of
the polynomial sites. We show how to extend the notion of type to
polynomial sites. This enables us to determine the combinatorics of
@xmath . It turns out that in general some sites can be omitted without
changing the boundary of the Voronoi diagram @xmath . We characterize
those sites that can not be omitted and present an efficient algorithm
to determine these sites together with the boundary of the Voronoi
diagram.

### 4.1 Introduction.

Whenever Voronoi diagrams are studied, it is assumed that all points
defining the diagram are distinct. We call these points sites. In the
case of dynamic Voronoi diagrams, where the sites are moving
continuously over time, the assumption above means that sites are not
allowed to coincide at any moment. In this chapter we investigate in one
particular setting what happens when we do allow sites to coincide in
the plane.

We consider a set

  -- -------- --
     @xmath   
  -- -------- --

of @xmath sites in the plane such that the position of site @xmath at
time @xmath is given by a pair of polynomials in @xmath , one for every
coordinate. That is, both the movement of the @xmath - and the @xmath
-component are described by a polynomial in @xmath .

In fact we do not have to restrict ourselves to sites described by pairs
of polynomials: the theory developed in this chapter works whenever the
movement of both the @xmath - and @xmath -component of all sites is
described by functions that can be expanded as a convergent Taylor
series. For the sake of simplicity we restrict ourselves to polynomials
however.

In Chapter 1 we have described the Voronoi diagram of a set of distinct
sites both in terms of half-planes and of empty circles. To check
whether some point @xmath is in a given half-plane @xmath or inside a
circle @xmath for @xmath boils down to evaluating the sign of an easy
polynomial expression @xmath or @xmath . The main idea of this chapter
is to replace @xmath for @xmath and @xmath by @xmath and to evaluate the
sign of the coefficient of the lowest degree term in @xmath and @xmath ,
at @xmath . In this way we define a Voronoi diagram @xmath at @xmath ,
even if sites do coincide at @xmath . For a set of sites that coincide
at @xmath we regard @xmath as the limit diagram @xmath . We develop this
arithmetic for polynomial sites in all details in Section 4.2 .

Here we add a warning: we can define a limit Voronoi diagram at @xmath
that is consistent with small positive @xmath or small negative @xmath .
In general these two approaches give distinct results. Examples will be
presented in the main text of this chapter.

There is a similarity between our approach and a well-known technique in
computational geometry that is used to avoid computations involving
degenerate input. In this technique, a set of distinct points that is
not in general position is perturbed slightly in such a way that it is
in general position after perturbation. For example, three points that
are collinear before perturbation will not be collinear anymore after
perturbation. As a consequence it is possible for a generic algorithm,
that is, an algorithm that can only handle points in general position,
to handle the input and compute the wished geometric structure, e.g. a
Voronoi diagram. Such generic algorithms are in general much easier than
algorithms for arbitrary input as a lot of degenerated cases can be
ignored. In the so-called Simulation of Simplicity technique, cf. [ EM ,
Ed2 ] , polynomials in the variable @xmath are added to points of a set
of distinct, degenerated points in such a way that evaluation of the new
points for small enough @xmath produces a point set that is in general
position. An overview on robust geometric computation is given in [ Ya ]
.

In Section 4.3 we extend the definition of type, see Definition 2.5 , to
a set of polynomial sites @xmath at @xmath , provided that @xmath
fulfills some general position assumptions. This type gives us a
complete combinatorial structure that matches with the combinatorial
structure of the Voronoi diagram @xmath for small enough positive @xmath
.

In Section 4.4 we define a Voronoi diagram for @xmath not necessarily
distinct points in the plane and @xmath angles between those points. We
apply this definition to introduce Voronoi diagrams for a set of
polynomial sites @xmath at @xmath . The resulting Voronoi diagram or
polynomial sites matches with the ordinary Voronoi diagram of the
positions of the sites at small positive @xmath . In this section we
also give the connection between half-planes and Voronoi circles defined
by @xmath at @xmath , thereby connecting the notion of type to
polynomial sites diagrams.

The shape of a Voronoi diagram is defined as the union of the boundaries
of the Voronoi cells. It turns out that in general some sites in a set
@xmath of polynomial sites can be omitted without changing the shape of
the Voronoi diagram of @xmath . A question that we pose is how to
determine this shape efficiently and how to characterize those sites
that do determine the shape. We answer this question by splitting up the
problem into two parts.

First we consider in Section 4.5 the shape of the Voronoi diagram of one
cluster of polynomial sites at @xmath . By an @xmath -cluster we mean a
set of polynomial sites such that the positions of all sites coincide at
one location @xmath at @xmath . Lemma 4.35 fully classifies the sites
@xmath in the cluster such that @xmath at @xmath .

The second part of the question is solved by Lemma 4.41 . This lemma
states that the shape of the Voronoi diagram at @xmath of an arbitrary
set of polynomial sites can be found as follows. First, compute the
ordinary Voronoi diagram of all distinct locations at @xmath . Second,
plug in the cell of location @xmath , the shape of the Voronoi diagram
of the @xmath -cluster.

Section 4.6 shows that a lot of combinatorics can be hidden in the edges
of the shape of the Voronoi diagram. In Section 4.7 we demonstrate the
theory developed in the former section by a somewhat bigger example. We
conclude this chapter in Section 4.9 with some remarks on
generalizations to @xmath -th order Voronoi diagrams and shortcomings of
this setup.

### 4.2 Preliminaries.

We define half-planes and circles for polynomial sites. A polynomial
site @xmath consists of a pair of polynomials @xmath . Two polynomial
sites @xmath and @xmath are called distinct if they represent distinct
elements in @xmath . Throughout this section assume that @xmath , where
every @xmath a polynomial site and @xmath distinct from @xmath as a
polynomial site whenever @xmath .

###### Remark 4.1

The notions in this section are introduced so that they match the
situation for ordinary points in the plane obtained by substituting a
very small positive value of @xmath in the set @xmath of polynomial
sites.

#### 4.2.1 Polynomial lines and their directions.

Let @xmath and @xmath be two distinct polynomial sites. The polynomial
line @xmath is defined by

  -- -------- --
     @xmath   
  -- -------- --

The ruling coefficient @xmath of a polynomial @xmath is the coefficient
in its lowest degree term. The ruling sign @xmath is the sign of the
ruling coefficient @xmath . We define the direction @xmath of the
polynomial line @xmath at @xmath as the argument of the point

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath . Note that @xmath is determined up to multiples of @xmath
. We often use that value of @xmath that lives in @xmath .

###### Example 4.2

Let @xmath and @xmath . Then @xmath . Putting @xmath equal to zero
yields an ordinary line for every @xmath . As @xmath , we have @xmath .
The direction of @xmath at @xmath is given by @xmath , however, as the
ruling sign @xmath equals @xmath .

###### Remark 4.3

Note that this definition of @xmath indeed matches with the direction of
the directed line that passes first through @xmath and then through
@xmath for small positive @xmath . For a definition that would match
with small negative @xmath , we should take into account the odness or
evenness of the power of the lowest degree term of @xmath .

###### Example 4.4

Let @xmath and @xmath be as in Example 4.2 . For small negative @xmath ,
the direction of the line @xmath that passes first through @xmath and
then through @xmath is close to @xmath . If we multiply both @xmath and
@xmath by @xmath , that is change @xmath into @xmath and @xmath into
@xmath , then the direction of @xmath for small negative @xmath and for
small positive @xmath both are close to @xmath .

#### 4.2.2 Collinearity.

Let @xmath and @xmath be three polynomial sites. As long as the sites do
not coincide we can analyze whether they are collinear. Consider the
determinant @xmath given by

  -- -------- --
     @xmath   
  -- -------- --

We call the three sites collinear if @xmath is the null polynomial.
Otherwise let @xmath denote the ruling sign of @xmath . If @xmath , we
say that @xmath is on the left of the polynomial line @xmath at @xmath ,
and if @xmath , we say that @xmath is on the right .

###### Example 4.5

@xmath , @xmath , @xmath . Then @xmath , so @xmath @xmath and @xmath are
collinear at @xmath .

###### Example 4.6

Change @xmath to @xmath . Now @xmath , so @xmath is on the left of the
polynomial line @xmath at @xmath .

###### Example 4.7

For small negative @xmath , the site @xmath is on the right of @xmath .
If we change @xmath into @xmath , then @xmath is on the left of @xmath
for small negative @xmath while it is still on the right for small
positive @xmath .

#### 4.2.3 The center of a circle.

Let @xmath , @xmath , and @xmath be polynomial sites such that @xmath ,
@xmath , and @xmath are not collinear at @xmath . Let @xmath be the
determinant of above and let @xmath , and @xmath be the determinants
given by

  -- -------- --
     @xmath   
  -- -------- --

We define the circle center of @xmath , @xmath , and @xmath at @xmath as
the point @xmath given by the coordinates

  -- -------- --
     @xmath   
  -- -------- --

We allow a circle center to be located at infinity. When leaving out the
time dependency, these are of course the ordinary formulas describing a
circle center. The circle @xmath is oriented clockwise at @xmath iff
@xmath is on the right of @xmath at @xmath . If @xmath is on the left of
@xmath at @xmath , then @xmath is oriented counterclockwise .

If @xmath , then we say that the circle defined by @xmath , @xmath and
@xmath has positive radius at @xmath if and only if

  -- -------- -- -------
     @xmath      (4.1)
  -- -------- -- -------

###### Example 4.8

Let again @xmath , @xmath , and @xmath . Then @xmath and @xmath . So
@xmath and we can conclude that @xmath and @xmath define a circle of
positive radius at @xmath . As @xmath is on the left of @xmath at @xmath
, the circle @xmath is oriented counterclockwise at @xmath .

###### Example 4.9

Let @xmath , @xmath , and @xmath . Then @xmath is oriented clockwise at
@xmath , while the circle center @xmath of @xmath is situated at
infinity.

#### 4.2.4 Cocircularity.

Let @xmath , @xmath , and @xmath be distinct polynomial sites. Assume
that at @xmath the sites @xmath , @xmath , and @xmath are not collinear
and that the circle @xmath is oriented clockwise. As long as the sites
do not coincide, we can analyze if a fourth polynomial site @xmath is
inside or outside of the circle defined by @xmath , @xmath , and @xmath
. Consider the polynomial @xmath defined by

  -- -- --
        
  -- -- --

We call the four sites cocircular at @xmath if @xmath is the null
polynomial. Let otherwise @xmath denote the ruling sign of @xmath . If
@xmath , we say that @xmath is outside of the polynomial circle @xmath
at @xmath , and if @xmath , we say that @xmath is inside the circle. A
set of polynomial sites @xmath is in general position at @xmath , iff no
three sites are collinear at @xmath and no four sites are cocircular at
@xmath .

###### Example 4.10

Let @xmath , @xmath , and @xmath be as in Example 4.8 . Let @xmath . We
check whether @xmath is inside or outside of the clockwise oriented
circle @xmath at @xmath . As @xmath , we conclude that @xmath is outside
of @xmath at @xmath .

###### Remark 4.11

For small negative @xmath , the circle @xmath is oriented
counterclockwise. So the orientation swaps at @xmath . The site @xmath
is inside the clockwise oriented circle @xmath for small negative @xmath
.

#### 4.2.5 Ordering the sites.

The lexicographic ordering for polynomial sites is as follows. Let
@xmath and @xmath be two polynomial sites. First consider the
polynomials @xmath and @xmath that give the @xmath -component. If @xmath
, order @xmath and @xmath according to the coefficients of the term of
lowest degree of @xmath and @xmath that are distinct. If @xmath , then
compare the coefficients of lowest degree that are distinct of @xmath
and @xmath . We denote this ordering by @xmath .

###### Example 4.12

Let @xmath and @xmath . The first order coefficient of @xmath equals
@xmath while the first order coefficient of @xmath equals @xmath . As
this is the lowest order coefficient of @xmath and @xmath that is
distinct, it follows that @xmath with respect to @xmath .

### 4.3 The type of a set of polynomial sites.

Let @xmath be a list of distinct polynomial sites that is in general
position at @xmath . A clockwise polynomial circle @xmath with @xmath ,
@xmath , and @xmath in @xmath is a Voronoi circle at @xmath iff there
are no polynomial sites from @xmath inside @xmath at @xmath . Represent
a Voronoi circle @xmath by the ordered list of labels of the polynomial
sites @xmath , @xmath , and @xmath that define @xmath . The order of the
labels corresponds to the cyclic, clockwise order of the defining sites
on @xmath at @xmath , compare with Section 4.2.3 . The set of all these
lists is the type of @xmath at @xmath .

###### Example 4.13

Let @xmath be the set of polynomial sites given by

  -- -------- --
     @xmath   
  -- -------- --

The relative position of the sites at @xmath is shown in Figure 4.1 .
The set @xmath defines at @xmath the clockwise oriented circles @xmath
and @xmath , where we list only the labels. The polynomial site @xmath
is inside the circle @xmath at @xmath , while the other circles are
empty at @xmath . Therefore the type of @xmath is given by @xmath .

###### Remark 4.14

Note that this definition of type again represents the situation for
small positive @xmath . This is because the type is defined in terms of
the ‘inside circle relation’, compare Section 4.2.4 .

#### 4.3.1 Abstract Delaunay graph.

The notion of type enables us to define an abstract Delaunay graph
@xmath of @xmath at @xmath . In fact, we use Lemma 2.7 as a definition
for @xmath . The vertices of @xmath at @xmath are the labels occurring
in the type. Two labels are connected by an edge if both occur in the
same Voronoi circle at @xmath . Note that the closed paths of length
three in @xmath correspond with the Voronoi circles at @xmath . The
multiplicity of an edge is the number of distinct Voronoi circles that
contain both the vertices incident to the edge.

###### Example 4.15

Consider the type at @xmath of the set of polynomial sites from Example
4.13 . It defines a abstract Delaunay graph @xmath with vertex set
@xmath and edge set @xmath . The multiplicities of the edges @xmath ,
@xmath , and @xmath equal one, those of the other edges equal two.
Compare this to the Delaunay triangulation shown in Figure 4.1 .

###### Property 4.16

Let @xmath and @xmath be two distinct sites of @xmath .

-    If @xmath forms an edge of the convex hull @xmath for small enough
    positive @xmath , then the multiplicity of the edge @xmath in @xmath
    equals one at @xmath .

-    If @xmath forms an edge of the Delaunay triangulation @xmath but
    not of @xmath for small enough positive @xmath , then the
    multiplicity of the edge @xmath in @xmath equals two at @xmath .

###### Proof..

Combine the definition of type and Lemma 2.3 . ∎

#### 4.3.2 Combinatorial convex hull.

The convex hull of a set of distinct points in the plane can be defined
as an intersection of half-planes, see Section 2.1 . But if a set of
sites shrinks to one point, the convex hull of the sites also shrinks to
one point. However, we can define a combinatorial convex hull of a set
of polynomial sites at @xmath by making use of half-planes.

Let @xmath be a set of distinct sites in general position. It is not
necessary that all sites coincide in @xmath at @xmath . Some @xmath is a
vertex of the combinatorial convex hull @xmath of @xmath at @xmath if
there exists a polynomial site @xmath such that all sites @xmath with
@xmath are on the right of the polynomial line @xmath at @xmath . We
call such a line a bounding line . Two vertices @xmath and @xmath are
connected by a directed edge , notation @xmath , iff @xmath is a
bounding line of @xmath at @xmath .

###### Property 4.17

Let @xmath be a set of distinct polynomial sites @xmath in general
position. @xmath denotes the combinatorial convex hull @xmath at @xmath
. Let @xmath and @xmath .

-   @xmath is an abstract directed circuit graph.

-    The edges of @xmath are exactly the edges of multiplicity @xmath of
    the abstract Delaunay graph @xmath at @xmath .

-    The direction of an edge @xmath of @xmath equals @xmath iff the
    Voronoi circle containing both @xmath and @xmath is oriented like
    @xmath .

###### Proof..

We prove the claims separately.

-   A circuit graph is a connected graph that is regular of degree two.
    For @xmath positive, small enough, the boundary of @xmath is an
    oriented polygon where the vertices have the same labels as the
    vertices of @xmath at @xmath . The polygon is oriented so that all
    points of @xmath not lying on an edge @xmath of @xmath are on the
    right of the directed line defined by @xmath and @xmath that passes
    first through @xmath . This orientation and the connectedness are
    inherited when @xmath vanishes.

-   This follows from Property 4.16 .

-   If @xmath is the clockwise orientation of the Voronoi circle defined
    by @xmath , @xmath , and @xmath , then @xmath is on the right of
    @xmath at @xmath . ∎

###### Example 4.18

Consider the ordered set @xmath of polynomial sites introduced in
Example 4.6 . As @xmath is on the left of @xmath at @xmath , the
combinatorial convex hull @xmath of @xmath at @xmath is given by @xmath
.

###### Example 4.19

Let @xmath as in Example 4.13 . Then @xmath at @xmath equals @xmath .

### 4.4 The Voronoi diagram of a set of points and angles between the
points.

In this section we define the Voronoi diagram of a set of points and
angles between the points. This enables us to introduce a Voronoi
diagram for a set of polynomial sites. Moreover, we connect the notions
of polynomial lines and polynomial circles in the context of Voronoi
diagrams.

#### 4.4.1 Definition.

Suppose @xmath is a set of @xmath not-necessarily distinct points in the
plane. To every pair of points @xmath we add an angle @xmath such that
the following rule holds: if two points @xmath and @xmath are distinct
then there is a unique line though @xmath and @xmath that makes some
angle @xmath with the @xmath -axis, directed from @xmath to @xmath ; if
@xmath and @xmath do coincide then we allow every value in @xmath for
@xmath .

Let @xmath be a set of @xmath points @xmath and @xmath angles @xmath
that obey aboves rule. Fix two points @xmath and @xmath . The bisection
point @xmath is the point @xmath . If @xmath , the bisection point is
just the middle of the line segment @xmath . If @xmath then @xmath
coincides with the double point @xmath . The perpendicular bisector
@xmath is the line through @xmath perpendicular to the angle @xmath .
Let @xmath be any non-zero vector, pointing in the direction @xmath .
The Voronoi half-plane @xmath is the half-plane defined by

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (4.2)
  -- -------- -------- -------- -- -------

The Voronoi cell @xmath is defined as

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

A point @xmath is on the Voronoi edge @xmath iff it is on the
intersection of the Voronoi cells @xmath and @xmath , that is

  -- -------- -- -------- --
     @xmath      @xmath   
  -- -------- -- -------- --

The Voronoi diagram is the family of subsets of @xmath consisting of the
Voronoi cells @xmath and all of their intersections. The shape or
boundary of the Voronoi diagram is the union of the boundaries of the
Voronoi cells.

###### Remark 4.20

We will always use this definition in a geometric context which imposes
restrictions on the angles @xmath .

###### Remark 4.21

We show how to get Equation 4.2 . The line given by @xmath defines the
line through the origin that is perpendicular to @xmath . We have to
translate this line over the bisection point in order to get the
bisector @xmath . As @xmath , the Voronoi half-plane @xmath is the
half-plane bounded by the line @xmath in the direction of the tail of
@xmath .

###### Remark 4.22

Taking for @xmath the vector @xmath of length @xmath in the direction
@xmath gives the inequality @xmath for the Voronoi half-plane @xmath .

#### 4.4.2 The Voronoi diagram of a set of polynomial sites.

Let @xmath be a set of polynomial sites that is in general position at
@xmath . The angle @xmath for any two sites @xmath and @xmath is just
the direction @xmath as defined in Section 4.2 . We define the Voronoi
diagram of the set of polynomial sites at @xmath as the Voronoi diagram
of the points @xmath and the angles @xmath .

###### Remark 4.23

At this stage, we do not define Voronoi vertices: if a Voronoi vertex is
defined as an intersection of three Voronoi half-planes, it can become a
complete line, compare Example 4.26 .

###### Example 4.24

Let @xmath be the set of polynomial sites, introduced in Example 4.13 .
In Table 4.1 we list the Voronoi half-planes, the directions of the
bisectors that bound the half-planes, and the inequalities defining the
half-planes. This results in the Voronoi diagram @xmath , depicted in
Figure 4.2 . The Voronoi regions @xmath and @xmath all have positive
area, while @xmath . This shows that the shape of the Voronoi diagram of
@xmath , @xmath , @xmath , and @xmath equals the shape of the diagram of
@xmath , @xmath , and @xmath , with @xmath omitted.

###### Remark 4.25

Given the particular sites in Example 4.24 , it is easy to check that
the picture of the Voronoi diagram for small negative values of @xmath
is close to the image under the point reflection in @xmath of the
picture in Figure 4.2 .

###### Example 4.26

Let @xmath be the set of polynomial sites of Example 4.6 and Example 4.8
, that is, @xmath , @xmath , and @xmath . Then @xmath is given by @xmath
, the half-plane @xmath by @xmath , and @xmath by @xmath as well.
Therefore, @xmath is just the line @xmath , while @xmath is given by
@xmath , and @xmath by @xmath , all at @xmath .

#### 4.4.3 Polynomial bisector.

Let @xmath and @xmath be two distinct polynomial sites. We have
introduced the bisector of @xmath and @xmath at @xmath as the line
passing through the bisection point @xmath and perpendicular to the
direction @xmath . We can derive directly an equation @xmath for the
bisector depending on @xmath as follows. We construct two polynomial
sites @xmath and @xmath that lie on the ordinary bisector for every
@xmath . The point @xmath is just the bisection point @xmath . The other
point @xmath is the image of @xmath under the @xmath rotation around
@xmath , that is,

  -- -------- --
     @xmath   
  -- -------- --

Finally, put @xmath . We call @xmath the polynomial bisector of @xmath
and @xmath .

###### Lemma 4.27

Let @xmath and @xmath be two polynomial sites. Let @xmath be the
perpendicular bisector of @xmath and @xmath at @xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

By construction, the direction of @xmath at @xmath is perpendicular to
@xmath . As @xmath and @xmath both pass through the bisection point
@xmath , the two lines coincide. ∎

###### Example 4.28

Let @xmath be as in Example 4.26 . The polynomial bisector @xmath is
given by

  -- -------- --
     @xmath   
  -- -------- --

while

  -- -------- --
     @xmath   
  -- -------- --

#### 4.4.4 Half-planes and Voronoi circles.

Let @xmath be a set of polynomial sites that is in general position at
@xmath . In Section 4.4.1 we have introduced the Voronoi diagram @xmath
of @xmath by means of half-planes, while in Section 4.3 we have defined
the type of @xmath at @xmath in terms of Voronoi circles. The following
lemma gives a connection between polynomial bisectors and circle
centers.

###### Lemma 4.29

Suppose that @xmath , @xmath , and @xmath are distinct non-collinear
polynomial sites. Denote by @xmath the circle center of @xmath , @xmath
, and @xmath at @xmath . Let @xmath be the polynomial bisector of @xmath
and @xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

For @xmath positive and small enough, @xmath , @xmath , and @xmath are
distinct points in general position. For such points Lemma 2.4 states
that the intersection of the bisectors of the points is the center of
the circle defined by the points. But then it holds for @xmath as well.
∎

Now we are able to define a Voronoi vertex so that a vertex is exactly
one point in the plane, compare with Remark 4.23 . Let @xmath , @xmath ,
and @xmath be distinct non-collinear polynomial sites. Let @xmath be the
clockwise oriented polynomial circle through @xmath , @xmath , and
@xmath at @xmath . Let @xmath be the circle center of @xmath , @xmath ,
and @xmath at @xmath . Then @xmath is a Voronoi vertex @xmath at @xmath
if @xmath is a Voronoi circle at @xmath .

Let @xmath , @xmath , and @xmath be distinct polynomial sites that
coincide in @xmath at @xmath . Then the circle center of @xmath , @xmath
, and @xmath is not equal to @xmath only for special configurations.

###### Lemma 4.30

Let @xmath , @xmath , and @xmath be distinct polynomial sites that
coincide in @xmath at @xmath . If @xmath or @xmath , then the circle
center @xmath of @xmath , @xmath , and @xmath at @xmath equals @xmath .

###### Proof..

We may assume without loss of generality that @xmath . Lemma 4.29 states
that @xmath . From Lemma 4.27 it follows that @xmath at @xmath . But
then @xmath is the unique intersection point @xmath of two non-parallel
lines @xmath and @xmath . ∎

###### Example 4.31

Let @xmath , @xmath , and @xmath . In Example 4.8 we have shown that
@xmath , @xmath , and @xmath define a circle with center @xmath at
@xmath . We did so by evaluating the determinants @xmath , @xmath , and
@xmath introduced in Section 4.2.3 . Alternatively, we can compute
@xmath as an intersection of two bisectors, say @xmath and @xmath . This
gives:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
              @xmath   @xmath   
              @xmath   @xmath   
  -- -------- -------- -------- --

So @xmath as expected. We have already computed the equations for the
two bisectors in Example 4.28 .

### 4.5 The positive area cells for one cluster.

In this section we assume we have a set @xmath of polynomial sites that
all coincide in the origin at @xmath . We show that in general some
sites can be omitted without changing the shape of the Voronoi diagram
of @xmath . We characterize those sites that determine this shape and
present an efficient algorithm to compute the shape of the Voronoi
diagram.

#### 4.5.1 The direction hull and positive area cells.

A zero cluster at @xmath is a set @xmath of polynomial sites in general
position such that @xmath for every site @xmath in @xmath . We want to
know the shape of the Voronoi diagram of a zero cluster. For this
purpose it is enough to determine the boundary of the Voronoi cells of
positive area at @xmath .

Assume that @xmath is a zero cluster at @xmath . Fix some site @xmath in
the combinatorial convex hull @xmath at @xmath . There is one incoming
edge and one outgoing edge in @xmath at @xmath at @xmath . Suppose the
incoming edge comes from @xmath , while the outgoing edges goes to
@xmath . Site @xmath is called a corner site of @xmath at @xmath if the
direction of the incoming edge is distinct from the direction of the
outgoing edge, that is, if @xmath . The corner sites of @xmath at @xmath
are by definition the vertices of the direction hull @xmath at @xmath .
Two vertices @xmath and @xmath are connected by a directed edge @xmath
if there are no corner sites on the path from @xmath to @xmath in @xmath
.

###### Example 4.32

Let @xmath be as introduced in Example 4.13 . From Example 4.18 we know
that @xmath equals @xmath . Compare Table 4.1 . The directions @xmath ,
@xmath and @xmath are all distinct. It follows that @xmath at @xmath .

###### Example 4.33

Let @xmath with @xmath , @xmath , and @xmath . Then @xmath , while
@xmath , as @xmath .

###### Lemma 4.34

Let @xmath be a zero cluster at @xmath . Then any bisector @xmath passes
through @xmath at @xmath .

###### Proof..

The bisector @xmath passes through the bisection point @xmath at @xmath
. ∎

###### Lemma 4.35

Let @xmath be a zero cluster at @xmath . Then @xmath has positive area
if and only if @xmath .

###### Proof..

Assume that @xmath . As @xmath , it follows that @xmath for @xmath ,
small enough. That means that there exists @xmath such that for all
@xmath the Voronoi cell @xmath is unbounded. Moreover, @xmath is
incident with two edges @xmath and @xmath , say, that are unbounded for
all @xmath . But this implies that these edges are unbounded at @xmath
as well. The sites @xmath and @xmath are the direct predecessor and
direct successor of @xmath on @xmath . As @xmath , the directions @xmath
and @xmath are distinct at @xmath . But this implies that @xmath has two
unbounded edges of distinct direction on its boundary and by the
convexity of @xmath this implies that @xmath has positive area.

For the other direction, assume that @xmath has positive area at @xmath
. It follows from Lemma 4.34 that @xmath is unbounded, and therefore has
two unbounded edges on its boundary of distinct direction. This implies
that @xmath at @xmath . ∎

The Voronoi diagram @xmath of a zero cluster at @xmath looks as follows:

-   If @xmath at @xmath , then @xmath by Lemma 4.35 .

-   If @xmath and if @xmath and @xmath are its direct predecessor and
    its direct successor at @xmath in @xmath , then

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

###### Corollary 4.36

The shape of the Voronoi diagram @xmath of a zero cluster @xmath equals
the shape of the Voronoi diagram of @xmath .

We conclude that for computing the shape of the Voronoi diagram @xmath
of a zero cluster, it is enough to consider sites on the direction hull
@xmath only.

#### 4.5.2 Determining the direction hull at @xmath.

In Section 4.2 we have defined the combinatorial convex hull @xmath of a
set of polynomial sites by imitating the characterization of the
ordinary convex hull as an intersection of half-planes. Exploiting this
similarity we show how to compute @xmath by an adapted version of the
convex hull algorithm as presented in [ BKOS ] , page 6.

The original algorithm is an incremental algorithm: first it sorts the
@xmath points in the input and next it handles the points one by one.
The original algorithm sorts the input points lexicographically. This
results in a sequence of points that is ordered from left to right and
then from bottom to top. The algorithm determines the convex hull in two
steps. In the first step the upper hull is determined. The upper hull is
basically that part of the convex hull that is running from the leftmost
point to the rightmost point of the sorted points. It constructs the
upper hull by adding one point at a time and checking if the sequence of
points that will be the upper hull in the end keeps going right. The
lower hull is defined and constructed in a similar way.

Our ordering @xmath mimics the lexicographic ordering. Just think of
substituting a very small positive value of @xmath in the set of
polynomial sites and sorting the resulting points lexicographically. An
example is displayed in Figure 4.4 where the position of some polynomial
sites at @xmath is indicated by the labels of the sites. In a similar
fashion we define right turns for polynomial sites: we say that three
sites @xmath , @xmath , and @xmath ordered by @xmath make a right turn
at @xmath , if @xmath is on the right of @xmath at @xmath .

###### Algorithm 4.37

Combinatorial convex hull for polynomial sites.

0: set @xmath of @xmath polynomial sites in general position.

0: list @xmath containing the vertices of @xmath in clockwise order.

1: Sort the sites by @xmath , resulting in a sequence @xmath .

2: Create list @xmath .

3: for every @xmath do

4: Append @xmath to @xmath .

5: while @xmath contains more than two sites and the last three sites in
@xmath do not make a right turn, do

6: Delete the middle of the last three sites from @xmath .

7: Construct @xmath in a similar way and append the result to @xmath .
Call the resulting list @xmath ;.

8: return @xmath .

The running time of the algorithm is @xmath , cf. [ BKOS ] . Let @xmath
be a zero cluster again. Given its combinatorial convex hull @xmath at
@xmath , we compute in @xmath time the direction hull @xmath at @xmath .

###### Algorithm 4.38

Direction hull.

0: combinatorial convex hull @xmath of a zero cluster @xmath .

0: direction hull @xmath at @xmath .

1: Compute the direction @xmath for every edge @xmath in @xmath at
@xmath .

2: if two consecutive edges @xmath and @xmath have the same direction,
that is, @xmath , then

3: Delete @xmath and its incident edges.

4: Create a new edge @xmath .

### 4.6 Degenerate Voronoi cells and edges.

Let @xmath be a zero cluster at @xmath . We have seen before that only
sites in the direction hull @xmath generate a Voronoi cell of positive
area. It is possible however that for a site @xmath there exists an edge
@xmath that does not collapse on @xmath at @xmath . In this section we
consider sites @xmath such that there exists, at @xmath , an edge @xmath
with @xmath , @xmath . We first give an explicit example of an edge
@xmath where even @xmath , while @xmath . Next we present an algorithm
that determines all edges @xmath that contain some @xmath with @xmath
for a zero cluster @xmath at @xmath .

###### Example 4.39

Let @xmath , where @xmath , @xmath , @xmath , and @xmath . The direction
hull at @xmath consists of the two sites @xmath and @xmath , while
@xmath . Therefore the shape of the Voronoi diagram @xmath is just a
vertical line through the origin. There are two Voronoi cells of
positive area at @xmath : @xmath , whose cell is the left half-plane,
and @xmath , whose cell is the right half-plane.

The type of @xmath however is @xmath . A schematic picture of the
situation is given in Figure 4.3 . From the type it follows that
combinatorially, @xmath consists of two vertices or circle centers,
@xmath and @xmath that are connected by an edge @xmath . Besides, there
are unbounded edges @xmath an @xmath , incident to the circle center
@xmath and edges @xmath and @xmath , incident to @xmath . Both circle
centers are situated at the point @xmath . This implies that the length
of @xmath at @xmath equals zero, while the four other edges involved,
have infinite length.

Let @xmath be a zero cluster at @xmath . An edge @xmath with @xmath is
an outside edge at @xmath if there exists @xmath such that @xmath . Here
we allow @xmath to be any point of the form @xmath , @xmath , @xmath or
@xmath , where @xmath . Allowing these possibilities is motivated by
Example 4.8 , which demonstrates that circle centers defined by
polynomial sites can be at infinity.

Algorithm 4.40 determines all outside edges of a set of polynomial sites
in general position at @xmath .

###### Algorithm 4.40

Determining outside edges and their positions.

0: a zero cluster @xmath .

0: all outside edges with their endpoints at @xmath .

1: Determine the type @xmath of @xmath at @xmath .

2: Any edge @xmath of multiplicity 1 in the abstract Delaunay graph
@xmath corresponds to an unbounded edge @xmath in the Voronoi diagram
@xmath . This edge @xmath starts at the circle center of the unique
circle listed in @xmath that has both @xmath and @xmath on its boundary.
The direction of @xmath is perpendicular to @xmath . Edge @xmath is
oriented so that it makes an angle of @xmath with @xmath ;

3: Determine those circles in @xmath that have positive radius;

4: for @xmath and @xmath two labels occurring in some circle of positive
radius do

5: (We show how to ‘draw’ the edge @xmath ).

6: Check if we have not drawn @xmath before in step 2 as an unbounded
edge.

7: if the combination of the labels @xmath and @xmath occurs twice in
the list of the circles of positive radius then

8: there are two circle centers distinct from @xmath . We connect the
two circle centers by an edge @xmath ;

9: else if the combination of the labels occurs only once then

10: we connect the corresponding circle center @xmath to the origin.

Determining the shape of the Voronoi diagram is relatively easy, compare
Section 4.5 . We have seen in this section, however, that the
combinatorial structure on the boundary itself can get rather
complicated.

### 4.7 Example: 20 polynomial sites.

In this section we analyze a slightly bigger example, illustrating the
techniques and theory developed in the former sections. We consider a
set @xmath of 20 polynomial sites. We determine the shape of the Voronoi
diagram @xmath at @xmath . Next we focus on the outside edges of @xmath
at @xmath . We visualize the polynomial sites and compare the outcome of
the computation to the visualization. First we introduce the polynomial
sites. @xmath is a set of 20 distinct sites @xmath such that @xmath for
@xmath :

  -- -------- --
     @xmath   
  -- -------- --

We visualize @xmath by considering any @xmath as a plane curve,
represented by a parametrization @xmath . In Figure 4.4 these twenty
curves are plotted for @xmath . The position of a curve at @xmath is
marked by its label.

#### 4.7.1 The positive area diagram.

Recall that the type of @xmath is defined a the set of all Voronoi
circles at @xmath . We have computed it using brute force. That is, for
every @xmath unordered triples of polynomial sites @xmath , @xmath and
@xmath we first determine the orientation at @xmath of the circle @xmath
passing though @xmath , @xmath and @xmath . Next we check if any of the
@xmath remaining sites of @xmath is contained in @xmath . If not, we
conclude that @xmath is a Voronoi circle and add the labels @xmath ,
@xmath and @xmath ordered with respect to the orientation of @xmath to
the type in the making. It turns out that the type of @xmath is given
by:

  ((1, 5, 6), (1, 17, 5), (1, 6, 17), (2, 8, 4), (2, 4, 18), (2, 14, 8),
  (2, 18, 14), (3, 20, 7), (3, 11, 10), (3, 10, 20), (4, 7, 18), (5, 13,
  6), (5, 17, 13), (6, 13, 15), (6, 15, 14), (6, 14, 20), (6, 16, 17),
  (6, 19, 16), (6, 20, 19), (7, 20, 18), (8, 12, 9), (8, 14, 12), (9,
  13, 11), (9, 12, 15), (9, 15, 13), (10, 11, 13), (10, 13, 20), (12,
  14, 15), (13, 17, 16), (13, 16, 19), (13, 19, 20), (14, 18, 20)).

Counting multiplicities of the edges shows that all edges have
multiplicity @xmath except for the edges

  -- -------- --
     @xmath   
  -- -------- --

As site @xmath is on the right of @xmath at @xmath the combinatorial
convex hull @xmath is given by @xmath . The directions of the edges of
@xmath are @xmath , @xmath , @xmath , @xmath , @xmath , and @xmath . The
directions @xmath and @xmath are equal, so site @xmath is not a corner
site. We conclude that the direction hull @xmath is given by @xmath .
This outcome can almost be ‘guessed’ from Figure 4.4 by considering the
convex hull of the points @xmath to @xmath for small @xmath . Knowing
the direction hull and the directions of the edges of the direction
hull, we know in fact the shape of the Voronoi diagram @xmath . It is
depicted on the left in Figure 4.5 .

#### 4.7.2 Combinatorics of the edges outside @xmath.

The only Voronoi circle that has a circle center outside of @xmath at
@xmath is the clockwise oriented circle @xmath . Its center is at
infinity. This means that the unbounded edge @xmath starts at the
Voronoi vertex at infinity, while two edges @xmath and @xmath run
between vertices situated in @xmath and this vertex at infinity. We have
seen before that @xmath with @xmath its direct predecessor and @xmath
its direct successor in @xmath . As there are no further circle centers
situated outside the origin, there are two unbounded edges @xmath and
@xmath that, starting in @xmath , both run upwards, but never meet. A
schematic picture of the combinatorics of the edges outside @xmath is
given on the right in Figure 4.5 .

### 4.8 The shape of a Voronoi diagram at @xmath.

In Section 4.5 we have given a method that determines the shape of the
Voronoi diagram of a zero cluster at @xmath . That is, we assumed that
all sites coincide in the origin at @xmath . In this section we apply
this method in order to determine the shape of a Voronoi diagram at
@xmath for an arbitrary set of polynomial sites in general position.

Let @xmath be a set of polynomial sites of size @xmath that is in
general position at @xmath . The cluster locations @xmath of @xmath at
@xmath are the distinct positions of the sites in @xmath at @xmath . An
@xmath -cluster , for @xmath is a collection of polynomial sites that
coincides at @xmath at @xmath . Write @xmath , where @xmath is the set
of sites in @xmath such that @xmath for all @xmath . That is, we divide
@xmath with respect to the @xmath -clusters at @xmath .

###### Lemma 4.41

The shape of the Voronoi diagram @xmath at @xmath of @xmath is given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

First of all, suppose that @xmath , for all @xmath . In this case the
lemma just states that the Voronoi diagram of distinct points coincides
with the subdivision of the plane into Voronoi cells, see Section 2.2 .
Next consider an arbitrary point @xmath in the interior of, say, @xmath
. Then @xmath is, by definition, closer to @xmath than to any other
location @xmath for @xmath . The lemma follows from Corollary 4.36
adapted for an @xmath -cluster @xmath . ∎

###### Example 4.42

Suppose we are given the following sites:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
                       @xmath   
  -- -------- -------- -------- --

The cluster locations at @xmath are given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The Voronoi diagram @xmath of the cluster locations is presented on the
left in Figure 4.6 . There are two clusters consisting of more than one
point. The shape of the Voronoi diagram of the zero cluster, given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

is presented in the top middle of Figure 4.6 , while the shape of the
Voronoi diagram of the @xmath -cluster

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

is shown in the bottom middle. According to Lemma 4.41 , we can plug
these two cluster diagrams in the cluster locations diagram in order to
get the shape of the Voronoi diagram of @xmath at @xmath . This final
diagram is depicted on the right in Figure 4.6 .

### 4.9 Generalizations and conclusion.

#### 4.9.1 Dropping general position.

Throughout this chapter we have assumed that sets of polynomial sites
are in general position. General position is not needed for the methods
presented to work. Dropping general position just means that a lot of
extra cases have to be checked, which distracts from the main line. Note
that the notion of type as introduced in Section 2.3 is defined for
point sets that are not in general position as well. As we can also
compute convex hulls for point sets that are not in general position,
there are no big obstructions for extending the methods to sets of
polynomial sites in arbitrary position.

Recall from Section 4.2 that general position for polynomial sites is
defined in terms of cocircularity and collinearity polynomials: if some
set @xmath is not in general position at @xmath , then there is at least
one cocircularity polynomial @xmath or collinearity polynomial @xmath
that is equal to the null polynomial. This implies that @xmath is not in
general position for any value of @xmath .

#### 4.9.2 Generalization to higher order Voronoi diagrams.

In the @xmath -th order Voronoi diagram, the plane is partitioned
according to the @xmath closest sites, see Chapter 3 . Algorithm 3.5
computes the @xmath -th order Voronoi diagram of a set @xmath of
distinct points in general position, using

-   circles through three points of @xmath ,

-   points from @xmath inside these circles,

-   directions of lines between points of @xmath .

We have shown in this chapter that these concepts can be generalized to
sets @xmath of polynomial sites. Therefore, Algorithm 3.5 can also be
generalized to sets of polynomial sites in general position. This will
give us a combinatorial @xmath -th order Voronoi diagram.

It is also clear that we cannot directly generalize Lemma 4.41 for
obtaining the shape of a @xmath order Voronoi diagrams. That is because
the two steps approach, dealing with cluster locations and clusters
apart, is not allowed anymore for @xmath .

###### Example 4.43

Let @xmath be as in Example 4.7 . In Figure 4.7 we show on the left the
second order Voronoi diagrams of the cluster locations @xmath that we
have found in Example 4.42 . On the right, the second order Voronoi
diagram for @xmath , with @xmath is shown.

#### 4.9.3 Polynomial arithmetic.

So far, we did not pay any attention to how to compute efficiently with
polynomial sites: higher order terms can often be skipped without
changing the type or the position of the Voronoi vertices and edges. But
at this point we have no rule available that tells us on forehand when
it is allowed to skip higher order terms.

###### Example 4.44

Let @xmath be as introduced in Example 4.13 . Suppose that we change
@xmath in Examples 4.13 and 4.24 from @xmath into @xmath . Then the type
of @xmath at @xmath and the shape of the Voronoi diagram of @xmath at
@xmath remains the same.

This is one reason for considering certain properties of sites or point
sets, rather than the sites themselves. We will do so in the following
chapters.

#### 4.9.4 Conclusion

The polynomial sites model enables us to introduce limit pictures of
Voronoi diagrams by means of the shape of a Voronoi diagram. Moreover,
we have seen that this model can be used to extend the notion of ‘type’
to sets of points that sometimes coincide. The type gives us the
complete combinatorics of a limit situation.

The methods presented in this chapter however do only visualize the
shapes of those cells that have positive area at @xmath . This
demonstrates that not all cells in the limit Voronoi diagram at @xmath
are treated in an equal way. The ingredient that is missing is the
relation between shape and scale. Informally, think of dividing the
polynomials defining the polynomial sites by powers of @xmath until
Voronoi cells that had zero area at @xmath before dividing get positive
area. That is, we want to zoom in at a cluster in order to find out the
shape of a Voronoi cell of some arbitrary site @xmath . In order to
solve this problem we will define clickable Voronoi diagrams in a
following chapter. We do so by exploiting properties of point sets, like
angles between two points or hooks between three points.

## Chapter 5 Voronoi diagrams and angle compactifications.

Given a configuration @xmath of @xmath distinct points, one can
determine the set @xmath of angles of lines through any two points in
@xmath . We distinguish @xmath , the set of angles up to @xmath , and
@xmath , the angles up to @xmath . We analyze in both cases what sets of
angles are possible. We show in which cases it is possible to
reconstruct the Voronoi diagram @xmath , knowing the angles only. We
compactify the configuration space of distinct points by taking the
closure of the graph of the map that associates the angles to a
configuration. We present a variety @xmath as an algebraic alternative.
We analyze the connection between boundary points of the
compactification and singularities of @xmath for small @xmath and give
geometric interpretations.

### 5.1 @xmath: space of angles on @xmath points.

In this section we introduce several spaces that will be important to us
later on. We recall the notion of configuration space of @xmath distinct
labeled points in the plane. Both an introduction on and applications
(in robotics!) of configuration spaces can be found in [ AG ] . Next we
define two spaces by considering, for @xmath distinct points in the
plane, all angles between pairs of points. Here we distinguish angles
mod @xmath and angles mod @xmath .

#### 5.1.1 The angle of two points.

Given two distinct points @xmath and @xmath , we determine the angle
that the line that passes through @xmath and @xmath makes with the
positive @xmath -axis. We distinguish the directed and undirected line.

###### Definition 5.1

See also Figure 5.1 .

-    For any two distinct points @xmath and @xmath in the plane define
    the directed angle @xmath as the argument of the point

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

    where @xmath . Note that @xmath is determined up to multiples of
    @xmath .

-    The undirected angle @xmath is defined as @xmath . We often choose
    @xmath .

-    If @xmath , then the slope @xmath is defined as @xmath . If @xmath
    , then @xmath . It holds that @xmath .

###### Example 5.2

Let @xmath and @xmath . Then @xmath , so @xmath , but the angle @xmath
as @xmath .

###### Remark 5.3

If @xmath , then @xmath and @xmath .

#### 5.1.2 Configuration spaces of @xmath distinct points.

###### Definition 5.4

The configuration space @xmath of @xmath points in @xmath is the set

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Two elements @xmath are @xmath -equivalent if they only differ by a
scaling, @xmath , combined with a translation, @xmath . The reduced
configuration space is the quotient space @xmath .

@xmath is a smooth manifold. We determine its dimension. A standard
representative for a class in @xmath is constructed as follows.
Translate the configuration in such a way that @xmath . Scale the
configuration in such a way that @xmath is at distance one from @xmath .
This shows that we need three parameters less than @xmath to describe an
element in @xmath .

###### Property 5.5

dimension @xmath @xmath @xmath .

###### Remark 5.6

Note that @xmath is not compact: take @xmath , then the ratio @xmath is
continuous but not bounded.

###### Remark 5.7

Let @xmath be the standard representative of a class @xmath in @xmath
and let @xmath be an arbitrary element of @xmath . Then @xmath . If we
write @xmath for the set of standard representatives of classes in
@xmath , then @xmath .

#### 5.1.3 Compactification of the graph of the angle map.

For an element @xmath , write down for every pair of points @xmath ,
with @xmath , the angle @xmath or @xmath . This gives @xmath angles, one
for every unordered pair of labels @xmath and @xmath .

###### Definition 5.8

@xmath is the space of directed angles; @xmath the space of undirected
angles. The directed angle map @xmath is the map

  -- -------- --
     @xmath   
  -- -------- --

The undirected angle map @xmath is defined in a similar way.

###### Remark 5.9

As a direct product of circles @xmath and @xmath are smooth.

###### Remark 5.10

@xmath and @xmath are well-defined on @xmath : both mapping are constant
on classes of @xmath .

###### Definition 5.11

The graph of @xmath is the set @xmath . The compactification @xmath of
the graph of the angle map, is the closure of @xmath in @xmath . The
compactification @xmath is defined in a similar way.

###### Remark 5.12

@xmath is in fact not a compactification as it is not compact: @xmath is
not bounded, compare Remark 5.6 . The projection map from @xmath to
@xmath is proper however. Recall that a map is proper if it is
continuous and if the preimage of every compact set is compact again.

### 5.2 From angles back to point configurations.

In this section we consider the mappings @xmath and @xmath . We describe
the fibers of both mappings by showing which configurations @xmath can
be reconstructed from knowing the angles @xmath or @xmath only.

#### 5.2.1 Distinct points and angles in @xmath.

A configuration @xmath is called collinear iff all points in @xmath are
collinear. A class of configurations @xmath is collinear if the class
elements are collinear. Define @xmath , and similarly @xmath .

###### Lemma 5.13

The map @xmath is injective.

###### Proof..

We have to show that for @xmath with @xmath it holds that @xmath . Let
@xmath and @xmath be the standard representative of @xmath , resp.
@xmath . If @xmath then also @xmath . Let @xmath be the @xmath -th point
of the configuration @xmath and let @xmath be the angle between @xmath
and @xmath . Note that for standard representatives @xmath . We show
that in any case there exists some labels @xmath and @xmath such that
@xmath .

Let @xmath be minimal such that @xmath . If @xmath , then @xmath ,
therefore @xmath . Assume that @xmath . In this case @xmath for some
@xmath . Let @xmath be the line through @xmath and @xmath . If @xmath ,
then @xmath . Assume that @xmath . If @xmath , then @xmath .

We are left with the case that @xmath and @xmath are all collinear on
line @xmath . As @xmath , there exists @xmath such that @xmath . If
@xmath then @xmath . Let @xmath be the line through @xmath and @xmath .
If @xmath , then @xmath . Finally, if @xmath , then @xmath . ∎

###### Remark 5.14

Suppose we are given an image point @xmath for some @xmath . We
construct the standard representative from the angles in @xmath as
follows. Put @xmath and @xmath . A point @xmath is on the line @xmath
through @xmath and @xmath if and only if

  -- -------- -- -------
     @xmath      (5.1)
  -- -------- -- -------

As @xmath , we know that there exists @xmath that is not on the line
@xmath . We find it by checking Equation 5.1 . We construct @xmath as
the intersection of the lines @xmath and @xmath . Here @xmath is the
line that passes through @xmath and has direction @xmath and @xmath is
the line that passes through @xmath with direction @xmath . Any other
point @xmath of the standard representative is constructed in a similar
way: there is always a pair of vertices from the non-degenerated
triangle @xmath such that the line through these two vertices does not
contain @xmath .

Let @xmath . Then all points @xmath from @xmath are on a common line
@xmath that makes some undirected angle @xmath with the positive @xmath
-axis. Order the labels of the points according to the order of the
points on @xmath as encountered from left to right, or from bottom to
top, in case @xmath . This defines an ordered @xmath -tuple @xmath . The
@xmath -tuple @xmath is defined as @xmath , for some representative
@xmath . Define an equivalence class @xmath on @xmath as follows: @xmath
if and only if both @xmath , and @xmath .

###### Lemma 5.15

Consider @xmath .

-   @xmath is constant on classes of @xmath .

-    The map @xmath is injective

###### Proof..

We prove the two claims.

-   Let @xmath such that @xmath . Let @xmath and @xmath denote the
    @xmath -th and @xmath -th points of some representatives @xmath and
    @xmath of the classes @xmath and @xmath . Then @xmath , as all four
    points are collinear. Moreover, @xmath is on the right of @xmath
    whenever @xmath on the right of @xmath , as @xmath . So, @xmath .

-   Suppose that @xmath . Let @xmath and @xmath be as above. If @xmath ,
    then clearly @xmath . Assume @xmath . Then @xmath . Let @xmath be
    minimal such that @xmath Then @xmath . Therefore @xmath . ∎

We use Lemma 5.13 and Lemma 5.15 to answer the following question. Is it
possible, given some @xmath , with @xmath , to determine the Voronoi
diagram @xmath ? Let the reduced Voronoi diagram , notation @xmath , of
a point @xmath be the Voronoi diagram @xmath up to scaling and
translation. A reduced configuration of points @xmath or a reduced
Voronoi diagram @xmath is reconstructible from a list of angles @xmath
iff @xmath resp. @xmath is uniquely determined by @xmath .

###### Property 5.16

@xmath is independent of the choice of @xmath .

Notation: By @xmath , for @xmath , the reduced Voronoi diagram of some
representative @xmath is indicated. Note that if one can reconstruct the
class @xmath from @xmath , for @xmath , then one can also construct the
reduced Voronoi diagram @xmath .

###### Corollary 5.17

Let @xmath , with @xmath .

-    If @xmath , then @xmath is reconstructible.

-    If @xmath , then @xmath is not reconstructible, except for @xmath .

###### Proof..

The first claim follows from Lemma 5.13 and Remark 5.14 . The preimage
@xmath consists of distinct classes of @xmath , except for @xmath ,
consult Lemma 5.15 . This proves the second claim. ∎

###### Corollary 5.18

@xmath is reconstructible if and only if either @xmath , or @xmath and
@xmath or @xmath .

###### Proof..

From Corollary 5.17 it follows that @xmath is reconstructible in the
cases mentioned except for @xmath in case @xmath . But in this case,
@xmath consists just of two parallel bisectors perpendicular to @xmath .
From @xmath we can determine the order of the three points on the line,
which gives us the labels of the bisector. Changing the relative
positions of the three points in @xmath has no influence on @xmath as
long as the order of the points is maintained. Suppose, on the other
hand that @xmath for @xmath . It is easy to show that in this case
mutually distinct classes of configurations in the fiber @xmath
correspond with mutually distinct reduced Voronoi diagrams. ∎

###### Example 5.19

Consider the element @xmath defined by @xmath . Suppose that we try to
construct a configuration @xmath of labeled points having those angles.
It is clear that any such configuration consists of four points on a
common horizontal line. An example is given in Figure 5.2 . Moreover, it
is possible to reconstruct the order of the points on the line: from
left to right we encounter the points @xmath , @xmath , @xmath and
@xmath in that particular order. This shows however that from the
information present in @xmath we cannot determine the ratio @xmath of
the lengths of the line segments @xmath and @xmath : whatever this ratio
is, the angles @xmath , @xmath and @xmath do not change. The Voronoi
diagram of @xmath to @xmath consists of the three vertical bisectors
@xmath , @xmath and @xmath . Again it is impossible to determine the
ratio @xmath of the distances between the bisectors. This shows that it
is impossible to associate a unique reduced Voronoi diagram to @xmath .

#### 5.2.2 Distinct points and angles in @xmath.

Suppose we start with some @xmath . Assume we have determined @xmath ,
that is, the set of all angles @xmath between pairs of points @xmath .
We introduce another equivalence class on @xmath . Let @xmath in @xmath
. The classes @xmath and @xmath are reflection equivalent , notation
@xmath if and only if the standard representative @xmath of @xmath
equals the standard representative @xmath of @xmath up to a reflection
in @xmath .

###### Lemma 5.20

The map @xmath is injective

###### Proof..

Proceed as in the proof of Lemma 5.13 , but take those standard
representatives that have @xmath . It is possible to put mod @xmath bars
on all @xmath ’s that occur in the proof. ∎

If we take angles between points in @xmath , all collinear
configurations that have their points on a line with angle @xmath are
mapped to the same @xmath in @xmath . So it is impossible to reconstruct
the original order of the points on the line.

###### Corollary 5.21

Let @xmath , for @xmath .

-    If @xmath , then @xmath is reconstructible up to a point
    reflection.

-    If[ @xmath and @xmath , then @xmath is reconstructible up to a
    point reflection.

-    If[ @xmath and @xmath , then @xmath is not reconstructible but the
    reduced Voronoi diagram @xmath is reconstructible

-    If[ @xmath and @xmath , then @xmath is not reconstructible.

###### Example 5.22

Let @xmath , with @xmath , @xmath and @xmath . The Voronoi diagram
@xmath is shown on the left in Figure 5.3 . Then @xmath , @xmath and
@xmath . So @xmath , while @xmath and @xmath . We get a ‘reconstructed’
configuration @xmath consisting of @xmath , @xmath and @xmath . This
configuration @xmath together with its Voronoi diagram @xmath is shown
on the right in Figure 5.3 .

### 5.3 Angle models for small @xmath.

In this section, we analyze the compactifications @xmath and @xmath for
@xmath . Moreover, we give a complete description of the image @xmath .
For points on the boundary of @xmath , we give a geometric
interpretation in terms of coinciding points.

###### Remark 5.23

D. G. Kendal has introduced the ‘The theory of shape’ in a statistical
context. As a specific example, the shapes of triangles are analyzed. To
compare with this result, consult [ Ke1 ] and [ Ke2 ] .

#### 5.3.1 n=2.

In the directed case, we have the following diagram:

  -- -------- --
     @xmath   
  -- -------- --

@xmath maps a configuration @xmath to the directed angle @xmath . For
simplicity we assume that @xmath . As @xmath , this implies that @xmath
. This space @xmath is homeomorphic to a doubly open cylinder: imagine
the omitted point @xmath as one side of the cylinder and infinity as the
other side.

A classic construction is the following: The blow-up of @xmath at @xmath
is by definition the closed subset @xmath of all points @xmath such that
@xmath . The projection @xmath onto the first factor has the following
properties, compare [ Ha ] .

-   @xmath consists of a single point, if @xmath .

-   @xmath .

-   The points of @xmath are in 1-1 correspondence to the set of
    (undirected) lines through @xmath .

We consider @xmath , the closure of @xmath .

###### Lemma 5.24

@xmath is homeomorphic to a half-open cylinder times a plane.

###### Proof. (sketch).

The plane comes from varying @xmath , so assume @xmath . Then @xmath ,
provided that @xmath . Write @xmath , with @xmath , and @xmath . Any
configuration @xmath , is added exactly once in order to obtain the
closure of @xmath , as @xmath . The punctured plane @xmath , is
homeomorphic to a doubly open cylinder. Adding all points of the form
@xmath , with @xmath means that we attach one full circle to that end of
the open cylinder that corresponds to @xmath . ∎

###### Remark 5.25

Lemma 5.24 demonstrates that @xmath can have a ‘boundary’.

In the undirected case, we consider @xmath , the closure of @xmath .

###### Lemma 5.26

@xmath is homeomorphic to a Möbius strip times a plane.

###### Proof. (sketch).

Start as in the proof of Lemma 5.24 . Write @xmath in polar coordinates,
that is, @xmath , with @xmath , and @xmath . Any undirected angle @xmath
is added twice, once for @xmath and once for @xmath . This gives the
antipodal identification as indicated on the left in Figure 5.4 by the
little solid arrows. It is allowed to cut the space as long as it is
eventually pasted back together in the same way as it was cut. We make
two cuts, @xmath and @xmath , through the side of the cylinder. This
enables us to perform the antipodal paste, resulting in the rectangle on
the right of Figure 5.4 . Pasting back the cuts we have made, results in
the Möbius strip, compare e.g. [ Mu ] . ∎

###### Remark 5.27

Note that the construction in the proof of Lemma 5.26 is exactly the
blow-up of @xmath at @xmath that we have discussed above.

#### 5.3.2 n=3.

We consider the possible angles mod @xmath between three distinct points
@xmath and @xmath in the plane. That is, we determine the image @xmath
in @xmath . Let @xmath denote the directed line that passes first
through @xmath and last through @xmath . The triangle with vertices
@xmath , @xmath and @xmath is oriented clockwise if @xmath is on the
right of @xmath . The triangle is oriented anti-clockwise if @xmath is
on the left of @xmath .

###### Lemma 5.28

Let @xmath . Let @xmath denote the triangle with vertices @xmath ,
@xmath and @xmath . For @xmath the following holds.

-    If @xmath oriented clockwise, then @xmath @xmath

-    If @xmath oriented anti-clockwise, then @xmath @xmath

-    If @xmath , @xmath and @xmath collinear then

      -- -------- --
         @xmath   
      -- -------- --

Moreover, for any image point @xmath either (i), (ii), or (iii) holds.

###### Proof..

Note that the differences of angles as they occur in the statements in
the lemma does not change if @xmath is rotated.

-   Assume @xmath is oriented clockwise. Rotate @xmath such that @xmath
    , compare the triangle on the left in Figure 5.5 . As @xmath is on
    the right of @xmath it follows that @xmath .

-   Assume @xmath is oriented anti-clockwise. Rotate @xmath such that
    @xmath , compare the triangle on the right in Figure 5.5 . As @xmath
    is on the right of @xmath it follows that @xmath . It follows that
    @xmath , or equivalently, that @xmath .

-   Proof by inspection.

As any triangle on the vertices @xmath and @xmath is either oriented
anti-clockwise, or oriented clockwise or degenerate, the lemma follows.
∎

Boundary points of @xmath are characterized as follows.

###### Corollary 5.29

Let @xmath be a boundary point of @xmath .

-    If @xmath for @xmath , then @xmath .

-    If @xmath , then @xmath @xmath @xmath @xmath @xmath

###### Example 5.30

Figure shows the possible values of @xmath and @xmath , for @xmath , on
the left, and, for @xmath , on the right. Note that

-   Configurations of points that are not collinear are mapped by @xmath
    to the interior of the triangles and rectangles in the figure.

-   Configurations that are collinear are mapped to the vertices of the
    big central triangle on the left and on the right.

-   Other points on the boundary of the triangles and rectangles do not
    correspond to configurations in @xmath .

###### Example 5.31

The picture in the middle of Figure 5.6 shows the possible values of
@xmath and @xmath for @xmath . The only configurations in @xmath that
are not image points of @xmath are the points where two angles mod
@xmath coincide but not all three.

Recall that @xmath consists of the configurations of three distinct,
non-collinear points up to scalings and transformations.

###### Corollary 5.32

Let @xmath . Then @xmath for some @xmath if and only if

  -- -------- --
     @xmath   
  -- -------- --

The boundary of @xmath with @xmath is depicted in Figure 5.7 .

###### Remark 5.33

In Corollary 5.29 we have classified those points @xmath that are on the
boundary of @xmath but not in @xmath itself. These triples of angles can
be interpreted as the triples of angles that correspond to
configurations of three points, such that exactly two points coincide.
Consider the angles between the points in the three configurations
presented in Figure 5.8 . In the leftmost configuration, @xmath , in the
configuration in the middle, @xmath , while in the rightmost
configuration, @xmath . This interpretation holds, as long as the three
points are not collinear, compare the first statement of Corollary 5.29
.

###### Example 5.34

Fix @xmath and @xmath . This assures that @xmath . Suppose that the
position of @xmath is given by @xmath , for @xmath . So @xmath . Then
@xmath is a curve, that is defined for any @xmath . It is depicted in
Figure 5.9 , on the left.

###### Example 5.35

Fix @xmath and @xmath again. Let @xmath . In this case, the curve @xmath
is built up out of straight line segments, see Figure 5.9 , on the
right. At @xmath , the point @xmath passes through @xmath . At this
@xmath , the curve is not defined. This @xmath coincides with a swap
@xmath .

There are some obvious geometric transformations that relate points in
the image @xmath . We use these relations for analyzing the structure of
@xmath . Here we consider @xmath as a quotient of @xmath . That is,
identify points @xmath and @xmath in @xmath iff @xmath etcetera.

###### Lemma 5.36

Let @xmath , with @xmath . Let @xmath be an element of the symmetric
group @xmath . The consequence of a permutation @xmath of the labels of
the points in @xmath is as follows.

  -- -------- --
     @xmath   
  -- -------- --

A ‘ @xmath ’ indicates a translation over a given vector, an ‘ @xmath ’
a reflection in a given plane, while ‘ @xmath ’ indicates a rotation
with respect to the axis through @xmath and @xmath over a given angle.

###### Proof..

A sketch of the six permutations of the labels of the components of
@xmath suffices to determine @xmath . The geometric action that
corresponds to applying the three order two elements on the labels is
clear. The following formula, see [ Go ] , gives the image @xmath of the
rotation of a vector @xmath through an angle @xmath about an axis @xmath
.

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

In our case, @xmath is the normalized vector @xmath , while @xmath .
Applying this formula for @xmath gives @xmath , while @xmath leads to
@xmath . This explains the action corresponding to the order three
elements of @xmath . ∎

###### Lemma 5.37

If @xmath , then also @xmath for any @xmath .

###### Proof..

A rotation of @xmath of the baseline, that is the axis with respect to
which angles are measured, corresponds to adding @xmath to all angles
@xmath , @xmath and @xmath . ∎

Lemmata 5.36 and 5.37 suggest to consider the set of all possible angles
between three distinct points up to the permutations and baseline
rotations introduced in the lemmata. Define @xmath , the fundamental
image of @xmath , as the image @xmath up to permutations and rotations.

###### Corollary 5.38

@xmath up to baseline rotations is obtained by projecting @xmath on the
plane @xmath .

###### Proof..

This follows directly from Lemma 5.37 , as any vector @xmath is
orthogonal to the plane @xmath . ∎

We can actually construct the projection @xmath on the plane @xmath as
follows. @xmath and @xmath form an orthogonal basis of @xmath . Let
@xmath and @xmath be the corresponding unit length vectors. Then @xmath
is given by

  -- -------- --
     @xmath   
  -- -------- --

@xmath is shown on the left in Figure 5.10 .

###### Remark 5.39

@xmath maps @xmath to @xmath , maps @xmath to @xmath and maps @xmath to
@xmath , where @xmath and @xmath . As a consequence, any @xmath has a
representative mod @xmath that is mapped by @xmath in the area shown on
the right in Figure 5.10 .

Next lemma is the ‘projected’ version of Lemma 5.36 .

###### Lemma 5.40

Let @xmath , with @xmath . The orbit of @xmath under the action of the
symmetric group @xmath on the labels of @xmath , @xmath and @xmath is
given in the following table.

  -- -------- --
     @xmath   
  -- -------- --

Here @xmath and @xmath are as in Remark 5.39 and @xmath is given by
@xmath . Moreover, @xmath , if the second coordinate of @xmath and
@xmath , if the second coordinate of @xmath .

###### Proof..

We can easily compute the coordinates of the points in the orbit by
projecting the orbit in @xmath that we found in Lemma 5.36 . Concerning
the geometric action: the reflection matrix @xmath for a reflection of a
point in the line @xmath is given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

It is easy to check that the action of @xmath boils down to a
translation over @xmath followed by a reflection in the line @xmath .
Similarly for the action of the other two involutions. The rotation
matrix @xmath for a rotation of a point around the origin is given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

A rotation of a vector @xmath around an arbitrary center @xmath is given
by @xmath . This allows us to check the action of @xmath and @xmath . ∎

###### Corollary 5.41

@xmath is given by the triangle in the picture on the right of Figure
5.10 with vertices @xmath , @xmath and @xmath .

###### Proof..

Every element of the orbit of @xmath acting on a @xmath for some @xmath
, with @xmath lives ‘at the same place’ in its own triangle in the
picture on the right of Figure 5.10 : the three order @xmath elements
map @xmath on one of the three gray triangles on the other site of the
dotted line @xmath . The two order three elements rotate @xmath
clockwise or anti-clockwise into the two adjacent gray triangles. ∎

###### Corollary 5.42

Let @xmath be the plane orthogonal to the vector @xmath . Then the
@xmath -dimensional wallpaper group @xmath is acting on @xmath .

###### Proof..

There are order @xmath , order @xmath and order @xmath rotations, and
@xmath axes of reflection. This characterizes the @xmath -th wallpaper
group, see for example [ CM ] . ∎

### 5.4 The triangle variety @xmath.

We want to answer the question:

  are @xmath and @xmath smooth manifolds?

Moreover, we are interested in their algebraic counterparts. In this
section we describe an algebraic variety that is very similar to @xmath
. We know that @xmath is contained in @xmath : by definition, @xmath
equals the closure of the graph of the undirected angle map:

  -- -------- --
     @xmath   
  -- -------- --

Therefore, @xmath contains a ‘ @xmath part’ that is smooth. The
remaining points of @xmath lie above the diagonal @xmath consisting of
configurations with at least two coinciding points @xmath and @xmath .
We make an algebraic description for @xmath by taking coordinates @xmath
and @xmath , where

  -- -------- --
     @xmath   
  -- -------- --

For simplicity, we consider only the case where @xmath on each @xmath ,
so we work on the @xmath -chart. We have transformed @xmath in a
rational map @xmath given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath . Without loss of generality we assume throughout this
section that @xmath . That is, we consider configurations up to
translation. The dimension of @xmath up to translations equals @xmath .
The slope @xmath , for @xmath is denoted short as @xmath . The triangle
@xmath is the triangle with vertices @xmath , @xmath , and @xmath . The
following lemma shows that there exists a relation between the @xmath
-coordinates of the vertices of @xmath and the slopes of the lines
bounding @xmath . Let

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Lemma 5.43

@xmath on the @xmath -chart of @xmath .

###### Proof..

It holds that @xmath , @xmath , and @xmath . Substitute the former two
equations in the last equation. ∎

###### Corollary 5.44

On the @xmath -chart we have that @xmath for @xmath .

A question is if equality holds. That is, if the closed algebraic set
@xmath is contained in @xmath . The answer is no. We prove this later on
by means of the six-slopes formula:

###### Lemma 5.45 (six-slopes formula)

Let @xmath , @xmath , @xmath and @xmath be distinct points in the plane.
Then @xmath , where @xmath is given by

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (5.2)
  -- -------- -------- -------- -- -------

###### Proof..

Assume that @xmath and @xmath . We compute coordinates for the points
@xmath and @xmath . Let @xmath be the line through the points @xmath and
@xmath . The lines @xmath and @xmath are given by

  -- -------- -- -------- --
     @xmath      @xmath   
  -- -------- -- -------- --

and @xmath and @xmath by

  -- -------- -- -------- --
     @xmath      @xmath   
  -- -------- -- -------- --

We compute the intersections @xmath , and @xmath :

  -- -------- --
     @xmath   
  -- -------- --

After some formula manipulation the expression follows as @xmath . ∎

###### Remark 5.46

Some remarks on Equation 5.2 .

-   Interchanging indices @xmath , etcetera, changes the appearance of
    the expression for @xmath , but does not change the expression
    itself.

-   By @xmath we denote @xmath with @xmath , @xmath , @xmath and @xmath
    replaced by @xmath , @xmath , @xmath and @xmath .

-   If no three points of @xmath , @xmath , @xmath and @xmath are
    collinear, then we can express @xmath as follows in terms of @xmath
    , @xmath , @xmath , @xmath and @xmath :

      -- -------- -------- -------- -- -------
         @xmath   @xmath   @xmath      (5.3)
      -- -------- -------- -------- -- -------

###### Corollary 5.47

@xmath on @xmath .

###### Proof..

This follows from Lemma 5.45 and the definition of @xmath . ∎

Instead of just looking at the zeros of @xmath , we add the condition
that all @xmath equal zero as well. This leads to the following
definition.

###### Definition 5.48

The triangle variety @xmath is the set of common zeroes of the
polynomials @xmath for @xmath and @xmath for @xmath . Any variable, of
the form @xmath or @xmath , takes value in @xmath .

###### Example 5.49

The zero set of a collection of polynomials @xmath is indicated by
@xmath . So @xmath .

Note that the ideal of the triangle variety @xmath contains: one
polynomial @xmath for every triangle with vertices @xmath , @xmath and
@xmath ; one polynomial @xmath for every quadrilateral with vertices
@xmath , @xmath , @xmath and @xmath . We could consider explicitly
triangles with vertices @xmath , @xmath and @xmath by including:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The following lemma shows that this is not necessary however.

###### Lemma 5.50

@xmath .

###### Proof..

This follows directly from the following equations:

  -- -------- -------- --
     @xmath   @xmath   
     @xmath   @xmath   
     @xmath   @xmath   
  -- -------- -------- --

#### 5.4.1 Singularities of @xmath for small @xmath.

In this section we determine singularities of the triangle variety
@xmath for @xmath and @xmath . For this purpose recall the definition of
singularity .

###### Definition 5.51

See [ Ha ] . Let @xmath be an affine variety, and let @xmath @xmath
@xmath be a set of generators for the ideal of @xmath . Then @xmath is
nonsingular at a point @xmath if the rank of the Jacobian matrix @xmath
is @xmath , where @xmath is the dimension of @xmath . If @xmath is
nonsingular at every point, then @xmath is nonsingular .

#### 5.4.2 n=3.

###### Lemma 5.52

An element @xmath is singular iff all points and all slopes coincide.
That is:

  -- -------- --
     @xmath   
  -- -------- --

The type of this singularity is @xmath .

###### Proof..

@xmath , with @xmath . @xmath is singular if the rank of the Jacobian of
@xmath is smaller than @xmath , that is if all partial derivatives of
@xmath vanish.

  -- -------- --
     @xmath   
  -- -------- --

Solving this system gives the solutions @xmath @xmath @xmath . For the
type of the singularity: note that @xmath . From this it follows that
the singular set is given by @xmath , and that the singularity is of
type @xmath , cf. [ Si ] . ∎

###### Remark 5.53

Geometrically, the singularities of @xmath correspond to degenerated
configurations where both the three points coincide and the directions
between the points coincide, see Figure 5.12 .

#### 5.4.3 n=4.

###### Lemma 5.54

Define

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

-    If @xmath , then

      -- -------- --
         @xmath   
      -- -------- --

    If @xmath , then

      -- -------- --
         @xmath   
      -- -------- --

    If @xmath , then

      -- -------- --
         @xmath   
      -- -------- --

-   @xmath .

###### Proof..

As @xmath on @xmath , it follows that @xmath . As @xmath , we arrive at

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Add @xmath times this last equation to @xmath and substitute @xmath for
@xmath . This gives that @xmath , resulting in the formula for @xmath .
The formula for @xmath is obtained by adding @xmath to @xmath and
substituting @xmath for @xmath . Substitute the expression for @xmath in
@xmath , multiply by @xmath and reorder:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The last equation holds in two cases. In the first case, @xmath . But
from the expressions for @xmath and @xmath it follows that then @xmath
and @xmath as well, while no conditions are set on the slopes. In the
other case @xmath , while for @xmath and @xmath the two formulas in the
Lemma hold. The equations in case of @xmath and @xmath follow by
relabeling. This proves the first claim. The second claim follows by
inspection. ∎

###### Corollary 5.55

@xmath @xmath @xmath .

###### Proof..

This follows from the proof of Lemma 5.54 : The variety @xmath contains
@xmath as a component, without the condition that @xmath . ∎

###### Remark 5.56

Corollary 5.55 and its proof explain why we have added the @xmath ’s in
the definition of triangle variety @xmath , cf. Definition 5.48 .

###### Lemma 5.57

A configuration @xmath is singular iff, up to relabeling, both @xmath
and @xmath .

###### Proof..

Consider the Jacobian @xmath of @xmath and apply Definition 5.51 . The
Jacobian of @xmath where the nine variables are in the order @xmath ,
@xmath , @xmath , @xmath , @xmath , @xmath , @xmath , @xmath , @xmath is
given by:

  -- -------- --
     @xmath   
  -- -------- --

The dimension of @xmath equals @xmath . Therefore, a configuration is
singular iff the rank of its Jacobian is equal to or smaller than @xmath
. Denote by @xmath the submatrix of @xmath consisting of columns @xmath
, @xmath and @xmath where the fourth row is deleted. We distinguish
several cases, by considering the number of distinct clusters of
coinciding points in @xmath .

-    [ @xmath clusters] We may assume that @xmath , @xmath , @xmath and
    @xmath . Consider @xmath :

      -- -------- --
         @xmath   
      -- -------- --

    The determinant of @xmath equals @xmath . This implies
    non-singularity.

-    [ @xmath clusters: (2,2)] We may assume that @xmath and that @xmath
    . In this case the determinant of @xmath equals @xmath , which
    implies non-singularity .

-    [ @xmath clusters: (3,1)] See also Figure 5.13 . Assume that for
    @xmath it holds that @xmath ; that @xmath and that @xmath . As a
    consequence @xmath . It follows that the first and last row @xmath
    vanishes. Therefore, @xmath is singular. If we only assume that
    @xmath and that @xmath , then the determinants @xmath and @xmath
    show that the condition @xmath is necessary for a singularity.

-    [ @xmath cluster] It holds that @xmath . Consider @xmath . First
    assume that the last row of @xmath equals zero. As @xmath on @xmath
    this means that we are looking for solutions of the system of
    equations

      -- -------- --
         @xmath   
      -- -------- --

    Applying Mathematica’s Reduce function results in 10 reductions.
    Each of these 10 reductions contains equations of the form @xmath .
    We are left with the case that some @xmath . If @xmath , then the
    determinants of all @xmath submatrices of @xmath vanish. This gives
    a system of nine equations that can be reduced to the six equations
    of the form @xmath , that is, five slopes are equal. Again, each of
    these equations contains a condition of the form @xmath . ∎

###### Remark 5.58

The singularities of @xmath are closely related to the singularities of
@xmath . The singularity in the (3,1) case is of type @xmath just as for
@xmath . But if all points coincide a more complicated singularity
occurs as several @xmath singularities ‘meet’: one can move any of the
four points away in such a way that the three remaining points are as in
the configuration of Lemma 5.52 .

It is still an open question whether @xmath . Maybe we need to add some
relations or inequalities to @xmath to obtain equality?

## Chapter 6 Continuity of the Voronoi map.

In Chapter 4 we have introduced the compactification @xmath of the graph
of the angle map, applied to @xmath distinct point in the plane. By
means of the extended definition of Voronoi diagram, as introduced in
Chapter 3, we are able to consider the Voronoi diagram @xmath of a data
set @xmath . The main result of this chapter is Theorem 6.11 . It
states, up to a compactness condition, that two data sets @xmath and
@xmath in @xmath that are Euclidean close, have Voronoi diagrams that
are Hausdorff close. That is, the Voronoi diagram generated by a set of
not necessarily distinct points and the angles between those points does
not change dramatically if we perturb both the points and the angles
only slightly.

### 6.1 Introduction.

In Chapters 3 and 4 we have extended the notion of Voronoi diagram to
configurations of points together with the angles between the points.
This allows us to consider Voronoi diagrams of point sets that include
coinciding points. More precisely, in Section 5.1.3 , we have introduced
a compactification @xmath , as the closure of the graph of the angle map

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The angle map @xmath maps a set @xmath of @xmath distinct points in the
plane to the angles in @xmath between the points in @xmath .

In this chapter we call the elements @xmath , consisting of @xmath
points in @xmath and @xmath angles in @xmath , data sets. With any data
set @xmath , we associate a Voronoi diagram @xmath in Section 6.2 .

One can wonder whether the data sets are a robust way of storing Voronoi
diagrams. That is, we consider the following question: if we perturb a
data set @xmath slightly, how does the corresponding Voronoi diagram
@xmath change? By perturbing a data set @xmath we mean that both the
points components and the angle components of @xmath are allowed to be
perturbed slightly, as long as the perturbed data set @xmath is again in
@xmath . A first result is given in Theorem 6.1 , that is a kind of one
point continuity theorem. It states that a point @xmath that was on the
one-skeleton of a Voronoi diagram @xmath before perturbing, cannot be
too far from the one skeleton of the Voronoi diagram of the perturbed
data set.

Before we are able to give a more general continuity result, we first
need a suitable metric on the set of Voronoi diagrams. A metric that is
often used to compare pictures, is the so-called Hausdorff metric. Two
subsets @xmath and @xmath of @xmath are close to each other in the
Hausdorff metric, iff the maximal Euclidean distance from any point
@xmath to the set @xmath is small and vice versa. For a precise
definition, see Section 6.4 .

In order to prove a continuity theorem with respect to the Hausdorff
metric, we have to add some restrictions to our underlying point
configurations. We add four so-called camera points, points that are
very far away around our configuration. Now we restrict the
configurations we are interested in to a relatively small bounded subset
of the plane. If we only change the configurations within this subset,
the camera points guarantee us that the Voronoi diagrams of the
configurations are not changing outside a second, larger bounded subset
of the plane. But then we are ready for proving the main result of this
chapter: Theorem 6.11 states that, up to the compactness condition, two
data sets that are Euclidean close, have Voronoi diagrams that are
Hausdorff close. Note that it is essential that the continuity theorem
holds on the whole of the chosen compact subset of @xmath : that is, the
points added to the graph of @xmath by taking the closure are essential
as there availability is used in the proof of Theorem 6.11 .

### 6.2 Preliminaries.

Throughout this chapter we compare data sets @xmath . Write

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

and similarly @xmath . We say that @xmath is within distance @xmath of
@xmath , notation @xmath , iff

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Here, @xmath denotes the ordinary Euclidean distance on @xmath and
@xmath .

From Section 4.4 we recall the definition of Voronoi diagram in terms of
not necessarily non-coinciding points in the plane and directed angles
between those points. This enables us to define for any @xmath a Voronoi
diagram @xmath . In Section 2.2 we have seen that the Voronoi cell of a
generator @xmath can be written as the intersection of all Voronoi
half-planes @xmath . We use this characterization to introduce the
Voronoi cell of a point @xmath .

Fix two points @xmath and @xmath . The bisection point @xmath is the
point @xmath . If @xmath , the bisection point is just the middle of the
line segment @xmath . If @xmath then @xmath coincides with the double
point @xmath . The perpendicular bisector @xmath is the line through
@xmath perpendicular to the angle @xmath . Let @xmath be any non-zero
vector, pointing in the direction @xmath . The Voronoi half-plane @xmath
is the half-plane defined by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The Voronoi cell @xmath is defined as

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

A point @xmath is on the Voronoi edge @xmath iff it is on the
intersection of the Voronoi cells @xmath and @xmath , that is

  -- -------- -- -------- --
     @xmath      @xmath   
  -- -------- -- -------- --

The Voronoi diagram is the family of subsets of @xmath consisting of the
Voronoi cells @xmath and all of their intersections. The one-skeleton of
the Voronoi diagram is the union of the boundaries of the Voronoi cells.
Note that the notion of one-skeleton equals the notion of shape of a
Voronoi diagram, introduced in Section 4.4.1 .

### 6.3 One point continuity.

In this section we prove the following theorem.

###### Theorem 6.1

Let @xmath be a set of data representing @xmath generators in @xmath and
@xmath angles in @xmath between these generators. Suppose that @xmath is
on the one-skeleton of the corresponding Voronoi diagram @xmath . Then
for every @xmath there exists @xmath , such that when we perturb @xmath
by not more than @xmath , the one-skeleton of any perturbed diagram is
within distance @xmath of @xmath .

In order to prove this theorem, we perform the following steps:

-   We decrease @xmath a finite number of times: for every pair of
    generators @xmath whose bisector @xmath does not pass through @xmath
    we decrease @xmath , if necessary, in such a way that

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

-   For every pair of generators @xmath we show how to choose @xmath .
    If @xmath before perturbing then after perturbing by @xmath ,

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

    If @xmath before perturbing then after perturbing by @xmath ,

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

    Of course this last statement can only hold if we adjust @xmath as
    indicated above.

-   Set @xmath .

These steps gives us enough control on the bisectors to complete the
proof. We first show that the bisection point of two generators @xmath
and @xmath can not get more perturbed than the generators themselves.

###### Lemma 6.2

Let @xmath and @xmath be two points in the plane. Let @xmath . If @xmath
, then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

@xmath = @xmath = @xmath @xmath @xmath @xmath @xmath . ∎

We apply Lemma 6.2 in choosing @xmath such that a bisector @xmath that
passes through @xmath before perturbation still passes through @xmath
after perturbation.

###### Lemma 6.3

Let @xmath , @xmath and @xmath be data from @xmath such that @xmath .
Write @xmath . Let

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

If @xmath then the bisector @xmath passes through @xmath .

###### Proof..

We treat the perturbation of the bisector angle @xmath and the bisection
point @xmath separately and add up the maximal effect. Let @xmath be the
image of a rotation over @xmath around @xmath of the line @xmath . Then
@xmath is at distance @xmath of @xmath . Moreover, from Lemma 6.2 it
follows that @xmath . Let @xmath . Adding up the two effects gives that
@xmath . We want @xmath to be smaller than @xmath . As @xmath is a
majorant for @xmath , we are safe if we ensure, as claimed, that @xmath
. ∎

The next lemma gives a value of @xmath that ensures that a bisector that
misses @xmath before perturbation, stays away far enough from @xmath
after perturbation.

###### Lemma 6.4

Let @xmath and @xmath be data from @xmath . Let @xmath be such that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Write @xmath . The angle between the bisector @xmath and the line
through @xmath and @xmath is denoted by @xmath . Let

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

If @xmath then @xmath .

###### Proof..

First we show that indeed @xmath . As @xmath it follows that @xmath . We
treat the perturbation of the bisector angle @xmath and the bisection
point @xmath separately and add up the maximal effect. Let @xmath be the
image of a rotation over @xmath around @xmath of the line @xmath . The
distance @xmath of @xmath to @xmath s given by @xmath . Here @xmath ,
see also Figure 6.1 . Moreover, from Lemma 6.2 it follows that @xmath
This implies that the composite minimal distance, that is the distance
of @xmath to @xmath could become as small as @xmath . We want this
distance @xmath to stay bigger than @xmath . As @xmath is a minorant of
@xmath we are safe if we ensure, as claimed, that

  -- -------- --
     @xmath   
  -- -------- --

The following corollary is obvious but useful.

###### Corollary 6.5

Let @xmath and @xmath be as in Lemma 6.4 . Suppose that @xmath is
perturbed by a vector of length at most @xmath . For every point @xmath
it holds that

  -- -------- -- -------- --
     @xmath      @xmath   
  -- -------- -- -------- --

where @xmath denotes the Voronoi half-plane of generators @xmath and
@xmath containing @xmath .

We are ready to prove Theorem 6.1 .

###### Proof of Theorem 6.1..

Let @xmath be on the @xmath -skeleton of @xmath before perturbation. Let
@xmath . Adjust @xmath a finite number of times: for every pair of
generators @xmath whose bisector @xmath does not pass through @xmath we
set

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

This ensures that for every such pair @xmath it holds that @xmath .

Next determine a @xmath for every pair of generators in such a way that
i) if @xmath , then the condition in Lemma 6.3 is fulfilled; ii) if
@xmath , then the condition of Lemma 6.4 is fulfilled. Let @xmath be the
minimum of all these @xmath , that is, @xmath . Define

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Consequently, @xmath has at least two elements. Say @xmath , for some
@xmath . Before perturbation it holds that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Suppose that, after perturbation, @xmath , for some generator @xmath .
We show that this leads to a contradiction. First note that @xmath leads
to a contradiction immediately: we can apply Lemma 6.3 . This implies
that after perturbation some bisector @xmath passes through @xmath . We
are left with the case that @xmath . Fix a point @xmath such that @xmath
is not on any bisector before or after perturbation. Then

  -------- ---------------------------
  @xmath   before perturbation, say,
  @xmath   after perturbation.
  -------- ---------------------------

We concentrate on the bisector @xmath now. If @xmath before
perturbation, we apply Corollary 6.5 : any point in @xmath stays in the
same half-plane @xmath . As a consequence, @xmath before and after
perturbation. This is in contradiction with our assumption that @xmath
after perturbation. So @xmath before perturbation. This implies that

  -- -------- --
     @xmath   
  -- -------- --

after perturbation: a contradiction with our assumption as well. ∎

### 6.4 The distance between two Voronoi diagrams.

#### 6.4.1 Hausdorff distance.

If we want to compare two Voronoi diagrams, a suitable notion of
distance is the Hausdorff distance: two sets @xmath and @xmath are
within Hausdorff distance r iff @xmath is the smallest number such that
any point of @xmath is within distance @xmath from some point of @xmath
and vice versa. Let us give this definition more formally. Suppose we
have a metric space @xmath . For @xmath and @xmath we define the open
neighborhood @xmath as the set

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Think of @xmath as the territorial border of @xmath .

###### Definition 6.6

Let @xmath be a metric space. The Hausdorff distance @xmath between two
subsets @xmath is defined as @xmath .

The Hausdorff distance @xmath defines a metric on the set of nonempty
compact subsets of @xmath , see [ Ca ] . Note that

  -- -------- -- -------- --
     @xmath      @xmath   
  -- -------- -- -------- --

#### 6.4.2 A compactness condition.

In this section we put a compactness condition on the configuration
space of data sets. It consists of two ingredients. Suppose that @xmath
denotes the underlying point set of some data set @xmath . First we
restrict the domain of @xmath to a closed disk @xmath . Moreover, we add
four camera points @xmath and @xmath far away outside @xmath . Lemma 6.8
shows that we can choose @xmath and @xmath and @xmath in such a way that
it is guaranteed that the Voronoi diagram of @xmath , extended with
@xmath and @xmath , changes inside some compact subset of the plane
only, provided that we perturb @xmath within @xmath .

For @xmath we choose the unit disk, that is @xmath .

###### Definition 6.7

Let @xmath be a set of data representing @xmath generators @xmath in
@xmath and @xmath angles in @xmath between those generators. Let
furthermore

  -- -------- --
     @xmath   
  -- -------- --

for some @xmath be the so-called camera points . The Voronoi diagram
with camera points @xmath is the Voronoi diagram of the data set @xmath
, which consists of the generators @xmath and the @xmath angles between
those generators.

###### Lemma 6.8

Let @xmath and let @xmath . Then @xmath does not change, provided that
@xmath is perturbed inside @xmath .

###### Proof..

Let @xmath be an arbitrary point in @xmath . It is enough to show that
@xmath is always closer to at least one camera point than to @xmath .
Using the symmetry we can assume, without loss of generality, that
@xmath . So it is enough to show that @xmath or, equivalently, that
@xmath . Now,

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
              @xmath   @xmath   
  -- -------- -------- -------- --

is maximal when @xmath . From now on assume that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

As @xmath , we have to show that

  -- -------- --
     @xmath   
  -- -------- --

Substituting @xmath , where @xmath , gives that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Now, @xmath , whenever @xmath , while @xmath whenever @xmath . This
proves the lemma. ∎

### 6.5 Continuity of the Voronoi map.

#### 6.5.1 The Voronoi map.

In our original configuration space, generators live in @xmath . But
under the compactness condition above, generators all live on the unit
disk @xmath and we have four additional camera points, @xmath , @xmath ,
@xmath and @xmath . That is, we have a restricted configuration space

  -- -------- -------- -- --
     @xmath   @xmath      
  -- -------- -------- -- --

Let @xmath be the set of one-skeletons of Voronoi diagrams, defined by
data sets @xmath . Denote by @xmath be the Euclidean metric on @xmath
and by @xmath the Hausdorff metric on @xmath . We show that the map
@xmath ,

  -- -------- --
     @xmath   
  -- -------- --

that maps a data set @xmath to its Voronoi diagram, is continuous. By
definition, this means that we have to show that

  -- -------- -- -------
     @xmath      (6.1)
  -- -------- -- -------

In Theorem 6.1 we have proved that

  -- -------- --
     @xmath   
  -- -------- --

In this formula, @xmath really depends on both the particular position
of @xmath on @xmath and the particular diagram @xmath . The uniform
version of this claim is given by

  -- -------- -- -------
     @xmath      (6.2)
  -- -------- -- -------

###### Remark 6.9

It is clear that ( 6.2 ) does not hold if we regard the one-skeleton of
Voronoi diagrams that correspond with data sets that do not contain the
camera points. Suppose for example that our data consist of two points
@xmath and @xmath that are close to each other. If we fix @xmath , move
@xmath slightly, thereby changing @xmath slightly as well, some point
that was far away on the bisector @xmath before moving @xmath , is on a
big distance from @xmath after disturbance.

#### 6.5.2 @xmath is closed in @xmath.

In this section we show that the set @xmath is closed in @xmath . Or,
equivalently, that the complement @xmath is open. But this means exactly
that we have to prove the following:

  -- -------- --
     @xmath   
  -- -------- --

We do so in the following lemma.

###### Lemma 6.10

Let @xmath be a data set representing @xmath generators in the plane and
@xmath angles between those generators. Suppose that @xmath is in the
interior of Voronoi cell @xmath , for some generator @xmath . Then there
exists @xmath and @xmath such that the following holds: if we perturb
@xmath by not more then @xmath , the one-skeleton of any perturbed
diagram is at distance at least @xmath of @xmath .

###### Proof..

[Determine @xmath .] Start with some @xmath . For every pair of
generators @xmath whose bisector @xmath does not pass through @xmath we
set

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

This ensures that @xmath for every such pair @xmath .

[Determine @xmath .] As a consequence, we can apply Lemma 6.4 for every
pair of generators @xmath whose bisector @xmath does not pass through
@xmath . The lemma gives us @xmath such that any perturbation of the
data by @xmath implies that @xmath after perturbation. Let @xmath be the
minimum of all these @xmath .

[Show that this @xmath works.] Suppose that the claim of the lemma is
not true. This means that after perturbation there are generators @xmath
and @xmath such that both

  -- -------- --
     @xmath   
  -- -------- --

hold. It follows that, after perturbation, @xmath . Because of our
choice of @xmath and @xmath this implies though that @xmath before
perturbation. As @xmath , before perturbation, we conclude that @xmath
and @xmath . But then there exists @xmath such that

  -- -------- --
     @xmath   
  -- -------- --

before perturbation, and

  -- -------- --
     @xmath   
  -- -------- --

after perturbation. This in contradiction with Corollary 6.5 however. ∎

#### 6.5.3 Proof of the continuity.

In this section we prove the following theorem:

###### Theorem 6.11

Let @xmath . Then the Voronoi diagram @xmath of any data set @xmath that
is Euclidean-close to @xmath , is Hausdorff-close to the Voronoi diagram
@xmath :

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

The proof is divided into a number of steps.

Step 1.  It is enough to prove the following assertion.

  -- -------- -- -------
     @xmath      (6.3)
  -- -------- -- -------

In ( 6.3 ) the implication holds for all choices of @xmath on @xmath .
This implies that in fact

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

This together with the fact that we can interchange @xmath and @xmath
defines the Hausdorff distance and therefore implies the claim of the
theorem.

Step 2.  Construct a convergent sequence.
Suppose that Assertion 6.3 does not hold. That means that the negation
must be true, where we replace @xmath by @xmath :

  -- -------- -- -------
     @xmath      (6.4)
  -- -------- -- -------

Fix such @xmath and call it @xmath . We can find for every @xmath a
triple @xmath

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (6.5)
  -- -------- -------- -------- -- -------

such that Assertion 6.4 is true.

Step 3. @xmath .
Recall that @xmath denotes the disk @xmath . Suppose that @xmath for
some @xmath . Then Lemma 6.8 tells us that @xmath , for all @xmath . So
Assertion 6.4 can never be true.

Step 4. Remarks on compactness.
@xmath and @xmath both live in the compact set

  -- -------- --
     @xmath   
  -- -------- --

We have proved in Lemma 6.10 that the set @xmath is closed. This means
that we get a sequence @xmath of triples of the form ( 6.5 ) that live
on a compact set. So, @xmath has some convergent subsequence @xmath that
converges to, say, @xmath . Note that @xmath .

Step 5.  A contradiction by combining Assertion 6.4 and Theorem 6.1 .
Because of convergence, @xmath , so @xmath . Apply Theorem 6.1 with

-   @xmath ,

-   @xmath .

The theorem gives us a @xmath such that

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (6.6)
  -- -------- -------- -------- -- -------

Choose @xmath so big that the following condition hold:

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (6.7)
  -- -------- -------- -------- -- -------

We show that this leads to a contradiction on @xmath .

-   The sequence @xmath is constructed in such a way from Assertion 6.4
    that

      -- -------- -------- -------- -- -------
         @xmath   @xmath   @xmath      (6.8)
      -- -------- -------- -------- -- -------

-   We have chosen @xmath so big, ( 6.7 ), that

      -- -------- -------- -------- -- -------
         @xmath   @xmath   @xmath      (6.9)
      -- -------- -------- -------- -- -------

-   But @xmath is also big enough such that @xmath . Therefore we
    conclude from ( 6.6 ), with @xmath , that

      -- -------- -------- -------- -- --------
         @xmath   @xmath   @xmath      (6.10)
      -- -------- -------- -------- -- --------

    Now ( 6.9 ) combined with ( 6.10 ) gives a contradiction with ( 6.8
    ).

This proves the theorem. ∎

## Chapter 7 Clickable Voronoi diagrams and hook compactifications.

We define a compactification space @xmath of the configuration space of
@xmath distinct points in the plane, by considering data elements of
pairs of points and triples of points. For every pair of points we write
down the angle mod @xmath between the two points, and for every ordered
triple @xmath of points, we specify a hook @xmath . This hook expresses
how to construct the point @xmath given @xmath and @xmath . Now @xmath
is defined as the closure of the image space of all angles and hooks on
@xmath distinct points. We show that configurations that are added by
taking the closure have a natural nested structure, easily revealed by
analyzing the hooks. The main result of this chapter is an explicit
construction establishing @xmath as the graph of a function. This
construction shows that @xmath is a smooth manifold. If we replace the
angles mod @xmath by angles mod @xmath we get a compactification space
@xmath . This space is isomorphic to the manifold with corners @xmath ,
introduced by Kontsevich-Soibelman. On @xmath we define clickable
Voronoi diagrams.

### 7.1 Fulton-MacPherson related models.

In this chapter we describe a compactification @xmath of the
configuration space of @xmath distinct points in the plane. The basic
idea of the compactification consists of considering the geometry of all
pairs and all triples of distinct points. In section 7.2 we give an
overview of the contents of this chapter: it describes in an informal
way the construction and some properties of this compactification @xmath
. And it explains how clickable Voronoi diagrams are related to @xmath .
Sections 7.3 to 7.9 contain the mathematical constructions referred to
in Section 7.2 , while Section 7.10 is devoted to concluding remarks. We
start however in this section by recalling the famous compactification
due to Fulton an MacPherson, and by presenting a related
compactification as described by Kontsevich and Soibelman. These two
compactifications have some important features that we mimic and extend
in our compactification @xmath .

#### 7.1.1 The Fulton-MacPherson compactification.

The following compactification is defined in terms of a nonsingular
algebraic variety. The authors note however, cf. [ FM ] , page 188/189,
that the same constructions work for complex manifolds, as well as for
real manifolds. So, let @xmath be a nonsingular algebraic variety, and
let

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

be the configuration space of @xmath distinct labeled points in @xmath ,
cf. Definition 5.4 . For a subset @xmath of the set of labels @xmath ,
the small diagonal @xmath is given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

For any such @xmath with at least two points, let @xmath be the blow-up
of @xmath along @xmath . For the definition of blow-up, consult [ Ha ] .
There is a natural embedding

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The Fulton-MacPherson compactification @xmath is defined as the closure
of @xmath in this product. We list some properties that are stated
respectively as Theorems 1, 2 and 3 in [ FM ] . The definition of
divisor can be found in [ Ha ] .

-   @xmath is nonsingular.

-   For @xmath , @xmath is the closure of @xmath in the product of the
    @xmath for @xmath of cardinality 2 and 3.

-   For each @xmath with at least two elements, there is a nonsingular
    divisor @xmath such that

    -   The union of these divisors is @xmath .

    -   An intersection of divisors @xmath is nonempty iff the sets
        @xmath are nested in the sense that each pair @xmath and @xmath
        is either disjoint or one is contained in the other.

Important for us is the ‘first geometric description’ of @xmath , as
presented in Section 1 of [ FM ] . A configuration in @xmath is called
degenerate , if not all points in the configuration are distinct. Any
such configuration @xmath is described by a set of data given the
locations of the points, and if two or more points coincide at say
@xmath , then a screen is specified for the set @xmath of labels of the
coinciding points. The data elements describing a screen for @xmath at
@xmath consist of a labeled set of points @xmath in the tangent space
@xmath of @xmath , such that not all points in @xmath are equal. This
process is repeated for @xmath until all points in the configuration
@xmath are separated in some screen. Think of repeatedly zooming in at
clusters of points until all points are separated, cf. Figure 7.10 . The
divisor @xmath of @xmath , mentioned in the property above consists of
all configurations @xmath in @xmath that have a screen that contains
exactly the points @xmath for @xmath in @xmath .

#### 7.1.2 The Fulton-MacPherson operad.

In [ Ko ] and [ KS ] the Fulton-MacPherson operad @xmath is discussed. A
definition of operad can be found in [ Ko ] . As we consider only point
configurations in @xmath , we set @xmath in the sequel. The operad
@xmath is defined as follows, cf. [ KS ] :

-   @xmath .

-   @xmath point.

-   @xmath .

-   For @xmath , the space @xmath is a manifold with corners, its
    interior is @xmath , and all boundary strata are certain products of
    copies of @xmath for @xmath .

A manifold with corners is a topological space that is locally
homeomorphic with @xmath . The space @xmath , @xmath is defined
explicitly as follows.

###### Definition 7.1

For @xmath , the manifold with corners @xmath is the closure of the
image of @xmath in the compact manifold @xmath under the map

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath , @xmath , and @xmath are pairwise distinct indices, @xmath
, and @xmath .

That is, Kontsevich and Soibelman define the space @xmath in terms of
data elements for pairs and triples of points in any reduced
configuration @xmath : for any pair of points they write down the
directed angle between the two points, while for every ordered triple
@xmath of points they specify the ratio @xmath of the line segments
@xmath and @xmath .

#### 7.1.3 Combining the models.

From the Fulton-MacPherson compactification we borrow the screen model,
while from Kontsevich-Soibelman we borrow the angles and ratios. We
extend, however, the ratios to hooks, by marking both the ratio @xmath
of the line segment @xmath and @xmath and the angle @xmath between the
line segments. In this way every hook has two representatives. One with
a positive ratio @xmath and one with a negative ‘ratio’ @xmath . In the
latter case we just add @xmath to the hook angle @xmath . These two
distinct representatives are identified by an equivalence relation
@xmath . This will be important for getting a smooth model. Another
adjustment that we make for obtaining smoothness is that we write down
the angle between two distinct points up to multiples of @xmath instead
of up to @xmath . To summarize, we get a map

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

and define @xmath as the closure of the image of @xmath in @xmath . The
data elements and spaces introduced so far are discussed in detail in
Section 7.3 . In section 7.4 we show that we can associate with any
@xmath a nested set of subsets of @xmath . This is done by analyzing the
ratios. It turns out that for degenerate configurations certain ratios
equal zero. If @xmath is close to zero, then the length of the line
segment @xmath is very small compared to the length of the line segment
@xmath . We then say that @xmath and @xmath coincide with respect to
@xmath .

Combinations of compactifications of configuration spaces and
combinatorics receive a lot of attention in recent years. Elegant
examples can be found in [ De1 ] and [ De2 ] .

### 7.2 Informal introduction.

In this section we introduce most of the terminology that we use in the
rest of the chapter, in a more intuitive setting.

#### 7.2.1 Screens, clusters and nests.

Suppose we are looking at a plane containing @xmath sites . By sites we
mean points, but in order to be able to use points in other contexts, we
prefer the word sites. When we see all @xmath sites at first glance we
are happy, but when we seem to see fewer sites we tend to look more
closely. That is, we zoom in at a site in order to see if it is really
one site, or in fact consists of a number of sites. At the same time we
will lose sight of other sites. We repeat this procedure until we have
found all @xmath sites.

Imagine that the plane is in fact a computer screen . If some sites
coincide, that is, if they form a cluster , we click on the cluster.
Another screen pops up that contains exactly the sites in the cluster.
If we click on a site and nothing happens, we know that at the level we
are looking at, this site does not coincide with another site. So every
non-trivial cluster corresponds to a screen. By continuing to click we
always find all @xmath sites. Label the sites with labels from @xmath to
@xmath and write down the labels that are visible in every screen. This
produces a nest , a nested set of subsets of @xmath , i.e. the clusters.
If no sites coincide the nest consists of the set @xmath only.

The top screen is the first screen we see. It contains all sites, but
maybe not all sites are separated. We organize things in such a way that
every screen contains at least @xmath non-coinciding sites. That is, in
every screen at least two sites are separated. We are not interested
where in the plane a screen focuses. But we do want to know the exact
relative position of the sites. We conclude that we consider site sets
up to scaling and translation .

#### 7.2.2 Pinpointing sites.

We want to describe such a family of screens filled by sites. A naive
approach is by listing the screens together with the coordinates of the
sites that occur in each screen. This may describe the situation well
when the sites do not move, but assume that two sites @xmath and @xmath
that did coincide first in some screen start moving apart. This could
change the relative positions of the sites in all screens were both
@xmath and @xmath occur, but it is not at all clear how a change in
coordinates in one screen should influence coordinates in other screens.

Instead of marking coordinates of the sites involved, we mark the angle
@xmath between any two sites @xmath and @xmath and the hook @xmath
between any ordered triple @xmath of sites. A hook @xmath consists of an
angle @xmath and a ratio @xmath . Consider Figure 7.1 . Suppose that the
sites @xmath and @xmath , thus the leg @xmath have been constructed. If
we rotate @xmath by angle @xmath with respect to center of rotation
@xmath and multiply the image of the rotation by @xmath , we get @xmath
.

Using these hooks and angles we can fill a screen with sites. Suppose
that for a set of distinct sites @xmath we know all hooks and angles
between the sites. We show how to fill a screen with the sites. We put
@xmath in the origin, as we do not care about translation. As we do not
care about scaling either, we put @xmath at distance @xmath of @xmath .
We use the angle @xmath to assure that the line through @xmath and
@xmath has the right direction, that is, we set @xmath . All other sites
@xmath , for @xmath , can be constructed as in Figure 7.1 by a hook
@xmath .

#### 7.2.3 Degenerate configurations.

Let @xmath be the configuration space of @xmath distinct sites in the
plane and let @xmath be the map that maps an element @xmath to the
@xmath angles and the @xmath hooks between the sites. In fact we embed
the image space in a slightly bigger space @xmath , allowing also
negative ratios. The space that we are really interested in is the
closure of the image of @xmath in @xmath . We call this space @xmath .
Most points @xmath can be realized as image points of a configuration
@xmath , that is @xmath . We call a point @xmath degenerate if @xmath .
It turns out that the degenerate points are exactly those points @xmath
such that at least one ratio coordinate @xmath .

We go back to the nests and screens. By analyzing the set of all @xmath
in some point @xmath , we can associate a nest @xmath with @xmath . If
no @xmath , we think of @xmath as the image of a configuration where all
sites are distinct, and in this case we associate the nest @xmath with
@xmath . And with this nest we associate exactly one screen where all
@xmath sites occur and are distinct. In the other case at least one
@xmath . As we can introduce @xmath for distinct sites, we think of
@xmath as if @xmath is very close to @xmath as seen from @xmath . But
this means exactly that @xmath and @xmath form a cluster with respect to
@xmath . In fact, one can prove that the set @xmath consisting basically
of all sets @xmath defines a nest on @xmath . So @xmath is the nest that
corresponds to @xmath . For every cluster in @xmath with at least two
elements we define a screen as a copy of the plane.

#### 7.2.4 Factorizing @xmath.

Fix some @xmath . By analyzing the @xmath as explained above, we
associate a family of screens with @xmath denoted by @xmath - screens .
Our next goal is to fill the @xmath -screens. The main idea of working
with screens is as follows: the site set @xmath that we think of as
corresponding to some degenerate configuration @xmath , should be
separated completely, somewhere in the hierarchy of @xmath -screens.
This puts a requirement on those points @xmath that we can use to fill
the @xmath -screens with: the point @xmath should not be more nested
than @xmath itself, in the following sense: if @xmath , then also @xmath
. Another way to put this: we are not allowed to move down in the
stratification with respect to the coincidence of sites. We do not need
all @xmath data elements

  -- -------- --
     @xmath   
  -- -------- --

for filling the @xmath -screens with sites @xmath , given some suitable
@xmath . We just need enough data elements to pinpoint each site once.
By exploiting the nested structure of @xmath , we can avoid bad choices
in picking the data elements. We do not want to be confronted with legs
of length @xmath for example. These prerequisites result in a factor
@xmath of data elements of @xmath that are both suited and enough to
fill the @xmath -screens, given some suitable @xmath . Note that the
choice of the data elements depends on @xmath , although we use of
course the data elements of @xmath itself in order to fill the @xmath
-screens with sites @xmath .

#### 7.2.5 The hooked tree.

Again by using the nested structure of our fixed @xmath , we can define
a partial order on the labels @xmath . This partial order tells in which
order exactly we have to add the @xmath -sites @xmath in the @xmath
-screens. It turns out that with every label @xmath we can associate an
@xmath - tag @xmath . Such an @xmath -tag is a pointer to one coordinate
of @xmath . As any such coordinate is either an angle or a hook, we
conclude that every label @xmath corresponds to a geometric construction
(construct @xmath as the end of a line segment of a given angle, or
construct @xmath as the end point of a given hook) that tells how to
construct @xmath .

We store the set of @xmath -clusters in a tree. The vertices of the tree
are exactly the @xmath -clusters. Two @xmath -clusters are connected by
an edge if one cluster is maximal in the other. Some edges are labeled
by @xmath -tags. This is done in such a way that if going up in the tree
from leaf @xmath , the first @xmath -tag encountered points exactly to
that hook or angle that is used to construct @xmath in the set of @xmath
-screens. This tree is called the hooked tree .

#### 7.2.6 Filling screens.

We discuss the use of the partial order a bit further. Our setup is such
that in each @xmath -screen separation occurs. Fix some @xmath -screen
@xmath . As mentioned above, any @xmath -screen @xmath corresponds to
some @xmath -cluster @xmath . Assume that all @xmath -screens @xmath ,
such that the cluster @xmath contains @xmath , have already been filled.
We say that such screens @xmath are above @xmath . The @xmath -screen
@xmath should exactly contain the sites with labels in the @xmath
-cluster @xmath after filling. Moreover, the sites corresponding to the
maximal subclusters of @xmath are separated in the @xmath -screen @xmath
. Let @xmath be the maximal subcluster of @xmath with smallest minimal
label @xmath and let @xmath be the maximal subcluster with second
smallest minimal label. The first site we put in @xmath is the site
@xmath , that we place at the origin. The second site to construct is
the site @xmath , that we place at distance @xmath of @xmath . The angle
that the line segment @xmath makes with the positive axis is the
so-called screen orientation @xmath of @xmath . It is defined
recursively in terms of the screens above @xmath . Note that by now we
have constructed one leg @xmath in @xmath . All other sites in @xmath
can be constructed using hooks.

Suppose, for instance, that we want to construct all sites in some
maximal subcluster @xmath , where @xmath is the minimal label of @xmath
and therefore @xmath . We construct @xmath by means of a hook @xmath .
One can think of this hook as a hook on scale , as @xmath and @xmath are
separated at the same level. Note that @xmath is automatically minimal
in the maximal subcluster of @xmath that has smallest minimal label. Let
@xmath , with @xmath , be minimal in the second maximal subcluster of
@xmath . We construct @xmath using @xmath . This is a different type of
hook as @xmath and @xmath are separated one step deeper in the nest
structure. Think of this type of hook as a explosion hook : for @xmath
itself @xmath , as @xmath and @xmath ‘coincide with respect to @xmath ’.
If we take an arbitrary point @xmath , then @xmath , and if @xmath we
could say that an explosion occurs, as suddenly @xmath and @xmath do not
coincide anymore with respect to @xmath .

#### 7.2.7 @xmath is locally the graph of a function.

One purpose of this setup is to minimize the dimension of the factor
@xmath , that is, we want to use as few data elements of @xmath for
filling the @xmath -screens as possible. That we cannot do better is
shown by Lemma 7.31 that proves that the dimension of the factor @xmath
equals the dimension of the reduced configuration space @xmath . Given a
set of filled @xmath -screens, we can just read off angles and hooks
from the screens. Theorem 7.58 proves that filling screens using data
elements is consistent with reading off data elements, in the sense that
we get back the data elements that we started with. Note that besides
the data elements in the @xmath factor, we can also read off the data
elements in the complementary factor @xmath of @xmath in the space of
all angles and hooks on @xmath points, @xmath . This shows that @xmath
can be written as the graph of some function @xmath . As a consequence,
we can prove in Theorem 7.61 that @xmath is a smooth manifold. In fact
there are some extra requirements on the structure presented to obtain
smoothness that we did not discuss here. Details can be found in
Sections 7.3 to 7.8 .

#### 7.2.8 Connection with Kontsevich-Soibelman.

In [ KS ] , see also Section 7.1.2 , Kontsevich and Soibelman describe a
manifold with corners @xmath that is closely related to our smooth
manifold @xmath . The exact relation is given in Theorem 7.65 that
describes a map @xmath together with the fibers of @xmath . Due to this
close relation we can use the construction of the filled @xmath -screens
for points @xmath as well. This is important in the following
application. For an overview of the compactifications introduced so far,
consult Table 7.1 .

#### 7.2.9 Adding Voronoi diagrams in the @xmath-screens.

We apply the construction of filled @xmath -screens to the analysis of
Voronoi diagrams of points sets that may include coinciding points. We
proceed by associating a Voronoi diagram to any point @xmath . First,
consider some non-degenerate point @xmath . Then by definition, as in
the @xmath case, @xmath can be expressed as image of some configuration
@xmath . As no @xmath for a non-degenerate @xmath , there is exactly one
@xmath -screen associated with @xmath , the top screen, that contains
all sites @xmath in such a way that all sites are distinct. The Voronoi
diagram @xmath associated to @xmath in this case is the Voronoi diagram
of the @xmath sites in the top screen.

Next assume that @xmath is a degenerate element of @xmath . Suppose that
we have filled the @xmath -screens with the @xmath -sites @xmath as
described above. In this case, there is more then one @xmath -screen,
but it is guaranteed that in any @xmath -screen @xmath exactly those
clusters are separated that are maximal subclusters of the cluster
@xmath . We define a Voronoi diagram @xmath in terms of the @xmath
-filled @xmath -screens in two steps. In the first step we add the
classic Voronoi diagram of the maximal subclusters of @xmath to any
@xmath -screen @xmath . This is called the initialization step. In the
so-called completion step we recursively add the completed diagrams of
all screens below @xmath to @xmath for all @xmath -screens @xmath . This
is done as follows. A non-trivial cluster is a cluster that consists of
at least two sites. Any non-trivial maximal cluster @xmath of @xmath
corresponds to an @xmath -screen @xmath that is directly below @xmath .
We paste the completed Voronoi diagram @xmath of @xmath into the Voronoi
cell of @xmath in the initialized Voronoi diagram @xmath .

This gives us a clickable Voronoi diagram @xmath for any @xmath . By
clicking on a non-trivial maximal cluster, if present, a screen appears.
This screen contains the sites in the cluster and the Voronoi diagram of
the sites. Recall the polynomial sites from Chapter 4 . By computing
ratios and angles we can associate an element @xmath to a set @xmath of
polynomial sites. Then the completed Voronoi diagram @xmath of the top
screen @xmath for @xmath matches the limit Voronoi diagram of @xmath at
@xmath .

### 7.3 Angles and hooks.

We start this section by recalling and introducing data elements defined
on pairs and triples of distinct points in @xmath . These data elements
form the basis of the compactification of a suitable quotient of the
configuration space of @xmath distinct points in the plane that we
define later on in this section.

#### 7.3.1 Data elements of pairs and triples of points.

Given two distinct points @xmath and @xmath , we can determine the angle
between the line through @xmath and @xmath and the positive @xmath
-axis. We have done this in Definition 5.1 . There we have introduced
the directed angle @xmath and the undirected angle @xmath . We store
information on the geometry of three distinct points in hooks, see
Figure 7.3 .

###### Definition 7.2

Let @xmath , @xmath , and @xmath be three distinct points in the plane.
The angle @xmath from @xmath to @xmath hinged at @xmath is given by
@xmath . The ratio @xmath from @xmath to @xmath hinged at @xmath is
given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The hook @xmath from @xmath to @xmath hinged at @xmath equals the ratio
together with the angle: @xmath . The point @xmath is the hinge point of
the hook @xmath while the line segments @xmath and @xmath form its legs
.

Note that one triple of distinct points gives six hooks.

###### Remark 7.3

An alternative is to consider hooks in the complex plane. Let @xmath ,
@xmath , and @xmath be distinct points in @xmath . Note that @xmath . It
is easy to check that, with @xmath , it holds that

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

#### 7.3.2 Geometric interpretation of the hook @xmath.

###### Notation 7.4

Let @xmath and @xmath be points in the plane and @xmath an angle. By
@xmath denote the image of @xmath under the anti-clockwise rotation
around @xmath by angle @xmath . We abbreviate @xmath by @xmath .

Suppose we are given two distinct points @xmath and @xmath , together
with a hook @xmath . The hook @xmath can be seen as a prescription that
tells how to construct the point @xmath . Using @xmath , we first
construct @xmath , the image of the rotation @xmath , applied to @xmath
:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The half-line that starts in @xmath and passes through @xmath contains
@xmath . The ratio @xmath fixes the distance from @xmath to @xmath ,
thereby fixing @xmath itself:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Summary : we interpret a hook @xmath as a point rotation followed by a
vector multiplication. As a result the leg @xmath is transformed into
the leg @xmath .

#### 7.3.3 Negative ratios.

In this section we give sense to ‘negative ratios’, as illustrated by
Figure 7.4 . Think of the line through the points @xmath and @xmath as a
local coordinate axis @xmath . The origin on this axis is @xmath and the
point with coordinate @xmath is @xmath . The position of @xmath on this
axis is given by the coordinate @xmath . In this setting, any value of
@xmath in the interval @xmath is meaningful: it just indicates the point
with coordinate @xmath on the @xmath -axis. Suppose we allow the full
interval @xmath for values of @xmath . Then there are two different ways
to construct a point @xmath by a hook @xmath , given the points @xmath
and @xmath . The hooks @xmath and @xmath both result in the same point
@xmath . If identifying @xmath with @xmath , we have by now described a
map

  -- -------- --
     @xmath   
  -- -------- --

under the identification

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (7.1)
  -- -------- -------- -------- -- -------

Recall that @xmath denotes the configuration space of three distinct
points in the plane. @xmath denotes the projective line . It can be
defined as @xmath with antipodal points identified. A point on the
projective line can be seen as the coordinate @xmath of a third point on
an axis with respect to two fixed points @xmath . A homeomorphism from
the circle to the line @xmath given by stereographic projection is shown
in Figure 7.5 . A line through @xmath intersects the circle in another
point, @xmath , and hits the @xmath -axis in a point @xmath . When
@xmath and @xmath coincide, this line is horizontal, so @xmath is mapped
to @xmath , cf. also [ R ] .

#### 7.3.4 Klein bottle @xmath.

The Klein bottle is the quotient space obtained from a rectangle by
identifying opposite sides, see Figure 7.6 ; see also [ Mu ] . In Figure
7.7 we have depicted another rectangle, but this time we add a
description of the axes. For the horizontal axis we take the projective
line @xmath . The vertical axis is @xmath . Recall the identification
@xmath introduced in 7.1 .

###### Lemma 7.5

The quotient space @xmath defines a Klein bottle.

###### Proof..

Consider Figure 7.7 . Any class in @xmath has a representative in @xmath
. On @xmath , there are three identifications.

-   The periodicity of directed angles in @xmath is indicated by @xmath
    .

-   The identification @xmath is indicated by @xmath .

-   If @xmath holds on the compact set @xmath , then also @xmath , as
    any @xmath corresponds to @xmath . This gives the third
    identification, indicated in Figure 7.7 by @xmath .

For identifying the quotient space we are allowed to cut along @xmath ,
if we eventually paste back again along the same cut. This cut is
indicated by @xmath . We do cut and paste the bottom half on the top
half, applying @xmath and @xmath . This results in the cylinder shown on
the right of Figure 7.7 . On the top of the cylinder, @xmath and @xmath
are directed clockwise, while on the bottom they are directed
counterclockwise. This shows that we are in the situation of Figure 7.6
. ∎

What is essential for us is that the Klein bottle is a smooth manifold.
Note that with every ordered triple @xmath we have associated a Klein
bottle @xmath as the target space of @xmath . We can write @xmath as a
composition: @xmath . The map @xmath maps an ordered triple of distinct
points to its hook @xmath , where @xmath . The second map, @xmath , maps
a hook @xmath to its class @xmath under the equivalence relation @xmath
. We have:

  -- -------- --
     @xmath   
  -- -------- --

###### Proposition 7.6

The map

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

is @xmath to @xmath if @xmath equals @xmath or @xmath and @xmath to
@xmath else.

###### Proof..

The inverse images of @xmath are as follows:

-   @xmath ;

-   @xmath ;

-   @xmath ;

-   @xmath , if @xmath ;

-   @xmath , if @xmath . ∎

###### Remark 7.7

Consider the image on the right in Figure 7.7 . If we cut along @xmath ,
that is, along @xmath , we obtain a Möbius strip with @xmath on the
boundary. Cutting along @xmath , that is, along @xmath , leaves us with
two pieces joined along @xmath . This results in a cylinder with @xmath
on one boundary component and @xmath on the other component.

#### 7.3.5 The data map from @xmath to @xmath.

In this section we describe a map from a set of distinct points in the
plane to all angles and hooks between pairs and triples of those points.
Recall that in Definition 5.4 we have introduced the reduced
configuration space @xmath as the space of @xmath distinct points in the
plane up to scaling and translations. For a representative @xmath of a
class @xmath , write the following data: for every pair of points @xmath
, the undirected angle @xmath ; for every triple @xmath of points in
@xmath , the six hooks @xmath , @xmath , @xmath , @xmath , @xmath , and
@xmath . This gives @xmath unordered angles and @xmath hooks. Note that
the angles and hooks that we obtain are independent of the choice of a
representative of a class @xmath .

###### Definition 7.8

@xmath is the space of hooks and angles on @xmath points:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath denotes the identification defined in 7.1 .

###### Remark 7.9

Being a direct product of circles and Klein bottles, @xmath is smooth.

In the next definition, we introduce a compactification of the reduced
configuration space @xmath .

###### Definition 7.10

The data map @xmath is the map

  -- -------- --
     @xmath   
  -- -------- --

and @xmath is the closure of the image of @xmath in @xmath .

Alternatively we could allow non-negative ratios only, construct a data
map from @xmath to @xmath , and define @xmath as the closure of @xmath
in this product. In this approach, however, ‘jumps’ occur in every hook
@xmath . Indeed, suppose that @xmath are fixed while @xmath moves
‘through’ @xmath . Then the ratio @xmath stays close to zero, but @xmath
jumps to @xmath at collision, as @xmath changes direction, while @xmath
stays the same.

#### 7.3.6 Example: a smooth compactification of @xmath.

Consider three points @xmath , @xmath , and @xmath in the plane. Their
configuration space is given by @xmath Then @xmath is mapped by @xmath
to a rather big space:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Indeed, we can make a smooth compactification of @xmath by mapping it to
a much smaller space:

###### Lemma 7.11

Let @xmath be the map @xmath given by @xmath . Then @xmath . Moreover,
@xmath is smooth.

###### Proof..

We have to show that for every point @xmath and every neighbourhood
@xmath of @xmath it holds that @xmath . Any point @xmath has
coordinates:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

If @xmath , then @xmath , where @xmath , @xmath , and @xmath If ratio
@xmath , then in any neighbourhood of @xmath there exists a point @xmath
such that @xmath , so @xmath . ∎

Later on we prove that @xmath is another smooth compactification of
@xmath . Mapping of @xmath into @xmath has the advantage that there are
no preferred labels.

### 7.4 Nests and screens.

The main result of this section is Theorem 7.21 that associates a nested
set of subsets of @xmath to an element @xmath . This is done by
analyzing those ratios @xmath that are equal to zero.

#### 7.4.1 Clusters, nests, and screens.

###### Definition 7.12

Let @xmath be a collection of sets.

-   @xmath is nested iff either @xmath or @xmath or @xmath for any two
    elements @xmath .

-    A set @xmath is a maximal subset of a set @xmath , w.r.t. some
    nested set @xmath iff @xmath , @xmath and there exists no @xmath
    with @xmath .

-    A nest @xmath on @xmath is a nested set of subsets of @xmath that
    includes the set @xmath itself and all singleton sets @xmath , where
    @xmath .

-    The elements of a nest are called clusters . The singleton sets are
    called the trivial clusters .

###### Example 7.13

The set @xmath is a nest on @xmath . For simplicity, we often write only
the non-obvious elements of @xmath . The obvious elements are the
singleton sets and the total set @xmath . We indicate this by using the
@xmath brackets. In our example we would write @xmath .

Let @xmath be a nest. Associate a copy @xmath of the plane to every
non-trivial cluster @xmath . Every copy is labeled by its corresponding
cluster. In this way we get a family of screens @xmath , associated to
the nest @xmath . In case there is only one non-trivial cluster, we have
exactly one screen, @xmath , where @xmath stands for @xmath . In Example
7.13 we have screens @xmath , @xmath ,, and @xmath .

In this section we show how to associate a nest @xmath to a point @xmath
. In the following sections we describe how to fill the family of
screens @xmath corresponding to a nest @xmath in a meaningful way.

#### 7.4.2 Properties of ratios.

###### Lemma 7.14

Let @xmath , @xmath , @xmath , and @xmath be distinct points in the
plane. Then the following relations hold:

-   @xmath ;

-   @xmath ;

-   @xmath ;

-   @xmath ;

-   @xmath .

###### Proof..

.

-   Follows directly from the definition.

-   @xmath .

-   This is in fact the triangle inequality:

      -- -------- --
         @xmath   
      -- -------- --

-   @xmath .

-   Apply the definition. ∎

###### Corollary 7.15

For @xmath and @xmath , @xmath , @xmath , @xmath distinct labels we have

-   @xmath ;

-   @xmath ;

-   @xmath ;

-    If @xmath , then @xmath .

###### Proof..

The claims follow from Lemma 7.14 by taking limits, but notice that for
@xmath some @xmath can be negative, see Definition 7.8 . ∎

#### 7.4.3 Separating clusters.

###### Remark 7.16

For the rest of this section, we identify a site @xmath with its label
@xmath .

Set

  -- -------- -- -------
     @xmath      (7.2)
  -- -------- -- -------

Intuitively, think of the following. Recall the geometric interpretation
of a hook @xmath given in Section 7.3.2 . Suppose we use @xmath to draw
a point @xmath in the plane, given the points @xmath and @xmath . The
ratio @xmath gives the distance between the points @xmath and @xmath ,
compared to the unit distance @xmath . Imagine an observer situated at
@xmath . When @xmath gets very small, @xmath moves very close to @xmath
. But as long as @xmath , the observer at @xmath still can distinguish
@xmath and @xmath . Therefore one could say in this setting that @xmath
consists of all points @xmath such that @xmath w.r.t. @xmath . We call
@xmath the separating cluster of @xmath and @xmath .

###### Lemma 7.17

We have @xmath .

###### Proof..

Let us start with a heuristic proof: consider Figure 7.8 . Note that
@xmath , @xmath and @xmath . Therefore @xmath and @xmath . We have to
show that @xmath implies that @xmath as well. @xmath only excludes that
@xmath and @xmath coincide w.r.t. @xmath . But this is also the only way
to make @xmath small.
More formally: we have to prove that @xmath implies that @xmath . First
of all: as @xmath it follows that @xmath . Now suppose that @xmath .
Then also @xmath . This contradicts the triangle inequality applied to
@xmath and @xmath . ∎

###### Lemma 7.18

If @xmath and @xmath , then @xmath .

###### Proof..

First, @xmath implies that @xmath . Secondly, as @xmath it follows that
@xmath . So both @xmath and @xmath are finite, which means that we can
apply Corollary 7.15 and get @xmath . ∎

###### Lemma 7.19

Let @xmath and @xmath be distinct labels. Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

If @xmath , then @xmath by Lemma 7.18 . We are left with the case @xmath
. We prove that in this case @xmath . For this purpose, we fix @xmath
and show that @xmath . Since @xmath , it follows that @xmath . Due to
@xmath , one has @xmath , and in particular @xmath is finite. By
Corollary 7.15 , @xmath As a consequence @xmath , so indeed @xmath . ∎

###### Lemma 7.20

If @xmath , then @xmath .

###### Proof..

If @xmath , it follows from Lemma 7.19 that @xmath . Suppose that @xmath
. Then Lemma 7.19 gives @xmath . This implies that @xmath . Therefore,
@xmath . ∎

#### 7.4.4 The clusters form a nest.

###### Theorem 7.21

Fix @xmath . Let @xmath . Then @xmath is a nest on @xmath .

###### Proof..

We have to show that for any clusters @xmath and @xmath either @xmath or
one of them is contained in the other. Lemma 7.19 deals with the case
@xmath : it shows that the nest condition is fulfilled for @xmath and
@xmath . When @xmath the nest condition is fulfilled as well. So, assume
that @xmath , @xmath , @xmath , and @xmath are all distinct and that
@xmath . We have proved in Lemma 7.19 that the following inclusions
hold:

  -- -------- --
     @xmath   
  -- -------- --

The inclusions @xmath and @xmath are still open. There are four
possibilities:

  -------- -------- -------- -------- --------
           1        2        3        4
  @xmath   @xmath   @xmath   @xmath   @xmath
  @xmath   @xmath   @xmath   @xmath   @xmath
  -------- -------- -------- -------- --------

In the first case, @xmath and @xmath are in @xmath . So, @xmath by Lemma
7.20 . In the second case, @xmath . Concentrate on the case 3 now.

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

If @xmath , then @xmath , so both @xmath and @xmath are in @xmath . This
implies that @xmath . When @xmath , we can apply Lemma 7.18 as @xmath
and conclude that @xmath . But this implies that @xmath . As @xmath as
well, it follows that @xmath . The fourth case follows from the third by
relabeling. ∎

From Theorem 7.21 we obtain an important corollary.

###### Corollary 7.22

If @xmath , then @xmath forms a nest.

For @xmath , we call a cluster @xmath an @xmath -cluster . By now, the
following statements are obvious.

###### Corollary 7.23

Let @xmath be a nest. Then

-   @xmath is the smallest cluster of @xmath that contains both @xmath
    and @xmath ;

-   @xmath and @xmath belong to distinct clusters in the screen @xmath .

###### Definition 7.24

Fix @xmath .

-    Let @xmath , for @xmath in @xmath , be a subset of @xmath . The
    separating cluster @xmath of @xmath in @xmath is the smallest
    cluster of @xmath that contains @xmath . The separating screen
    @xmath is the unique screen that contains exactly the elements of
    @xmath .

-    Let @xmath be as in Theorem 7.21 . The @xmath -screens are the
    screens @xmath for @xmath .

Suppose we are given a point @xmath . By determining the clusters @xmath
for @xmath , we find the nest @xmath for @xmath . From the nest, we get
a list of screens @xmath , the @xmath -screens. In this section we
introduce a data structure that enables us to fill the @xmath -screens,
the hooked tree. The hooked tree @xmath encodes both the nest @xmath of
@xmath and the relative positions of the underlying point set @xmath of
@xmath . We define @xmath recursively.

#### 7.4.5 Definition of hooked tree.

###### Definition 7.25

The hooked tree @xmath of a point @xmath is a rooted tree. Some of its
edges have tags. The vertices of @xmath are the clusters of the nest
@xmath . The root is the cluster @xmath . The leaves are the clusters
@xmath . Two clusters are connected by an edge if one of the clusters is
maximal in the other.

The @xmath -tags refer to hooks and angles in @xmath . Fix a cluster
@xmath . Order the maximal subclusters in @xmath according to the
smallest label in each maximal subcluster. Suppose @xmath has maximal
subclusters @xmath with minimal labels

  -- -------- --
     @xmath   
  -- -------- --

If @xmath is not the top cluster @xmath , there exists a cluster @xmath
that contains @xmath as one of its maximal subclusters. Suppose that
@xmath its maximal subclusters have minimal labels

  -- -------- --
     @xmath   
  -- -------- --

Tag the edges from cluster @xmath to its maximal subclusters as follows.

  Edge to @xmath .  

     If @xmath is the top cluster @xmath then the edge from @xmath to
    @xmath is tagged top . Else : no tag.

  Edge to  

    @xmath .

    -    If @xmath is the top cluster @xmath then the edge to @xmath is
        tagged @xmath . Such tag is called an @xmath -type 2.a tag.

    -    Else if @xmath then tag the edge from @xmath to @xmath by
        @xmath . This is an @xmath -type 2.b tag.

    -    Else if @xmath then tag the edge to @xmath by @xmath . This is
        an @xmath -type 2.c tag.

  Edge to @xmath , for @xmath .  

     The edge from @xmath to @xmath , for @xmath , is tagged @xmath .
    This is an @xmath -type 3 tag.

The tag @xmath in @xmath -tags does not stand for the value @xmath , but
rather for a map @xmath . The indices @xmath and @xmath indicate which
particular factor of the form @xmath in @xmath is meant.

###### Definition 7.26

Fix @xmath . Let @xmath be an arbitrary point in @xmath . A @xmath
-coordinate @xmath , respectively, @xmath , @xmath , @xmath is a @xmath
-type 2 hook, respectively, angle, angle, ratio iff @xmath , @xmath ,
@xmath or @xmath occurs in @xmath -tags; @xmath -type 3 hooks, angles,
and ratios are defined in a similar way.

#### 7.4.6 The hooked path.

In this section we associate a unique @xmath -tag to every site @xmath .
Moreover, we show that the hooked tree @xmath induces a partial ordering
on the labels @xmath .

###### Definition 7.27

Fix @xmath .

-    To any site @xmath , for @xmath we associate an @xmath -tag @xmath
    : it is the first @xmath -tag that one encounters when going up in
    @xmath , starting from the leaf @xmath .

-    The predecessor @xmath of @xmath with respect to @xmath , for
    @xmath is defined as follows:

-   @xmath has no predecessor.

-    If @xmath is an @xmath -type 2 tag then @xmath in Definition 7.25 .

    -    In case of @xmath -type 2.a, @xmath .

    -    In case of @xmath -type 2.b, @xmath .

    -    In case of @xmath -type 2.c, @xmath .

-    If @xmath is an @xmath -type 3 tag then @xmath in Definition 7.25
    and @xmath .

-    To a site @xmath , for @xmath we associate a hooked path @xmath :

-   @xmath .

-   @xmath equals @xmath with @xmath prepended.

If a site @xmath occurs in @xmath , then we say that @xmath is @xmath -
above @xmath . If @xmath or @xmath , then we call @xmath an @xmath - leg
.

###### Lemma 7.28

The predecessor relation gives a partial order on the set @xmath .

###### Proof..

We have to show that there are no loops. For this purpose we define the
depth of a site @xmath as the number of edges from the root in @xmath to
the node where the edge that has @xmath as its @xmath -tag starts.
Consider site @xmath . Site @xmath has no predecessor. Assume that
@xmath and that @xmath is its predecessor: @xmath . We claim that either
@xmath @xmath @xmath , or @xmath and @xmath . Indeed, if @xmath is of
@xmath -type 3, then the last case holds. And if @xmath of @xmath -type
2, then @xmath @xmath @xmath . ∎

###### Lemma 7.29

There is a @xmath to @xmath correspondence between the sites @xmath and
the @xmath -tags.

###### Proof..

In Definition 7.27 we have associated an @xmath -tag with every site
@xmath : the @xmath -tag @xmath associated with @xmath is the first tag
one encounters going up from the leaf @xmath in the hooked tree @xmath .
To finish the proof, we turn around the association: we show that for
every @xmath -tag @xmath there is a unique path to a leaf of the hooked
tree such that no other @xmath -tag is encountered. If the edge tagged
@xmath is itself incident with a leaf we are done. So assume that the
edge tagged @xmath does not end in a leaf. Then it ends in a vertex of
the hooked tree corresponding to a cluster @xmath of at least two
elements. By Definition 7.25 only the edge from @xmath to its maximal
subcluster @xmath with minimal label @xmath has no tag. @xmath will also
be the minimal label of every subcluster of @xmath that contains @xmath
. Therefore there is a unique path without labels to @xmath . ∎

#### 7.4.7 @xmath and @xmath.

The @xmath -tags define a factor of @xmath .

###### Definition 7.30

Fix @xmath .

-    The factor @xmath is the factor of @xmath that corresponds to the
    angles and hooks in @xmath -tags. The factor of @xmath complementary
    to @xmath is denoted by @xmath .

-    By @xmath , denote the projection of @xmath onto @xmath ; ‘tv’
    stands for tree values . The projection of @xmath onto @xmath is
    denoted by @xmath , the complementary tree values.

The following lemma states that @xmath @xmath @xmath . This shows that
the hooked tree is optimal in the sense that it refers to as many
coordinates of @xmath as the dimension requires.

###### Lemma 7.31

Let @xmath . Then @xmath .

###### Proof..

The dimension of @xmath is given by the sum of the degrees of freedom in
the hooks and angles referred to by @xmath -tags. Every hook is defined
by one angle @xmath and one ratio @xmath , so the dimension of one hook
equals @xmath . The dimension of a single angle @xmath equals @xmath .
The dimension of ‘top’ is zero. From Lemma 7.29 it follows that the
@xmath -tags refer to @xmath hooks and @xmath angle as there are @xmath
sites and one ‘top’ tag. ∎

#### 7.4.8 Example of a hooked tree.

###### Example 7.32

Let us consider again, as in Example 7.13 , the nest @xmath . A
realization of @xmath consists of the three filled screens @xmath and
@xmath . Recall that @xmath . A possible realization is given in Figure
7.10 . The hooked tree corresponding to @xmath is given in Figure 7.10 .
Note that the dimension of @xmath is indeed @xmath .

The first column of Table 7.2 gives all sites in @xmath . The @xmath
-tags corresponding to each site are shown in the second column. The
third column gives for every @xmath -tag its @xmath -type. The fourth
column gives @xmath coordinates corresponding to the way the @xmath
-screens are filled in Figure 7.10 . How this filling is done exactly,
and the meaning of the fifth and sixth column will be explained later in
this chapter.

From the data for the @xmath coordinates it follows, for example, that
the length of the leg @xmath is zero with respect to the length of the
leg @xmath . And as the length of the leg @xmath is of the same order as
the length of the leg @xmath , it must vanish with respect to the length
of the leg @xmath too. Continuing in this way reveals the complete nest
structure.

### 7.5 Filling @xmath-screens.

In this section we present a method for filling @xmath -screens, given a
suitable point @xmath .

#### 7.5.1 Standard form of @xmath.

First we put a fixed @xmath in standard form: if necessary we change
some representatives in Klein bottles @xmath and/or change the
representative for the top angle @xmath modulo @xmath . We only use the
@xmath factor of @xmath in order to fill the @xmath -screens. Therefore
we only have to choose standard representatives for those angles and
hooks that are referred to in @xmath -tags.

###### Definition 7.33

@xmath is represented in standard form iff

-   @xmath , @xmath of @xmath -type 2 @xmath @xmath , @xmath @xmath and

-   @xmath of @xmath -type 3 @xmath @xmath .

By the following, we do not have to make a sign choice for any @xmath
-type 2 ratio @xmath .

###### Lemma 7.34

Fix @xmath .

-    If @xmath is an @xmath -type 2 hook, then @xmath .

-    If @xmath is an @xmath -type 3 hook, then @xmath .

###### Proof..

Follow the notation of Definition 7.25 . We give a proof for the @xmath
-type 2.b case. The @xmath -type 2.c case is similar and is omitted.
From Definition 7.25 we know that there exists an @xmath -screen @xmath
such that @xmath but @xmath . The claim follows from the definition of
separating cluster, see in particular Equation 7.2 . If @xmath is of
@xmath -type 3, then @xmath , so @xmath . Suppose that @xmath . Then
@xmath , but this would imply that @xmath . That is a contradiction. ∎

Changing an @xmath -type 3 ratio @xmath from negative to positive
involves of course a swap @xmath for the corresponding @xmath -type 3
angle: we have to oblige the Klein bottle identification 7.1 .

###### Remark 7.35

We also refer to @xmath -type 3 hooks, angles and ratios as hooks on
scale , etc. The unique @xmath -type 2.a angle is referred to as top
angle . Hooks, angles and ratios of @xmath -type 2.b or 2.c are also
called explosion hooks , etc.

An explanation for these names can be found in the geometric
interpretation of a hook @xmath , given in Section 7.3.2 . Think of what
changes in the hook @xmath as we start from the fixed value @xmath and
move away from this point in some general direction inside @xmath . If
@xmath is of @xmath -type 2, then @xmath . Perturbing @xmath to @xmath
implies in general that @xmath . In the geometric interpretation, this
has the effect of an explosion. If @xmath is of @xmath -type 3, then
@xmath and shifting @xmath in general direction does not change this. In
our geometric interpretation this means that the transformed leg, before
and after perturbation, has finite but positive length. This explains
the name ‘hook on scale’. The name ‘top angle’ refers to the place of
the @xmath -tag ‘top’ in the hooked tree @xmath .

###### Definition 7.36

Let @xmath be in standard form. A point @xmath is valid with respect to
@xmath iff the following two conditions on the coordinates of @xmath
hold:

  non-orthogonality:  

     no explosion angle is orthogonal to the corresponding angle @xmath
    . The top angle @xmath is not orthogonal to the top angle @xmath .

  finiteness:  

    @xmath for all ratio coordinates @xmath .

###### Remark 7.37

@xmath is valid with respect to @xmath ..

###### Proof..

The non-orthogonality is obvious, while the finiteness follows from
Lemma 7.34 . ∎

#### 7.5.2 Example: ordering the sites for the drawing process.

###### Example 7.38

Figure 7.11 depicts the poset induced by the predecessor relation in our
running example, see also Examples 7.13 and 7.32 . This poset tells us,
for example, that in order to draw @xmath in the top screen, we should
draw @xmath , @xmath , and @xmath first and in that order and, moreover,
that we can ignore @xmath and @xmath . So, the hooked path @xmath is
given by @xmath .

This hooked path @xmath tells us how to draw @xmath in the top @xmath
-screen using @xmath . First @xmath is placed in the origin. Then @xmath
is drawn using @xmath . As by now the leg @xmath exists, we can apply
@xmath in order to add the leg @xmath . Finally, the leg @xmath is
formed by applying @xmath .

#### 7.5.3 The construction @xmath.

Construction 7.41 indicates how to fill @xmath -screens with sites
@xmath , given a valid point @xmath . First we define an ordering on the
@xmath -screens.

###### Definition 7.39

An @xmath -screen @xmath is above an @xmath -screen @xmath iff the set
of labels of @xmath is a subset of the set of labels of @xmath .

The following lemmas relate the @xmath -type of a hook to clusters
@xmath in @xmath .

###### Lemma 7.40

Let @xmath be an @xmath -tag.

-    If @xmath -type @xmath then @xmath .

-    If @xmath -type @xmath then @xmath and moreover, @xmath is directly
    above @xmath .

###### Proof..

We prove the two claims in the Lemma.

-   By construction, an @xmath -type 3 hook involves the minimal labels
    of the first, the second, and another maximal cluster in a fixed
    cluster. Therefore

      -- -------- --
         @xmath   
      -- -------- --

-   Analyzing the cases in Definition 7.25 shows that @xmath points to
    the minimal label in some cluster @xmath and @xmath points to the
    second lowest label in @xmath . Moreover, @xmath is a minimal label
    for one of the maximal clusters of @xmath , the cluster directly
    above @xmath , while @xmath is the minimal label of one of the other
    maximal clusters in @xmath . Therefore

      -- -------- --
         @xmath   
      -- -------- --

###### Lemma 7.41

Let @xmath be a @xmath -cluster. Let @xmath and @xmath be the sites with
minimal labels in the first, resp., the second maximal cluster of @xmath
. Let @xmath , but @xmath , and let @xmath . Then @xmath .

###### Proof..

Let @xmath be the maximal subclusters of @xmath . Suppose that @xmath
for l in @xmath . Suppose that @xmath -type @xmath . By Definition 7.25
, there are two possibilities. Either @xmath has minimal label in @xmath
, and in this case @xmath , @xmath , and @xmath or, @xmath and @xmath
belong all three to @xmath . We are left with the case @xmath -type
@xmath . According to Definition 7.25 , @xmath has minimal label in the
second maximal cluster of some cluster @xmath . As @xmath , this means
that either @xmath equals @xmath or @xmath is a subcluster of @xmath .
It follows from Lemma 7.40 that in both cases @xmath , since these two
sites are contained in the cluster directly above @xmath . ∎

Construction 7.42 ( @xmath ) .
Filling @xmath -screens.

Input: @xmath -screens, valid @xmath .
Output: @xmath -screens filled with @xmath , prescription @xmath .

Step 1. Choosing representatives.
Choose representatives for the top angle @xmath and the explosion angles
@xmath in @xmath . Do so by changing the present value, if necessary, to
the value modulo @xmath most close to the corresponding value @xmath or
@xmath in @xmath . This choice is unique because of the
non-orthogonality condition in Definition 7.36 . See also Figure 7.12 ,
which demonstrates that there always exists a value of @xmath within
distance @xmath of @xmath .

Simultaneously, change the sign of an explosion ratio @xmath whenever
you change the explosion angle by @xmath . Otherwise the @xmath Klein
bottle identification 7.1 is not obliged.

Step 2. Screen orientation.
We define the screen orientation of an @xmath -screen @xmath by
induction on the ‘above’ relation introduced in Definition 7.39 . Assume
that the screen orientation is defined for all @xmath -screens above
@xmath . Let @xmath be the screen directly above @xmath . Following the
labeling in Definition 7.25 , the screen orientation @xmath is defined
by

  -- -------- -- -------
     @xmath      (7.3)
  -- -------- -- -------

Step 3. Drawing the sites.
The recipe for drawing a site @xmath in a screen @xmath for @xmath , is
given inductively, by induction on the predecessor relation. Below,
@xmath denotes the screen directly above @xmath .

1: Site @xmath is the first site in every path @xmath and is drawn in
‘the origin’ in any screen where @xmath occurs.

2: Next suppose that @xmath and that all sites @xmath above @xmath with
@xmath have already been drawn.

3: if @xmath is the first site in the first cluster of @xmath then

4: @xmath is drawn in the origin of @xmath .

5: else if @xmath is the first site in the second cluster of @xmath then

6: put @xmath at @xmath

7: else

8: @xmath , where @xmath and @xmath are above @xmath . By the induction
hypothesis, the leg @xmath is already present in @xmath , see also Lemma
7.41 . The leg @xmath is constructed as follows:

9: Rotate @xmath over @xmath around @xmath .

10: Scale the result by a factor @xmath with respect to @xmath .

11: To summarize,

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (7.4)
  -- -------- -------- -------- -- -------

12: By induction, the length of the leg @xmath is finite. The finiteness
condition in Definition 7.36 assures that the resulting leg @xmath is
finite as well.

###### Remark 7.43

Note that the legs @xmath constructed in @xmath while filling the
screens are exactly the @xmath -legs.

Some drawings are better than others.

###### Definition 7.44

A valid @xmath is accepted with respect to @xmath iff in any @xmath
-screen @xmath filled by @xmath , @xmath -sites that belong to distinct
maximal @xmath -clusters of @xmath do not coincide.

###### Remark 7.45

Suppose that @xmath is valid and accepted. If type @xmath , then @xmath
.

###### Definition 7.46

Every valid and accepted @xmath gives a filling of the @xmath -screens
consisting of @xmath sites. The set of all filled @xmath -screens that
can be obtained in this way is denoted by @xmath .

#### 7.5.4 Example: filling @xmath-screens.

###### Example 7.47

In Figure 7.13 we have filled the @xmath -screens of our running
example, see Examples 7.13 , 7.32 and 7.38 , with the @xmath -values
present in the the fifth column in Table 7.2 . The chosen
representatives for the @xmath -values are given in the last column.
According to Step 2 in Construction 7.41 , we have changed the
representatives for @xmath and @xmath . Let us look more carefully at
the relative positions of the sites @xmath and @xmath in the top screen
@xmath and the screen @xmath . It seems like the complete cluster @xmath
has been rotated over @xmath w.r.t. site @xmath in the bottom screen. In
order to find an explanation, we compute the coordinates of @xmath in
both @xmath and @xmath . The hooked path @xmath equals @xmath . In both
screens @xmath . In the top screen, @xmath , where @xmath . We determine
the position of @xmath in the top screen, using Equation 7.4 :

  -- -------- --
     @xmath   
  -- -------- --

In @xmath , however, @xmath is the first site in the second cluster, so

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

According to Step 2 in Construction 7.41 ,

  -- -------- --
     @xmath   
  -- -------- --

as @xmath , @xmath and @xmath . We conclude that the only difference
between the argument of @xmath in @xmath and @xmath can be caused by
@xmath : this ratio is used in drawing @xmath in @xmath but not used in
drawing @xmath in @xmath . Indeed, sign @xmath , which causes a @xmath
shift in arg @xmath from the top screen to the screen @xmath .

### 7.6 Reading off data elements from filled screens.

Let @xmath . Suppose we have filled the @xmath -screens with @xmath
-sites by applying @xmath . In this section we tell exactly how to read
off angles and hooks coordinates from the @xmath -filled @xmath
-screens. More precisely, we explain how to determine every angle @xmath
between two sites @xmath and @xmath and every hook @xmath between three
sites @xmath , @xmath , and @xmath . Basically we read off lacking
coordinates in a suitable @xmath -screen. Recall the notions of
separating clusters and separating screens that were introduced in
Definition 7.24 . These notions are used for fixing the @xmath -screens
used for determining the angles and hooks coordinates.

###### Remark 7.48

The separating screen @xmath is the only @xmath -screen in which it is
guaranteed that @xmath for @xmath being valid and accepted.

#### 7.6.1 Determining hooks and angles from @xmath.

###### Definition 7.49

Let @xmath be valid and accepted. From @xmath we determine a point
@xmath as follows.

-   @xmath is the angle of the directed line through @xmath and @xmath
    in the @xmath -filled screen @xmath .

-   @xmath .

-    Read off all sites coordinates in screen @xmath . If @xmath in
    @xmath , then

      -- -------- -------- -------- -- -------
         @xmath   @xmath   @xmath      (7.5)
      -- -------- -------- -------- -- -------

    where

      -- -------- -------- -------- -- -------
         @xmath   @xmath   @xmath      (7.6)
      -- -------- -------- -------- -- -------

    Else, @xmath .

Note that by definition of separating screen, not all three sites @xmath
, @xmath , and @xmath coincide in @xmath . Therefore @xmath in @xmath
implies that @xmath .

###### Remark 7.50

We give a geometric explanation for Definition 7.49 . It is rather
straightforward to read off @xmath and @xmath , so let us focus on
@xmath . Go to the separating screen @xmath . Write down the coordinates
of @xmath , @xmath , and @xmath in this screen. First consider the case
where @xmath . If proceeding through the definition in the right order,
we know by now @xmath . See also Figure 7.14 . Use @xmath in order to
rotate the leg @xmath onto the line @xmath through @xmath and @xmath ,
thereby fixing a point @xmath . Finally determine the coordinate of
@xmath on the @xmath -axis with respect to the ‘unit vector’ @xmath as
follows. Let @xmath , @xmath , and @xmath the angle between @xmath and
@xmath . From the definition of dot product @xmath , it follows that the
quantity @xmath we look for is given by @xmath . Note that in our case
@xmath always equals either @xmath or @xmath .

###### Proposition 7.51

The components of @xmath are infinitely often differentiable ( @xmath )
on the set of valid and accepted @xmath .

###### Proof..

The main problem is the continuity of @xmath , so this is stressed in
the proof. To make the proof complete, replace every occurrence of
‘continuous’ by @xmath .

-   @xmath is smooth as a direct product of circles and Klein bottles.
    @xmath is a factor of @xmath and is a product of circles and Klein
    bottles as well. @xmath determines a point in @xmath .

-   We restrict ourselves to valid @xmath . This means that we have
    imposed two conditions on @xmath : the non-orthogonality condition,
    which is is an open condition as it assures that one point of a
    circle @xmath is avoided. The finiteness condition is open as well,
    as one point, infinity, of @xmath is avoided.

-   For valid @xmath , the construction @xmath is defined. The
    construction consists of three steps. First of all representatives
    are chosen for the top angle and explosion angles. The chosen
    representatives depend continuously on @xmath . No jumps can occur
    due to the non-orthogonality condition. In step 2 screen
    orientations @xmath are defined. The formulas presented in Equation
    7.3 , depend continuously on the chosen representatives for @xmath .
    In the third step, points are drawn in the screen. The positions of
    these points depend continuously on the screen orientation @xmath
    and the @xmath coordinates, compare Equation 7.4 .

-   Filled screens that are not accepted are thrown away. A filled
    screen is not accepted when certain clustering between sites occurs.
    Avoiding clustering is yet another open condition.

-   For valid and accepted @xmath , the point @xmath is defined. The
    formulas for the coordinates of @xmath are given in Definition 7.49
    . All equations depend continuously on the position of the sites in
    accepted @xmath . ∎

#### 7.6.2 Example: reading off hooked tree elements.

###### Example 7.52

Applying Definition 7.49 , we read off the values of the angle and hooks
in @xmath from Figure 7.13 . These values are presented in Table 7.3 .
Next to the data elements to read off, the read off screen is given.
Compare the values in Table 7.3 with the values of @xmath in Table 7.2
used above to fill the @xmath -screens. Note that these two sets of
values are indeed the same but only up to identification in the
appropriate Klein bottle.

### 7.7 Consistency Theorem.

In this section we show that our construction of filling screens by
means of hooked tree data is consistent with the procedure of reading
off data from the filled screens.

#### 7.7.1 Managing @xmath-type 3 hooks.

###### Lemma 7.53

Let @xmath be valid and accepted and put @xmath . Suppose that type
@xmath . Then

  -- -------- --
     @xmath   
  -- -------- --

###### Proof..

Follow the labeling in Definition 7.25 : @xmath , @xmath , and @xmath .
For convenience we set @xmath , @xmath and @xmath . By Lemma 7.40 , all
evaluations take place in @xmath -screen @xmath . For an illustration of
the proof, see Figure 7.15 . As @xmath and @xmath it follows that

  -- -------- --
     @xmath   
  -- -------- --

If @xmath , then @xmath , so @xmath . If, on the other hand, @xmath ,
then @xmath . So, @xmath as required. ∎

###### Lemma 7.54

Let @xmath be valid and accepted. Set @xmath . Suppose that type @xmath
. Then

-   @xmath .

-   @xmath .

###### Proof..

As in the proof of Lemma 7.53 set @xmath and conclude from Lemma 7.40
that the read off screen is given by screen @xmath . We use Equation 7.5
for determining @xmath , while remembering that @xmath .

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (7.7)
  -- -------- -------- -------- -- -------

@xmath is given by

  -- -------- --
     @xmath   
  -- -------- --

Therefore @xmath , so @xmath reduces to @xmath . Observe that @xmath and
apply Lemma 7.53 . If @xmath , then @xmath and by evaluating Equation
7.7 it follows that @xmath . If, on the other hand, @xmath , then @xmath
, so @xmath , which implies that @xmath , as claimed. ∎

###### Example 7.55

In the hooked tree in our running example, see Examples 7.13 , 7.32 ,
7.38 , 7.47 and 7.52 , two @xmath -type 3 hooks occur, @xmath and @xmath
. The @xmath -values, that are those values that where used to fill the
@xmath -screens, and the @xmath -values, the values that where read off
from the filled @xmath -screens, are collected in Table 7.4 .

Note that @xmath . According to Lemmas 7.53 and 7.54 this implies that
the representative in @xmath swaps. Indeed, @xmath changes sign, while
@xmath . Ratio @xmath is positive so here nothing should change and this
is reflected in the values in the table.

#### 7.7.2 Managing @xmath-type 2 hooks.

Next lemma shows that in case of a @xmath -type 2 hook, the
representative in the Klein bottle stays the same.

###### Lemma 7.56

Let @xmath be valid and accepted. Put @xmath . Suppose that @xmath -type
@xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

Throughout the proof, we label as in Definition 7.25 . The screen
orientations @xmath for the different cases are defined in Equation 7.3
. Set @xmath and @xmath . We distinguish three possibilities for the
hinge point @xmath .

-   @xmath . In this case, @xmath . First we show that @xmath . In order
    to determine @xmath , we need the coordinates @xmath and @xmath in
    @xmath . It follows that @xmath . For determining @xmath we compute
    in screen @xmath the coordinates of @xmath and:

      -- -------- --
         @xmath   
      -- -------- --

    We get that @xmath @xmath @xmath @xmath @xmath .

    Next we determine @xmath . For this purpose we compute the
    coordinates of @xmath , @xmath , @xmath , and @xmath in @xmath . We
    gave the first two above, the latter two are given by

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

    By substituting those coordinates in Equation 7.5 we obtain that
    @xmath , as claimed.

-   @xmath . In this case, @xmath . Again we start by showing that
    @xmath . For an illustration of what happens in screen @xmath ,
    consult Figure 7.16 . As in the case @xmath it holds that @xmath .
    Therefore, @xmath . Angle @xmath is determined from @xmath and
    @xmath in @xmath : screen orientation @xmath is given by @xmath .
    Therefore @xmath . So

      -- -------- --
         @xmath   
      -- -------- --

    For determining @xmath , which occurs in the @xmath -screen @xmath ,
    we apply Equations 7.5 and 7.6 directly:

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
                  @xmath   @xmath   
                  @xmath   @xmath   
                  @xmath   @xmath   
                  @xmath   @xmath   
      -- -------- -------- -------- --

-   @xmath . In this case @xmath . We start by analyzing @xmath . For
    determining @xmath we compute in @xmath coordinates @xmath , @xmath
    , and

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
                  @xmath   @xmath   
      -- -------- -------- -------- --

    Therefore,

      -- -------- --
         @xmath   
      -- -------- --

    We use the coordinates, @xmath and @xmath in @xmath for determining
    @xmath . From Equation 7.3 it follows that

      -- -------- --
         @xmath   
      -- -------- --

    After subtracting it follows that @xmath . We only have to show that
    @xmath . We do so by filling in coordinates in Equation 7.5 . The
    relevant coordinates in screen @xmath are as follows.

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
         @xmath   @xmath   @xmath   
         @xmath   @xmath   @xmath   
                  @xmath   @xmath   
         @xmath   @xmath   @xmath   
                  @xmath   @xmath   
         @xmath   @xmath   @xmath   
                  @xmath   @xmath   
      -- -------- -------- -------- --

    Therefore

      -- -------- --
         @xmath   
      -- -------- --

###### Example 7.57

In our running example we have two type @xmath hooks, @xmath and @xmath
. The reader is invited to check that the representatives computed for
@xmath in @xmath and @xmath that are the same as those for @xmath
itself. See in particular Example 7.47 and Example 7.52 .

#### 7.7.3 Consistency theorem for hooked tree elements.

###### Theorem 7.58

Fix @xmath . Let @xmath be valid and accepted. Then

  -- -------- --
     @xmath   
  -- -------- --

is the identity map.

###### Proof..

We analyze the three types of data elements present in @xmath , see
Definition 7.25 . The type @xmath 3 hooks are dealt with in Lemma 7.53
and the type @xmath 2 hooks in Lemma 7.56 . We are left with the type
@xmath 2.a angle between the top screen and its second maximal cluster.
In Definition 7.25 this angle is labeled @xmath . The separating screen
of @xmath and @xmath is the top screen @xmath , so we have to read off
in this screen. The coordinates of @xmath and @xmath in @xmath are
@xmath and @xmath . The read off value @xmath equals @xmath . This
completes the proof of the theorem. ∎

### 7.8 @xmath is smooth.

###### Lemma 7.59

Fix @xmath . Let @xmath be such that:

-   @xmath is valid and accepted;

-   @xmath for some @xmath .

Then @xmath .

###### Proof..

The consistency theorem, Theorem 7.58 , proves the claim for those
@xmath coordinates that belong to @xmath . In the rest of the proof, we
analyze @xmath and @xmath . Write @xmath .

First we show that @xmath for @xmath , with @xmath . Definition 7.49
tells that we have to determine @xmath in the screen @xmath . Let @xmath
and @xmath be the first label in the first cluster and the first label
in the second cluster of screen @xmath . Then @xmath and @xmath are the
sites drawn first and second in Construction 7.41 . If @xmath , then
@xmath was constructed out of the @xmath -leg @xmath by repeatedly
applying hooks from @xmath in the order indicated by the hooked path
@xmath . The same holds for @xmath . For hooks @xmath that are referred
to in @xmath one has @xmath . As a consequence, the positions of @xmath
and @xmath relative to @xmath and @xmath are the same in @xmath as in
any configuration @xmath .

The angle of the directed line passing first through @xmath and then
through @xmath in @xmath is exactly the screen orientation @xmath .
Writing out any screen orientation according to the recursion in
Equation 7.3 gives a list of data elements corresponding exactly to the
hooked path @xmath . As all angles occurring in the screen orientation
definition are coordinates of @xmath , Theorem 7.58 applies again. At
any type 2 angle @xmath however a @xmath switch can occur: the
corresponding type 2 ratio @xmath is not used in the definition.
Moreover, representatives might swap in Step 1 of Construction 7.41 . It
follows that

  -- -------- --
     @xmath   
  -- -------- --

To show that @xmath is easy now. The proof consists of three
observations:

-   Any @xmath -filled @xmath -screen @xmath is just a copy of the
    original configuration, due to the Consistency Theorem. But, it also
    satisfies the following: points not belonging to cluster @xmath
    corresponding to screen @xmath are omitted; points in @xmath are
    scaled such that the distance from @xmath to @xmath equals one;
    points in @xmath are possibly rotated over @xmath according to
    Construction 7.41 , Step 1.

-   By Definition 7.49 , @xmath . From the proof of part 1. of this
    lemma it follows that the angle @xmath equals @xmath up to @xmath .

-   In case @xmath this @xmath -switch is automatically corrected by the
    sign of @xmath , as @xmath is used in Equation 7.6 . ∎

###### Lemma 7.60

Fix @xmath . Let @xmath be the set of points in @xmath such that @xmath
is valid and accepted for all @xmath . Then

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (7.8)
  -- -------- -------- -------- -- -------

###### Proof..

We prove the two inclusions. First let @xmath . Then its projection
@xmath is valid and accepted with respect to @xmath . There always exist
points @xmath of the form @xmath , for @xmath , that are arbitrary close
to @xmath . For such points @xmath expression ( 7.8 ) holds by Lemma
7.59 . So these points can be expressed as the image of a configuration
consisting of non-coinciding points. Therefore these points @xmath
belong to the graph of @xmath . This implies that @xmath itself belongs
to the graph as well, as @xmath can be constructed as limit point of
points of the form @xmath , for @xmath in @xmath .

Secondly, suppose we start with a point @xmath on the graph. This
implies that @xmath is valid and accepted. As both conditions (valid,
accepted) are open conditions, there exists @xmath with @xmath , such
that if we replace all @xmath -ratios that vanish by @xmath that then
@xmath is still valid and accepted. But this means that @xmath produces
a filling of the @xmath -screens in which all sites in the top screen
are distinct. Writing down the coordinates gives a class @xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

The claim follows by observing that @xmath is the closure of @xmath in
@xmath . ∎

###### Theorem 7.61

@xmath is a submanifold of @xmath .

###### Proof..

Being a submanifold of a manifold can be determined locally, see [ BG ]
, section 6.2. Lemma 7.60 shows that @xmath can locally be written as
the graph of a function, and this is one of the characterizations of
submanifold. See [ BG ] , Theorem 2.1.2.  notably part (iv). ∎

### 7.9 Voronoi diagrams in the @xmath-screens.

So far in this chapter we have introduced the space @xmath in order to
model configurations of coinciding sites in the plane. We have seen that
we can associate with every @xmath a family of @xmath -screens.
Moreover, for almost all @xmath , we can fill the @xmath -screens with
@xmath -sites so that for any two @xmath sites @xmath and @xmath there
exists an @xmath -screen where @xmath and @xmath are distinct.

In this section we add Voronoi diagrams to the @xmath -screens. As in
any @xmath -screen at least two sites are distinct, we could apply the
ordinary definition of Voronoi diagram. But there is an ambiguity in the
screen model, as we take angles @xmath between pairs of points in @xmath
and allow negative ratios @xmath .

###### Example 7.62

Recall Example 7.47 . This example demonstrates that @xmath -clusters
can get rotated over @xmath in distinct @xmath -screens.

#### 7.9.1 Connection with Kontsevich-Soibelman space.

We nail down the clusters in such a way that they cannot get swapped
over @xmath in distinct @xmath -screens. We do this by taking angles
between pairs of points in @xmath and allowing ratios @xmath only. That
is, we consider the map

  -- -------- --
     @xmath   
  -- -------- --

where @xmath , @xmath , and @xmath are pairwise distinct indices. Denote
by @xmath the product @xmath . Recall the manifold with corners @xmath
introduced by Kontsevich and Soibelman, see [ KS ] and described in
Section 7.1.2 .

###### Proposition 7.63

Let @xmath denote the closure of @xmath in @xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

@xmath is defined as the closure of the image of @xmath under the map

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

where @xmath , @xmath , and @xmath are pairwise distinct indices and
@xmath . As @xmath , the claim follows directly. ∎

###### Example 7.64

Consider @xmath , @xmath , and @xmath . We compare the angles associated
to @xmath , @xmath , and @xmath in @xmath and @xmath for positive and
negative @xmath . First we consider @xmath . The undirected angles
@xmath , @xmath and @xmath do not change at @xmath . In @xmath ,
however, angles @xmath , @xmath and @xmath change by @xmath at @xmath .
Think of this as moving into another corner in the manifold with
corners. In Figure 7.17 the Voronoi diagram of @xmath , @xmath and
@xmath is shown. On the left for any negative value of @xmath , on the
right for any positive value of @xmath . Note the jump in the diagram at
@xmath . It demonstrates the need of the directed angles in the screen
model if we want to use it for displaying Voronoi diagrams.

###### Theorem 7.65

See also Figure 7.18 . Consider the map

  -- -------- --
     @xmath   
  -- -------- --

where @xmath denotes the class of @xmath in the Klein bottle @xmath with
respect to the equivalence relation @xmath . Fix @xmath . Let @xmath be
the number of @xmath in @xmath such that @xmath . Then

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

###### Proof..

Fix a class @xmath such that @xmath . Any such class has two elements,
@xmath and @xmath . By Lemma 7.60 , @xmath can be written as the graph
of a function on @xmath . Therefore those @xmath components that are not
in @xmath are a function of those components that are in @xmath .
Moreover, @xmath even determines the representative for those @xmath
components that are not in @xmath . For any @xmath , the two
representatives correspond to two distinct pieces of the boundary in
@xmath . We conclude that we can use the signvector of those @xmath with
@xmath as a coordinate system pointing to the distinct corners in the
fiber of the map @xmath . The additional @xmath in @xmath comes from the
two representatives of the unique @xmath -component in @xmath . ∎

###### Example 7.66

Consider @xmath given by

  -- -------- --
     @xmath   
  -- -------- --

Theorem 7.21 associates to @xmath the nest @xmath . The factor @xmath
consists of the two components @xmath and @xmath . The standard form of
@xmath restricted to @xmath is given by the representatives @xmath and
@xmath , compare Definition 7.33 . The fiber @xmath consists exactly of
those points in @xmath that are mapped on the same standard form in
@xmath . We obtain these points by analyzing the four distinct
representatives for @xmath and @xmath . Choose for example @xmath and
@xmath . It follows from the nest structure that @xmath , while @xmath .
The four points @xmath in @xmath obtained in this way with coordinates
@xmath , are given by

  -- -------- --
     @xmath   
  -- -------- --

###### Remark 7.67

In Chapter 5 we have encountered a similar situation in comparing the
spaces @xmath and @xmath of undirected and directed angles on three
points. Recall particularly Examples 5.30 and 5.31 .

We can define and fill @xmath -sreens in @xmath as well. Fix a point
@xmath . The set of vanishing ratios @xmath for @xmath defines a family
of @xmath -clusters and corresponding @xmath -screens by applying the
methods of Section 7.4 . A stripped version of Construction 7.41 fills
the @xmath -screens, given some @xmath . In short, we discuss the
adaptations in Construction 7.41 .
Ad Step 1. We do not have representatives in @xmath , so we skip Step 1.
Ad Step 2. The definition of @xmath still holds, but negative ratios
@xmath do not occur in @xmath .
Ad Step 3. In Step 3 nothing changes.

#### 7.9.2 Adding Voronoi diagrams in the @xmath-screens.

In this section we define a Voronoi diagram @xmath for @xmath .

###### Definition 7.68

Let @xmath . The Voronoi diagram @xmath is defined in terms of the
@xmath -screens filled by @xmath . Fix an @xmath -screen @xmath filled
by @xmath . Let @xmath be the cluster corresponding to @xmath . Its
maximal subclusters are denoted by @xmath . Suppose that the coordinates
of @xmath in @xmath are given by @xmath .

  Initialization.  

    @xmath is defined as the Voronoi diagram @xmath .

  Completion.  

     This is a recursive step from the screens displaying single sites
    up to the top screen. Assume that the maximal subscreens @xmath of
    @xmath have been completed. Denote the completed diagram in @xmath
    by @xmath . After the initialization step, any cluster @xmath lives
    in a Voronoi cell @xmath in @xmath . Define

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

    and

      -- -------- -------- -------- --
         @xmath   @xmath   @xmath   
      -- -------- -------- -------- --

The Voronoi diagram @xmath is the rooted tree of all @xmath , where
@xmath runs over all @xmath -screens. The ordering on @xmath is
inherited from the ordering on the @xmath -screens.

###### Example 7.69

Recall Example 4.42 . In this example we consider an ordered set of
sites in @xmath given by

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
                       @xmath   
  -- -------- -------- -------- --

For any pair of sites @xmath and @xmath we have defined an angle or
direction @xmath at @xmath . In a similar way we can define a ratio

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

This establishes a map @xmath from a set @xmath of @xmath sites in
@xmath to a point @xmath . We construct the Voronoi diagram @xmath by
applying Definition 7.68 . The nest of @xmath is given by @xmath .
Figure 7.19 shows on the left the three filled screens together with the
Voronoi diagrams added in the initialization step. On the right the
diagram @xmath is shown. It is constructed by adding the two diagrams
corresponding to clusters @xmath and @xmath in the cells of those
clusters in the top screen.

###### Example 7.70

We analyze an example where the maximal depth of a site equals @xmath .
We start with the ordered set of sites in @xmath given by @xmath , where

  -- -------- --
     @xmath   
  -- -------- --

As in Example 7.69 , one can construct a point @xmath . The nest of
@xmath is given by @xmath . In Figure 7.20 the tree of filled screens
for @xmath is shown: on the left after the initialization step but
before the completion step of Definition 7.68 ; on the right after the
completion step. In this example one can see clearly how the Voronoi
diagram @xmath of the top screen @xmath is built up recursively out of
the screens corresponding with the subclusters of @xmath .

###### Remark 7.71

Note the compatibility with the construction of limit Voronoi diagram
for sites in @xmath as constructed in Chapter 3. Compare also Examples
7.69 and 7.70 .

### 7.10 Conclusion.

#### 7.10.1 An easy model to remember.

In this chapter we have presented a real version of the
Fulton-MacPherson compactification @xmath . An advantage of our approach
is that we do not need any machinery from algebraic geometry neither in
constructing our compactification space @xmath nor in proving that it is
a smooth manifold. Instead of algebraic blowups we have used the angles
between two points and the hooks between three points. This idea was
already proposed by Kontsevich and Soibelman. We have shown how to adapt
their approach so that the resulting modified compactification space is
a smooth manifold instead of just a manifold with corners. Moreover, we
have shown that an explicit analysis of the ratios on triples of points
gives a combinatorial counterpart of Fulton-MacPherson’s description of
degenerated configurations in terms of screens.

Because of its nature, the construction and description of the space
@xmath can serve as a illustrative example to the theory of
configuration spaces that has attracted a lot of interest in recent
years. The setup in terms of screens can serve as a general framework
for studying properties of point sets in the plane. Especially for point
sets that contain almost coinciding points, a description by angles and
hooks can be a more robust alternative for storing the relative
positions of the points. Another advantage of working with hooks and
angles is that translations and scalings are already eliminated. That
is, one concentrates on point configuration up to affine
transformations.

[ FM ] , Theorem 2 states that the Fulton-MacPherson compactification
@xmath equals the closure of @xmath in the product of those @xmath for
@xmath of cardinality 2 and 3. Note that our model also supports this
‘three is enough’ motto: we only consider properties of pairs of points
(the angles) and triples of points (the hooks).

#### 7.10.2 Relation to earlier chapters.

A first application is given by studying limits of Voronoi diagrams: we
have introduced a method to associate a collection of filled @xmath
-screens to a point @xmath . In the final sections it turned out that
this method can be ported to the manifold with corners @xmath ,
introduced by Kontsevich-Soibelman. Just because of its corners, the
screen structure associated to a point @xmath in @xmath is well suited
for modeling a possibly degenerated Voronoi diagram for @xmath . Recall
the description of Voronoi diagrams of polynomial sites, presented in
Chapter 4 : we have by now two notions of degenerated Voronoi diagram
that match both combinatorially and according to shape with the notion
of classic Voronoi diagram.

From a set @xmath of @xmath distinct sites @xmath in @xmath we can
construct a point @xmath at @xmath , compare Example 7.69 . A
construction in the other direction can be made as well. Suppose we are
given some @xmath . And suppose the @xmath -screens are filled by @xmath
-sites @xmath . Define the depth of a screen @xmath as:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Let @xmath be the site directly above @xmath with respect to the
predecessor relation defined in Definition 7.27 . The polynomial site
@xmath representing @xmath is defined as:

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath   
     @xmath   @xmath   @xmath   
  -- -------- -------- -------- --

Mapping a set @xmath of polynomial sites to a point @xmath and back
results in this way in a normal form for @xmath .

In Chapters 5 and 6 we have studied the compactification @xmath . This
compactification is the closure of the graph of the directed angle map,
cf. Definition 5.11 . One of the drawbacks of considering only directed
angles is that collinear configurations can not be reconstructed from
just these angles, compare Section 5.2 . This problem is solved in the
compactification @xmath by adding the hooks between triples of points.

In Chapter 6 , Theorem 6.11 we prove essentially that two data sets
@xmath that are Euclidean close have Voronoi diagrams @xmath that are
Hausdorff close. As there is an obvious continuous map (forget all
ratios) from @xmath to @xmath , this continuity result also holds for
the top screen of the Voronoi diagram @xmath . More precisely: suppose
we have some @xmath . Fill the top screen @xmath by @xmath . The
coordinates of the sites @xmath can be read off from @xmath , while the
directed angles between pairs of sites are part of @xmath . These data
together determine a point @xmath . This establishes a map @xmath . We
have the following situation:

  -- -------- --
     @xmath   
  -- -------- --

As both @xmath and the ‘Voronoi map’ are continuous, the composition is
continuous as well. In this short analysis, we have left out the
incorporation of the compactness condition on the Voronoi map. This is
left as an exercise to the reader.
