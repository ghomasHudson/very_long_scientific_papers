###### Contents

-    1 Introduction
-    2 Simulations of Physics with Quantum Computers
    -    2.1 Models of Quantum Computation
        -    2.1.1 The Conventional Model of Quantum Computation
        -    2.1.2 Hamiltonian Evolutions
        -    2.1.3 Controlled Operations
    -    2.2 Deterministic Quantum Algorithms
        -    2.2.1 One-Ancilla Qubit Measurement Processes
        -    2.2.2 Quantum Algorithms and Quantum Simulations
    -    2.3 Quantum Simulations of Quantum Physics
        -    2.3.1 Simulations of Fermionic Systems
        -    2.3.2 Simulations of Anyonic Systems
        -    2.3.3 Simulations of Bosonic Systems
    -    2.4 Applications: The 2D fermionic Hubbard model
    -    2.5 Quantum Algorithms: Efficiency and Errors
    -    2.6 Experimental Implementations of Quantum Algorithms
        -    2.6.1 Liquid-State NMR Quantum Information Processor
    -    2.7 Applications: The Fano-Anderson Model
        -    2.7.1 Experimental Protocol and Results
    -    2.8 Summary
-    3 Quantum Entanglement as an Observer-Dependent Concept
    -    3.1 Quantum Entanglement
        -    3.1.1 Separability and von Neuman Entropy
        -    3.1.2 Mixed-State Entanglement and the Concurrence
        -    3.1.3 Measures of Quantum Entanglement
    -    3.2 Generalized Entanglement
        -    3.2.1 Generalized Entanglement: Definition
        -    3.2.2 Generalized Entanglement and Lie Algebras
        -    3.2.3 Generalized Entanglement and Mixed States
    -    3.3 Relative Purity as a Measure of Entanglement in Quantum
        Systems
        -    3.3.1 Two-Spin Systems
        -    3.3.2 @xmath -Spin Systems
        -    3.3.3 Fermionic Systems
    -    3.4 Summary
-    4 Generalized Entanglement as a Resource in Quantum Information
    -    4.1 Quantum Entanglement and Quantum Information
        -    4.1.1 Quantum Cryptography
        -    4.1.2 Quantum Teleportation
    -    4.2 Quantum Entanglement and Quantum Computation
    -    4.3 Efficient Classical Simulations of Quantum Physics
        -    4.3.1 Higher Order Correlations
    -    4.4 Generalized Entanglement and Quantum Computation
        -    4.4.1 Efficient Initial State Preparation
    -    4.5 Summary
-    5 Generalized Entanglement and Many-Body Physics
    -    5.1 Entanglement and Quantum Phase Transitions
        -    5.1.1 Lipkin-Meshkov-Glick Model
        -    5.1.2 Anisotropic XY Model in a Transverse Magnetic Field
    -    5.2 General Mean-Field Hamiltonians
        -    5.2.1 Diagonalization Procedure
        -    5.2.2 Example: Fermionic Systems
    -    5.3 Summary
-    6 Conclusions
    -    6.1 Future Directions
-    A Discrete Fourier Transforms
-    B Discrete Fourier Transform and Propagation of Errors
-    C The Adjoint Representation
-    D Separability, Generalized Unentanglement, and Local Purities
-    E Approximations of the exponential matrix
    -    E.1 Scaling of the Method
-    F Efficient Classical Evaluation of High-Order Correlation
    Functions
-    G Classical Limit in the LMG Model

## Chapter 1 Introduction

  …there is plenty of room to make computers smaller…nothing that I can
  see in the physical laws…
  R. P . Feynman, Caltech (1959).

During the last few decades, the theory of Quantum Information
Processing (QIP) has acquired great importance because it has been shown
that information based on quantum mechanics provides new resources that
go beyond the traditional ‘classical information’. It is now known that
certain quantum mechanical systems, named quantum computers (QCs), can
be used to easily solve certain problems which are difficult to solve
using today’s conventional or classical computers CCs. Having a QC would
allow one to communicate in secret [ BB84 ] (quantum cryptography),
perform a variety of search algorithms [ Gro97 ] , factor large numbers
[ Sho94 ] , or simulate efficiently some physical systems [ OGK01 ,
SOG02 ] . Additionally, it would allow us to break security codes used,
for example, to secure internet communications, optimize a large variety
of scheduling problems, etc., which make of quantum information an
exciting and relevant subject. Consequently, the science of quantum
information is mainly focused on better understanding the foundations of
quantum mechanics (which are different of classical mechanics) and the
physical realization of quantum controllable physical devices. While the
first allows clever and not so obvious ways of taking advantage of the
quantum world, the latter will let us achieve our most important goal:
the building of a QC.

When one looks for the word information in the dictionary one finds many
definitions: i) a message received and understood, ii) knowledge
acquired through study or experience, iii) propagated signal through a
given channel, iv) broadcasted news, and more. Information is then the
basis of all human knowledge and we usually base our behavior on it. It
always requires a physical representation to be able to use it,
propagate it, or store it, such as a telephone, a computer disk, etc.
Depending on the physical representation, information can be classical
or quantum .

We define as classical information the one that is manipulated and
stored by today’s CCs. In classical information theory the basic unit is
the bit . A bit’s state can be in one of two states represented by the
numbers 0 and 1, which constitute the logical basis. A possible physical
representation of a bit is given by a system in which the state is
determined by the distribution of, for example, electrical charge. The
idea is then to process information through the manipulation of the
state of a set of bits (i.e., bit sequence) by performing elementary
gates. These gates are different processes that depend on the particular
physical realization of the CC.

Examples of one-bit gates are the not and reset gates, and of two-bit
gates is the nand gate. Their action over logical initial states are
shown in Fig. 1.1 . They suffice for implementing arbitrary state
transformations. That is, any classical algorithm can be implemented
through a circuit that consists of applying these elementary gates to a
bit sequence. In fact, this method is used by today’s computers, where
the program sets up a particular order for performing the elementary
gates and the chips implement them physically. Finally, one reads the
final state where the required information is supposed to be encoded
(e.g., the solution to a problem).

The idea of quantum information processing is similar to that of
classical information but under the laws of the quantum world. One
defines quantum information as the one which is stored and manipulated
by physical devices obeying the laws of quantum physics; that is,
satisfying the Schrödinger evolution equation

  -- -------- -- -------
     @xmath      (1.1)
  -- -------- -- -------

where @xmath is the Hamiltonian describing the interactions that one
manipulates to perform the desired evolution, and @xmath is some pure
state (i.e., wave function) of the system. Such devices constitute
quantum computers .

In the conventional model of quantum information theory (QIT) the basic
unit is the quantum bit or qubit . A qubit’s pure state can be in any
superposition of the logical states and is expressed as @xmath , where
the complex numbers @xmath and @xmath are the probability amplitudes of
being in the states @xmath and @xmath , respectively. They are
normalized to the unity: @xmath . A possible physical representation of
a qubit is given by any two-level quantum system (Fig. 1.2 ) such as a
spin-1/2, where the state represented by @xmath ( @xmath ) corresponds
to the state with the spin pointing up (down), or a single atom. Bohm’s
rule [ Boh51 ] tells one that such state corresponds to having
probabilities @xmath and @xmath of being in the state with the spin
pointing up and down, respectively.

Due to the superposition principle of quantum physics, a pure state of a
set of @xmath qubits (register) is expressed as @xmath . Again, the
complex coefficients @xmath are the corresponding probability
amplitudes, and @xmath . The idea is then to perform computation by
executing a quantum algorithm that consists of performing a set of
elementary gates in a given order (i.e., a quantum circuit). The action
of these quantum gates is rigorously discussed in Chap. 2 and requires
some previous knowledge in linear algebra. As in classical information,
these gates involve single qubit and two-qubit operations. In order to
preserve the features of quantum physics, these operations must be
reversible (i.e., unitary operations), and are usually performed by
making the register interact with external oscillating electromagnetic
fields.

The great advantages of having a QC are two-fold: First, working at the
quantum level allows one to make these computers extremely small and, if
scalable ¹ ¹ 1 A computer is said to be scalable if the number of
resources needed scale almost linearly with the problem size. [ Div95 ]
, it would allow one to process a large number of qubits at the same
time. Second, a computer ruled by the laws of quantum physics should
contain certain features that go beyond those of classical information,
since the latter can be considered a limit of the first one ² ² 2 Any
classical algorithm can be simulated efficiently with a QC [ NC00 ] .
For example, one immediately observes that the superposition principle
gives one more freedom when manipulating quantum information, in the
sense that many different logical states can be carried simultaneously
(parallelism).

To analyze the computational complexity to solve a certain problem one
needs to determine the total amount of physical resources required, such
as bits or qubits, the number of operations performed or number of
elementary gates, the number of times that the algorithm is executed,
etc. While nobody knows yet the power of quantum computation, certain
algorithms [ Sho94 , Gro97 ] suggest that QCs are more powerful than
their classical analogues. All these algorithms share the feature that
they not only make use of the superposition principle (which is not
sufficient to claim that a QC is more efficient), but also of the
non-classical correlations between different quantum elements in the QC.
(Interference phenomena also plays an important role in the efficiency
of quantum algorithms.) Such correlations are inherent to quantum
systems [ Sch35 , EPR35 ] and do not exist in classical systems. They
are usually referred as quantum entanglement (QE), an emerging field of
QIT.

In order to access the quantum information, one needs to perform a
measurement . This is defined as the extraction of some classical
information from the quantum register. Due to the features of quantum
physics, after a measurement process the state of the register is
collapsed into the logical state corresponding to the outcome, with
statistics given by Bohm’s rule (Fig. 1.3 ). This process could destroy
the efficiency of the computation. For example, if after the execution
of the quantum algorithm the state of two qubits is @xmath , a
measurement process in the logical basis has the effect of collapsing
the state to @xmath with probability @xmath , to @xmath with probability
@xmath , to @xmath with probability @xmath , and to @xmath with
probability @xmath . Therefore, a single measurement does not give the
whole information about the state of the register and usually one needs
to run the quantum algorithm repeatedly many times to obtain more
accurate statistics to recover the state of the register. This is a main
difference with the case of classical information, where such
measurement or convertion is not necessary.

The simplest case of an entangled state is the pure two-qubit state
(Fig. 1.4 )

  -- -------- -- -------
     @xmath      (1.2)
  -- -------- -- -------

or similar states obtained by flipping or by changing the phase of a
single qubit. Equation 1.2 states that if one qubit is measured and
projected in the logical basis, the other qubit is automatically
projected in the same basis. Moreover, if the outcome of a measurement
performed in one qubit is 0 (1), the outcome of a post-measurement
performed on the other qubit will be 1 (0). Remarkably, similar results
are obtained for such state if the measurements are performed in a basis
other than the logical one. These correlations between outcomes cannot
be explained by a classical theory.

During the last few years, several authors [ EHK04 , GK , SOK03 , Val02
, Vid03 ] have started to study the relation between different
definitions and measures of QE and quantum complexity. Naturally, they
mostly agreed that whenever the QE of the evolved state in a quantum
computation is small enough, such algorithms can be simulated with the
same efficiency on a CC. However, the lack of a unique computable
measure of entanglement that could be applied to any quantum state and
quantum system is the main reason why the power of QCs is still not
fully understood.

One of the purposes of my thesis is to show the computational complexity
(i.e.., the number of resources and operations needed) to solve certain
problems with QCs and to compare it with the corresponding classical
complexity. In particular, I will first focus on the study of the
simulation of physical systems by quantum networks or quantum
simulations (QSs) [ OGK01 , SOG02 , SOK03 ] . As noticed by R. P.
Feynman [ Fey82 ] and Y. Manin, the obvious difficulty with
deterministically solving a quantum many-body problem (e.g., computing
some correlation functions) on a CC is the exponentially large basis set
needed for its simulation. Known exact diagonalization approaches like
the Lanczos method suffer from this exponential catastrophe. For this
reason, it is expected that using a computer constructed of distinct
quantum mechanical elements (i.e., a QC) that ‘imitates ³ ³ 3 In
general, the QC used to perform a QS is built of quantum elements that
are different in nature of those that compose the system to be
simulated. However, this is not a drawback in a simulation because
usually one can perform a one-to-one association between the quantum
states of the QC and the quantum states of the physical system to be
simulated. ’ the physical system to be simulated (i.e., simulates the
interactions) would overcome this difficulty.

The results obtained by studying the complexity of QSs can be extended
to understand the complexity of solving other problems. For example,
different quantum search algorithms [ Gro97 ] admit a Hamiltonian
representation and can be equivalently considered as a particular QS.
But most importantly, I will show how these simulations lead to the
definition of a general measure of quantum (pure state) entanglement, so
called generalized entanglement (GE), which can be applied to any
quantum state regardless of its nature. Remarkably, this measure is
crucial when analyzing the efficiency-related advantages of having a QC.

This report arises from the studies and novel results obtained together
with my colleagues at Los Alamos National Laboratory (USA) and Instituto
Balseiro (Argentina) during my PhD studies. For a better understanding,
the main results are presented in chronological order. In Chap. 2 , I
analyze the problem of simulating different finite physical systems on a
QC using deterministic quantum algorithms. The corresponding
computational complexity is also studied. As a proof of principles, I
present the experimental simulation of a particular fermionic many-body
system on a liquid-state nuclear-magnetic-resonance (NMR) QC.

In Chap. 3 , I introduce the concept of quantum generalized
entanglement, a notion that goes beyond the traditional quantum
entanglement concept and makes no reference to a particular subsystem
decomposition. I show that important results are obtained whenever a Lie
algebraic setting exists behind the problem under consideration. In
particular, I apply this novel approach to the study of quantum
correlations in different quantum systems, regardless of their nature or
particle statistics, including different spin and fermionic systems.

In Chap. 4 I compare the effort of simulating certain quantum systems
with a QC or a CC. In particular, I show that the concept of generalized
entanglement is crucial to the efficiency of a quantum algorithm and can
be used as a resource in quantum computation. Moreover, generalized
entanglement allows one to make a connection between QIT and many-body
physics by studying different problems in quantum mechanics, such as the
characterization of quantum phase transitions in matter or the study of
integrable quantum systems. These results are presented in Chap. 5 .

Finally, in Chap. 6 , I present the conclusions, open questions, and
future directions related to this subject.

## Chapter 2 Simulations of Physics with Quantum Computers

Since Richard P. Feynman conjectured that an arbitrary discrete quantum
system may be simulated by another one [ Fey82 ] , the simulation of
quantum phenomena became a fundamental problem that a quantum computer
(QC), i.e., a system of universally controlled distinct quantum
elements, may potentially solve in a more efficient way than a classical
computer (CC). The main problem with the simulation of a quantum system
on a CC is that the dimension of the associated Hilbert space grows
exponentially with the volume of the system to be simulated. For
example, the classical simulation of a system composed of @xmath qubits
requires, in general, an amount of computational operations (additions
and products of complex numbers) that is proportional to @xmath , where
@xmath is the dimension of the Hilbert space given by the number of
different logical states @xmath , with @xmath . Nevertheless, a QC
allows one to imitate the evolution of the corresponding quantum system
by cleverly controlling and manipulating its elements. This process is
called a quantum simulation (QS). It is expected then that the number of
resources required for the QS increases linearly (or at most,
polynomially) with the volume of the system to be simulated [ AL97 ] .
If this is the case, we say that the QS can be performed efficiently.

To be able to perform a QS, it is necessary to make a connection between
the operator algebra associated to the system and the operator algebra
which defines the model of quantum computation [ OGK01 ] . The existence
of one-to-one mappings between different algebras of operators and
one-to-one mappings between different Hilbert spaces [ BO01 , SOK03 ] ,
is a necessary requirement to simulate a physical system using a QC
built on the basis of another system (Fig. 2.1 ). For example, one can
simulate a fermionic system on a liquid-state nuclear magnetic resonance
(NMR) QC by making use of the Jordan-Wigner transformation [ JW28 ] that
maps fermionic operators onto the Pauli (spin-1/2) operators. Although
these mappings can usually be performed efficiently, this is not
sufficient to establish that any system can be simulated efficiently on
a QC. It is then necessary to prove that all steps involved in the QS,
including the initialization, evolution, and measurement, can be
performed efficiently [ SOG02 ] .

This chapter will explore the theoretical and experimental issues
associated with the simulations of physical phenomena on QCs. In Sec.
2.1 , I start by describing different models of quantum computation. In
particular, I rigorously introduce the conventional model by means of
the Pauli operators, where a natural set of elementary gates (i.e., set
of universal operations) is obtained. This model, roughly described in
Chap. 1 , is the one generally needed for the practical implementation
of a QS. In Sec. 2.2 , I present a class of quantum algorithms (QAs) in
the language of the conventional model, for the computation of relevant
physical properties of quantum systems, such as correlation functions,
energy spectra, etc. In Sec. 2.3 , I explain how the QS of quantum
physical systems obeying fermionic, anyonic, and bosonic particle
statistics, can be performed on a QC described by the conventional
model, presenting some mappings between the different operator algebras.
As an application, in Sec. 2.4 I show the QS (imitated by a classical
computer) of a particular fermionic system: The two-dimensional
fermionic Hubbard model. It is expected that such simulation gives an
insight into the limitations of quantum computation, showing that
certain issues remain to be solved to assure that a QC is more powerful
than a CC (Sec. 2.5 ). In Sec. 2.7 , I describe the experimental
implementation on an NMR QC of the QS of another fermionic system: The
Fano-Anderson model. For this purpose, an elementary introduction to the
physical processes on an NMR setting is described in Sec. 2.6 . Finally,
I summarize in Sec. 2.8 .

### 2.1 Models of Quantum Computation

When performing a quantum computation, the quantum elements which
constitute the QC can be universally controlled and manipulated by
modulating and changing their interactions. This quantum control model
assumes then the existence of a control Hamiltonian @xmath , which
describes these interactions. The control possibilities are used to
implement specific quantum gates, allowing one, for example, to
represent the time evolution of the physical system to be simulated [
OGK01 ] .

In order to define a model of quantum computation it is necessary to
give a physical setting together with its initial state, an algebra of
operators associated to the system, a set of controllable Hamiltonians
necessary to define a set of elementary gates, and a set of measurable
operators (i.e., observables). In this way, many different models of
quantum computation can be described, but for historic reasons and
practical purposes I will focus mostly on the conventional model [ NC00
] .

#### 2.1.1 The Conventional Model of Quantum Computation

As mentioned in Chap. 1 , in the conventional model of quantum
computation, the fundamental unit of information is the quantum bit or
qubit . A qubit’s pure state @xmath (with @xmath and @xmath ), is a
linear superposition of the logical states @xmath and @xmath , and can
be represented by the state of a two-level quantum system such as a
spin-1/2. Assigned to each qubit are the identity operator @xmath (i.e.,
the no-action operator) and the Pauli operators @xmath , @xmath , and
@xmath . In the logical single-qubit basis @xmath , these are

  -- -------- -- -------
     @xmath      (2.1)
  -- -------- -- -------

Because of its action over the logical states, the operator @xmath is
usually referred as the flip operator:

  -- -------- -- -------
     @xmath      (2.2)
  -- -------- -- -------

For practical purposes in this thesis, it is also useful to define the
raising (+) and lowering (-) Pauli operators @xmath , and the
eigenstates of the flip operator @xmath and @xmath , satisfying

  -- -------- -- -------
     @xmath      (2.3)
  -- -------- -- -------

The Pauli operators form the @xmath Lie algebra and satisfy the
commutation relations ( @xmath )

  -- -------- -- -------
     @xmath      (2.4)
  -- -------- -- -------

where @xmath and @xmath is the total anti-symmetric Levi-Civita symbol.
They constitute a complete set of local observables, that is, a basis
for the @xmath dimensional Hermitian matrices with @xmath . The symbol
@xmath denotes the corresponding complex conjugate transpose.

Any qubit’s pure state can be represented as a point on the surface of
the unit sphere (Bloch-sphere representation) by parametrizing the state
as @xmath (Fig. 2.2 ). In order to process a single qubit, a complete
set of single-qubit gates has to be given. These operations constitute
then, any rotation in the Bloch-sphere representation, which are given
by the operators @xmath ; that is, a rotation by an angle @xmath along
the @xmath axis. These rotations are unitary (reversible) operations,
satisfying @xmath (i.e., no-action), where @xmath . This reversibility
property allows one to perform these gates with no thermodynamical cost.
In Fig. 2.3 , I present these elementary single-qubit gates in their
circuit representation.

Similarly, a pure state of a @xmath -qubit register (quantum register)
is represented as the ket @xmath , where @xmath is a product of states
of each qubit in the logical (or other) basis, e.g., its binary
representation ( @xmath , etc.), and @xmath ( @xmath ). Assigned to the
@xmath th qubit of the quantum register are, together with the identity
operator @xmath , the local Pauli operators @xmath (with @xmath , @xmath
, or @xmath ); that is

  -- -- --

  -- -- --

where @xmath represents a Kronecker tensorial product. Their matrix
representation in the basis ordered as @xmath is just the matrix tensor
product of the corresponding @xmath matrices defined by Eq. 2.1 . For
two different qubits, these operators commute:

  -- -------- -- -------
     @xmath      (2.5)
  -- -------- -- -------

In order to describe a generic operation on the quantum register, it is
also necessary to consider products of the Pauli operators @xmath .
Remarkably, every unitary (reversible) operation acting on the quantum
register can be decomposed in terms of single qubit rotations @xmath and
two-qubit gates, such as the Ising gate @xmath , with @xmath ( [ BBC95 ,
Div95 ] ). The operations @xmath are also unitary, satisfying @xmath ,
with @xmath . Together with the single-qubit rotations they define a
universal set of quantum gates . Their quantum circuit representation is
shown in Fig 2.3 .

Every (logical) state of the quantum register has associated a
mathematical object denoted as bra in the following way

  -- -------- -- -------
     @xmath      (2.6)
  -- -------- -- -------

and can be linearly extended for a general state @xmath by conjugation
as

  -- -------- -- -------
     @xmath      (2.7)
  -- -------- -- -------

where @xmath denotes the complex conjugate of @xmath . The product
between a logical bra and a logical ket defines the inner-product in the
associated Hilbert space given by

  -- -------- -- -------
     @xmath      (2.8)
  -- -------- -- -------

with @xmath being the Kronecker delta. In this vectorial space, two
vectors (states) @xmath and @xmath are orthogonal if their overlap ,
that is, their inner product @xmath given by Eq. 2.8 , vanishes.
Moreover, the bra-ket notation allows one to represent every (Pauli)
operator. For example, the single qubit flip operator @xmath is
represented as @xmath . This notation is very useful when computing, for
example, expectation values.

A measurement is defined as the action that gives some classical
information about the state of the quantum register. In quantum
mechanics, a measurement is considered to be a probabilistic process
that collapses the actual quantum state of the system [ Per98 ] . For
example, a measurement of the polarization in the logical basis of every
qubit (i.e., the measurement of the observables @xmath ) when the state
of the register is @xmath , projects it onto a certain logical state
@xmath with probability @xmath (Bohm’s rule). This is a von Neumann
measurement. In particular, in a general von Neumann measurement of an
observable @xmath ( @xmath ), the probability @xmath that the outcome
@xmath is obtained, where @xmath is one possible eigenvalue of @xmath ,
is given by [ NC00 ]

  -- -------- -- -------
     @xmath      (2.9)
  -- -------- -- -------

where @xmath is the projector onto the subspace of states with quantum
number @xmath . Moreover, if @xmath is the actual outcome, the state
after the measurement is given by

  -- -------- -- --------
     @xmath      (2.10)
  -- -------- -- --------

For example, when measuring the operator @xmath for a single qubit state
@xmath , the two possible outcomes are @xmath (i.e., the eigenvalues of
@xmath ). Since @xmath , the corresponding probabilities are

  -- -------- -- --------
     @xmath      (2.11)
  -- -------- -- --------

and if the outcome is @xmath ( @xmath ), the state is projected onto
@xmath ( @xmath ). Therefore, to obtain accurate information about the
actual state of the quantum system, one needs to prepare many copies of
the state and perform many different measurements.

The expectation value of a measurement outcome is the expectation of the
outcomes of many measurement repetitions. It can also be expressed in
the bra-ket notation. If the state of the quantum system is @xmath , the
expectation value of @xmath is given by

  -- -------- -- --------
     @xmath      (2.12)
  -- -------- -- --------

In the conventional model, any observable @xmath can be written as a
combination (sums and/or products) of the identity and Pauli operators.
Therefore, if @xmath is known, the expectation @xmath can be
algebraically computed by obtaining first the state @xmath , and by
projecting it onto the bra @xmath using the inner-product relations of
Eq. 2.8 . For example, if a two-qubit state is given by @xmath , then

  -- -------- -- --------
     @xmath      (2.13)
  -- -------- -- --------

and

  -- -------- -- --------
     @xmath      (2.14)
  -- -------- -- --------

Equations 2.13 and 2.14 have been obtained by noticing that @xmath ,
@xmath , and @xmath , together with Eq. 2.8 .

Nevertheless, certain quantum computations and QSs are done by evolving
mixed states instead of pure states. A quantum register in a
probabilistic mixture of pure states can be described in the bra-ket
notation by a density matrix @xmath , with @xmath representing the
quantum register being in the pure state @xmath , with probability
@xmath ( @xmath ). Equivalently, every density operator @xmath can also
be written as a combination (sums and/or products) of the Pauli
operators @xmath ( @xmath ) and the identity operator @xmath . These
mixed states are useful when performing quantum computation with devices
such as the NMR QC, where the state of the quantum register is
approximated by the average state of an ensemble of molecules at room
temperature; that is, an extremely mixed state. The expectation value of
a measurement outcome over a mixed state is given by

  -- -------- -- --------
     @xmath      (2.15)
  -- -------- -- --------

where @xmath is the measured observable, @xmath the density operator of
the mixed state, and @xmath denotes the trace.

In brief, the conventional model allows one to describe every step in a
QS by means of Pauli operators. The idea is to represent any quantum
algorithm (QA) as a circuit composed of elementary single and two-qubit
gates, together with the measurement process. The complexity of a QA is
then determined by the amount of resources required, given by the number
of qubits needed, the number of universal single and two-qubit
operations (Fig. 2.3 ), and the number of measurements needed to obtain
an accurate result (e.g., the number of times that the algorithm needs
to be performed). For this purpose, a procedure to decompose an
arbitrary operation in terms of elementary gates has to be explained. In
the following subsection, I present some useful techniques and examples.

#### 2.1.2 Hamiltonian Evolutions

When simulating a physical system on a QC it is necessary, in general,
to perform a Hamiltonian (unitary) evolution to the quantum register [
OGK01 , SOG02 ] , of the form

  -- -------- -- --------
     @xmath      (2.16)
  -- -------- -- --------

where @xmath is a physical Hamiltonian and @xmath is a real parameter
(e.g., time). A common @xmath is given by

  -- -------- -- --------
     @xmath      (2.17)
  -- -------- -- --------

where @xmath and @xmath are real numbers. From Eqs. 2.4 and 2.5 one
obtains @xmath , and therefore, @xmath .

To decompose @xmath into single and two-qubit operations, the following
steps can be taken. First, the unitary operator

  -- -- -- --------
           (2.18)
  -- -- -- --------

takes @xmath , i.e., @xmath , so @xmath . Second, the operator

  -- -------- --
     @xmath
  -- -------- --

takes @xmath , so @xmath . Then,

  -- -------- --
     @xmath
  -- -------- --

takes @xmath . By successively similar steps the required string of
operators can be easily built: @xmath and also @xmath (up to a global
irrelevant phase):

  -- -------- -- --------
     @xmath      (2.19)
  -- -------- -- --------

where the integer @xmath scales linearly with @xmath . The evolution
@xmath can be decomposed similarly so @xmath is decomposed as the
product of both decompositions.

#### 2.1.3 Controlled Operations

Alternatively, one can use the well known Controlled-Not, or CNOT, gate
instead of the two-qubit Ising gate. Its action on a pair of qubits (1
and 2) is

  -- -------- --
     @xmath
  -- -------- --

Here, qubit 1 is the control qubit (the controlled operation on its
state @xmath is represented by a solid circle in Fig. 2.4 ). If the
state of qubit 1 is @xmath nothing happens (identity operation) but if
its state is @xmath , the state of qubit 2 is flipped. The decomposition
of the CNOT unitary operation into single and two-qubit operations is

  -- -------- -- --------
     @xmath      (2.20)
  -- -------- -- --------

which was obtained by noticing that @xmath , i.e., the spin-flip
operator acting on qubit 2 (Eq. 2.1 ):

  -- -------- -- --------
     @xmath      (2.21)
  -- -------- -- --------

By using the techniques described in Sec. 2.1.2 , the CNOT operation in
terms of single and two-qubit Ising gates is

  -- -------- -- --------
     @xmath      (2.22)
  -- -------- -- --------

The circuit representation of this decomposition is shown in Fig. 2.4 .
Five elementary single and two-qubit Ising gates are required to perform
the CNOT gate.

These results can be extended to other controlled unitary operations
like the CU operation defined as

  -- -------- -- --------
     @xmath      (2.23)
  -- -------- -- --------

The unitary operation above performs the transformation @xmath (also
unitary) over a set of qubits @xmath if the state of the control qubit
@xmath is @xmath , and does not act otherwise. For the transformation
@xmath , with @xmath , the operational representation of the CU gate is

  -- -------- -- --------
     @xmath      (2.24)
  -- -------- -- --------

where @xmath [Fig. 2.5 (a)]. Equivalently, one can define another
controlled operation, CU’, on the state @xmath [Fig. 2.5 (b)]: @xmath .

Controlled operations are widely used in quantum algorithms. In general,
their decomposition into single and two-qubit gates require a large
number of these elementary operations, so they should be avoided when
possible.

### 2.2 Deterministic Quantum Algorithms

In a QS, a QC performs certain tasks which are expected to give some
information about the physical system being simulated. These tasks are
communicated by means of a program or quantum algorithm (QA), which can
be schematically represented as a quantum circuit. In this section, I
present a particular type of QA that can be used to obtain relevant
properties of a quantum physical system @xmath , using the conventional
model (Sec. 2.1 ). Nevertheless, the same techniques can be used to
simulate physical systems with other particle statistics (e.g.,
fermionic or bosonic systems), if they can be described by Pauli
operators after an algebraic mapping.

A deterministic QA is based on three different steps: i) the preparation
of a pure initial state, ii) its evolution, and iii) the measurement of
certain property of the evolved state, in which the result of the
algorithm is encoded. To preserve the features of the quantum world, the
evolution step is performed through a unitary operation and the
measurement step is described by a certain observable (i.e., Hermitian
operator). Here, I present only the class of QAs that allows one to
determine, in a register of @xmath qubits, physical correlation
functions of the form

  -- -------- -- --------
     @xmath      (2.25)
  -- -------- -- --------

where @xmath is a unitary (reversible) operator associated to the system
to be simulated; that is, @xmath ( @xmath refers to the system).

Indirect measurement techniques can be used to obtain such correlation
functions on a QC. In addition to the qubits used to represent the
physical system @xmath to be simulated (i.e., the qubits-system) extra
qubits, called ancillas , are required. These ancillas constitute the
probes that contain information about the qubits-system. In the
following section I describe different measurement techniques.

#### 2.2.1 One-Ancilla Qubit Measurement Processes

In this case a single ancilla qubit allows one to obtain the correlation
functions of Eq. 2.25 , with @xmath , and @xmath , @xmath unitary
operators acting on @xmath [ OGK01 ] . For this purpose, the ancilla
qubit @xmath is first initialized in the state @xmath by applying, for
example, the unitary Hadamard gate to the state @xmath ¹ ¹ 1 The
Hadamard gate in terms of single qubit rotations is @xmath . Second, one
makes it interact with the qubits-system, initially in certain pure
state @xmath , through two controlled unitary operations @xmath and
@xmath , associated to the @xmath and @xmath operations, respectively.
The first operation @xmath evolves the system by @xmath if the ancilla
is in the state @xmath : @xmath . The second operation @xmath evolves
the system by @xmath if the ancilla state is @xmath : @xmath . Notice
that @xmath and @xmath are reversible and commute with each other.

After such evolution, the final state of the quantum register, @xmath ,
is

  -- -------- -- --------
     @xmath      (2.26)
  -- -------- -- --------

Interestingly, the expectation value of the Pauli operator @xmath
associated with the ancilla qubit, in this state, gives the desired
correlation function:

  -- -------- -- --------
     @xmath      (2.27)
  -- -------- -- --------

where I have used the orthogonality property (Sec. 2.1.1 ), that is,
@xmath , @xmath , and the action of the operators @xmath over the state
of the ancilla qubit given by Eq. 2.1 . The corresponding circuit for
this quantum algorithm is shown in Fig. 2.6 . Due to the probabilistic
nature of quantum measurements, the desired expectation value is
obtained with variance @xmath for each instance. That is, in order to
get an accurate value for @xmath , repetition must be used to reduce the
variance below what is required (Sec. 2.1.1 ).

Nevertheless, sometimes it is necessary to compute the expectation value
of an operator @xmath of the form

  -- -------- -- --------
     @xmath      (2.28)
  -- -------- -- --------

where @xmath and @xmath are unitary operators, @xmath (with no loss of
generality). In principle, this expectation value can be computed by
preparing @xmath different circuits as the one represented in Fig. 2.6 ,
such that each algorithm computes @xmath . However, in most practical
cases, the preparation of the initial state @xmath is a very difficult
task. This difficulty can then be reduced by using a particular QA that
requires only one circuit, but with @xmath ancilla qubits, where @xmath
and @xmath . Such QA has been described in Ref. [ SOG02 ] . The idea is
to extend the results described above using controlled operations with
respect to different ancilla qubits.

#### 2.2.2 Quantum Algorithms and Quantum Simulations

Based on the indirect-measurement methods described in Sec. 2.2.1 , I
now present certain QAs for QSs. These are useful for obtaining relevant
properties of quantum systems, like the evaluation of the correlation
function

  -- -------- -- --------
     @xmath      (2.29)
  -- -------- -- --------

Here, @xmath and @xmath are unitary operators (any operator can be
decomposed in a unitary operator basis as @xmath , @xmath ), @xmath is
the time evolution operator of a time-independent Hamiltonian @xmath
associated to the physical system to be simulated, and @xmath is a
particular state of the physical system. Notice that Eq. 2.29 is a
particular case of Eq. 2.25 . In particular, the evaluation of spatial
correlation functions can be obtained by replacing the evolution
operator @xmath by the space translation operator.

The quantum circuit for the evaluation of @xmath is shown in Fig. 2.7 .
It is equivalent to the one shown in Fig. 2.6 by choosing @xmath and
@xmath . This particular selection allows one to reduce the complexity
of the problem in the sense that the operation @xmath need not to be
controlled by the state of the ancilla qubit ( [ SOG02 ] ). As mentioned
in Sec. 2.1.3 , controlled operations require a large number of
elementary gates, so they must be avoided when possible.

In brief, the computation of @xmath is performed as follows: First, the
ancilla qubit @xmath is prepared in the state @xmath , and the system is
prepared in the state @xmath . Second, a controlled evolution on the
state @xmath , given by @xmath , is performed. Third, the time evolution
@xmath is performed. Fourth, a controlled evolution on the state @xmath
, given by @xmath , is performed. Finally the observable @xmath is
measured.

Sometimes one is interested in obtaining the spectrum (eigenvalues) of a
given observable @xmath ( Hermitian operator), associated with some
physical property of the system to be simulated. Techniques for getting
spectral information can be used on the quantum Fourier transform [
Kit95 , CEM98 ] and can be applied to physical problems [ AL99 ] .
Nevertheless, the idea here is to use the methods developed in Sec.
2.2.1 .

For some Hermitian operator @xmath , such as the Hamiltonian @xmath of
the system to be simulated, a common type of problem is the computation
of its eigenvalues or, at least, the lowest eigenvalue (related, for
example, to the ground state of the system). For this purpose, the
qubits-system needs to be initialized in a certain state @xmath , that
has a non-zero overlap with the eigenstates corresponding to the
eigenvalues that need to be computed. Such a state can always be
decomposed as a linear combination of eigenstates of @xmath ,

  -- -------- -- --------
     @xmath      (2.30)
  -- -------- -- --------

where @xmath are complex coefficients, @xmath are the eigenstates of
@xmath , and @xmath the corresponding eigenvalues. If interested in
computing @xmath , it is then required that @xmath in Eq. 2.30 .

For this purpose, the correlation function

  -- -------- -- --------
     @xmath      (2.31)
  -- -------- -- --------

with @xmath , needs to be computed for different values of the real
parameter @xmath (usually related with time). For a particular @xmath ,
the measurement of @xmath can be performed using the one-ancilla method
(Sec. 2.2.1 ) as follows. First, the initial state @xmath is prepared.
Second, the unitary evolution @xmath is performed. Finally, the
expectation @xmath is measured. The circuit representation of this QA is
shown in Fig. 2.8 . It is equivalent to the one shown in Fig. 2.6 by
replacing @xmath .

For a particular value of @xmath , the function @xmath is

  -- -------- -- --------
     @xmath      (2.32)
  -- -------- -- --------

Then, the eigenvalues @xmath can be obtained by performing a classical
Fourier transform to Eq. 2.32 (i.e., @xmath )

  -- -------- -- --------
     @xmath      (2.33)
  -- -------- -- --------

However, @xmath is only obtained for a discrete set of values of @xmath
. It is needed, instead, to calculate the corresponding discrete Fourier
transform (see Appendix A ) to obtain information about the @xmath ’s.

### 2.3 Quantum Simulations of Quantum Physics

In the most general case, a QS requires the simulation of systems with
diverse degrees of freedom, like fermions, anyons, bosons, etc. The
associated Hilbert spaces (space of states) differ from the one defined
for the conventional model. For example, in the case of fermionic
systems, fermionic states are governed by Pauli’s exclusion principle.
Then, at most a single spinless (or two spin-1/2) fermion can occupy a
certain (atomic) quantum state at the same time. Therefore, all the
features associated with the physical system to be simulated must be
preserved when transforming its operators to the operators describing
the computational model of the QC.

In this section, I present isomorphic mappings that allow one to
simulate arbitrary quantum systems, regardless of their particle
statistics, by using the QAs defined for the conventional model (Sec.
2.2 ). Fortunately, such mappings can be easily performed without
breaking the efficiency of a QA.

#### 2.3.1 Simulations of Fermionic Systems

The systems considered here consist mainly of a lattice with @xmath
modes (sites), where spinless fermions can hop between sites. These
results can be easily extended for the case of spin-1/2 fermions or
higher spin fermions.

In the second quantization representation, the (spinless) fermionic
operators @xmath and @xmath are defined as the creation and annihilation
operators of a fermion in the @xmath -th mode ( @xmath ), respectively.
Due to the Pauli’s exclusion principle and the antisymmetric nature of
the fermionic wave function under the permutation of two fermions, the
fermionic algebra is given by the following anticommutation relations

  -- -------- -- --------
     @xmath      (2.34)
  -- -------- -- --------

where @xmath denotes the anticommutator (i.e., @xmath ).

The Jordan-Wigner transformation [ JW28 ] is the isomorphic mapping that
allows the description of a fermionic system by the conventional model.
It is performed in the following way:

  -- -------- -- --------
     @xmath      (2.35)
     @xmath      (2.36)
  -- -------- -- --------

where the Pauli operators @xmath were previously introduced in Sec 2.1 .
If these operators satisfy the @xmath commutation relations (Eqs. 2.4
and 2.5 ), the operators @xmath and @xmath obey the anticommutation
relations of Eqs. 2.34 . This is an isomorphic mapping between operator
algebras and is independent of the Hamiltonian of the fermionic system
to be simulated.

Different Hamiltonians establish different connections (connectivity)
between fermionic modes. Historically, Eqs. 2.35 and 2.36 correspond to
lattices in one space dimension. Nevertheless, it is also valid for
lattice systems in any dimension, when the set of modes @xmath is
countable. In particular, the set of all ordered @xmath -tuples of
integers can be placed in one-to-one correspondence with the set of
integers. For example, the simulation of a two dimensional fermionic
lattice system can be done by re-mapping each mode @xmath into a new set
of modes as @xmath , where @xmath and @xmath are integer numbers that
refer to the position of a site in the lattice, and @xmath and @xmath
are the number of sites (modes) in the @xmath and @xmath direction,
respectively.

In order to compute physical properties of a fermionic system on a QC
described by the conventional model, every step of the quantum
simulation has to be expressed in terms of Pauli operators. For a
(spinless) fermionic system with @xmath modes, a QC must contain,
besides the ancilla qubit @xmath , @xmath qubits to represent the
system. In the following, I describe how certain fermionic initial
states can be prepared and how they can be evolved under a particular
fermionic Hamiltonian evolution.

##### Preparation of Initial Fermionic States

Associated to each fermionic mode, there are two levels which correspond
to the mode being empty or being occupied by a spinless fermion. The
state-state mapping is then trivial. Basically, the logical state @xmath
is associated to the @xmath th mode if it is empty, and the logical
state @xmath (up to a phase) is associated if the @xmath th mode is
occupied. In this way, the vacuum or no-fermion state @xmath , which
satisfies @xmath , is mapped to the logical @xmath -qubit state @xmath .

However, when simulating a fermionic system, more complex states need to
be prepared. A general state @xmath of @xmath fermions is a linear
combination of Slater determinants (i.e., fermionic product states),

  -- -------- -- --------
     @xmath      (2.37)
  -- -------- -- --------

where the Slater determinants @xmath are

  -- -------- -- --------
     @xmath      (2.38)
  -- -------- -- --------

Due to the anticommutation relations of Eqs. 2.34 , the fermionic
operators satisfy

  -- -------- -- --------
     @xmath      (2.39)
  -- -------- -- --------

implying that the Slater determinants @xmath are antisymmetric wave
functions under the permutation of an even number of fermions.

Every state @xmath can be prepared on a QC made of qubits, by noticing
that the quantum gate (i.e., unitary operator)

  -- -------- -- --------
     @xmath      (2.40)
  -- -------- -- --------

creates a particle in the @xmath -th mode when acting on the vacuum
state. In other words, @xmath . Then, making use of the Jordan-Wigner
transformation (Eqs. 2.35 and 2.36 ), the operators @xmath in the spin
language are

  -- -------- -- --------
     @xmath      (2.41)
  -- -------- -- --------

The operators @xmath can easily be decomposed into elementary single and
two-qubit gates as described in Sec. 2.1.2 . The successive application
of @xmath similar unitary operators to the state @xmath generates the
mapped state @xmath , up to an irrelevant global phase.

The general fermionic state of Eq. 2.37 can be prepared by using @xmath
ancilla qubits, performing unitary controlled- @xmath evolutions on the
state of the ancillas, and finally, performing a measurement
(projecting) on the ancillas. For example, if one is interested in
preparing the state @xmath , one needs to add an extra ancilla to the
system. This ancilla is prepared in the state @xmath and a controlled
evolution to obtain the state @xmath , is performed later. If the
Hadamard gate is applied to the ancilla, this state evolves into

  -- -------- -- --------
     @xmath      (2.42)
  -- -------- -- --------

Therefore, the ancilla qubit is measured and projected, with probability
1/2, into @xmath or @xmath . If the former is obtained, the desired
state is prepared. However, if the ancilla is projected into @xmath ,
the whole method needs to be applied again from the begining.

In general, the probability of successful preparation of @xmath (Eq.
2.37 ) using this method is @xmath . Then, the order of @xmath trials
need to be performed before a successful preparation. A detailed
description of this method can be found in Ref. [ OGK01 ] .

Nevertheless, an important case consists of the preparation of Slater
determinants (product state) @xmath in a different basis mode than the
one given before:

  -- -------- -- --------
     @xmath      (2.43)
  -- -------- -- --------

The fermionic operators @xmath ’s are sometimes related to the operators
@xmath through the following canonical transformation

  -- -------- -- --------
     @xmath      (2.44)
  -- -------- -- --------

with @xmath , @xmath , and @xmath being a @xmath Hermitian matrix.
(Sometimes the operators @xmath are combinations of both, the creation
and annihilation operators @xmath and @xmath .)

Thouless’s theorem states that one Slater determinant evolves into the
other as

  -- -------- -- --------
     @xmath      (2.45)
  -- -------- -- --------

where the unitary fermionic operator

  -- -------- -- --------
     @xmath      (2.46)
  -- -------- -- --------

can be written in terms of Pauli operators using the Jordan-Wigner
transformation (Sec. 2.3.1 ), and can also be decomposed into elementary
gates as described in Sec. 2.1.2 .

In brief, the described fermionic product states can be prepared on a QC
described by the conventional model, if the Jordan-Wigner transformation
is performed. Interestingly, the preparation can be done efficiently:
the number of elementary single-qubit and two-qubit gates required
scales polynomially with the system size @xmath . In Chap. 4 , I present
another class of fermionic states that can also be prepared efficiently.

##### Fermionic Evolutions

The evolution of a quantum state is the second step in the realization
of a QA. The goal is to decompose a generic evolution into the
elementary gates @xmath (Sec. 2.1 ). Sometimes, the evolution step is
associated to a Hermitian operator @xmath which is, for example, the
Hamiltonian @xmath of the fermionic system to be simulated in terms of
Pauli operators after Eqs. 2.35 and 2.36 have been performed. In this
case, the corresponding evolution unitary operator is @xmath (i.e, the
solution to the Schrödinger’s evolution equation).

In general, a fermionic Hamiltonian can be decomposed as @xmath ,where
@xmath represents the kinetic energy of the fermions and @xmath their
potential energy. Usually, @xmath and the decomposition of @xmath in
terms of elementary gates is a complicated task. To avoid this
difficulty this operator is approximated by, for example, using a first
order Trotter decomposition [ Suz93 ] . That is,

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (2.47)
     @xmath   @xmath   @xmath      (2.48)
  -- -------- -------- -------- -- --------

where @xmath and @xmath are the terms @xmath and @xmath in Pauli
operators, respectively. Therefore, for @xmath , @xmath .

The potential energy @xmath is usually a sum of commuting diagonal
terms, and the decomposition of @xmath into elementary gates is simple.
However, the kinetic energy @xmath is usually a sum of noncommuting
hopping terms of the form @xmath (bilinear fermionic operators), and its
decomposition is again approximated. A typical kinetic term @xmath (
@xmath ), when mapped onto the spin language gives

  -- -------- -- --------
     @xmath      (2.49)
  -- -------- -- --------

The decomposition of each term on the right hand side of Eq. 2.49 into
elementary single and two-qubit gates was previously discussed in Sec.
2.1.2 . The amount of elementary gates required depends on the distance
@xmath , and scales polynomially with that distance. Moreover, since
@xmath represents a physical system, it is a linear combination of a
polynomially large (with @xmath ) amount of fermionic operators. Then,
@xmath can be performed efficiently by applying a polynomially large
amount of elementary gates. In the same way, the unitary operation
@xmath of Eq. 2.46 can also be efficiently implemented.

Obviously, the accuracy of approximating @xmath using the Trotter
decomposition increases as @xmath decreases. Then, a large amount of
gates might be required to perform the desired evolution with small
errors. To overcome this problem, one could use a Trotter approximation
of higher order in @xmath [ Suz93 ] . All these approximation methods do
not destroy the efficiency of the QA. Moreover, the evolution step
induced by fermionic physical Hamiltonians with higher order products of
creation and annihilation operators can also be efficiently implemented
using the same techniques.

#### 2.3.2 Simulations of Anyonic Systems

The concepts described in Sec. 2.3.1 can be extended to other and more
general particle statistics, namely hard-core anyons [ BO01 ] . These
are particles that also obey the Pauli’s exclusion principle: At most
one (spinless) anyon can occupy a single mode. Assigned to each mode of
the lattice are the creation and annihilation anyonic operators @xmath
and @xmath , respectively. Their commutation relations are given by (
@xmath )

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath      (2.50)
     @xmath   @xmath   @xmath
  -- -------- -------- -------- -- --------

where @xmath is the number operator, @xmath , and @xmath is the
statistical angle. In particular, @xmath mod( @xmath ) represents
canonical spinless fermions, while @xmath mod( @xmath ) represents
hard-core bosons.

In order to simulate this problem on a QC described by the conventional
model, the following isomorphic mapping between algebras can be
performed:

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath      (2.51)
     @xmath   @xmath   @xmath
  -- -------- -------- -------- -- --------

where the Pauli operators @xmath were introduced in Sec. 2.1.1 . Since
they satisfy the commutation relations of Eqs. 2.4 and 2.5 , the
commutation relations for the anyonic operators (Eqs. 2.3.2 ) are
satisfied.

As in the fermionic case (Sec. 2.3.1 ), an anyonic evolution operator
can be written in terms of Pauli operators using Eq. 2.51 , and can be
decomposed into single and two-qubit elementary gates. Therefore, the
same procedure described in the previous section can be followed.

Anyon statistics have fermion and hard-core boson statistics as limiting
cases, satisfying always the Pauli’s exclusion principle. In the next
section this hard-core condition is relaxed and the important case of
canonical bosons is considered.

#### 2.3.3 Simulations of Bosonic Systems

Quantum computation is based on the manipulation of quantum systems that
possess a finite number of degrees of freedom (e.g., qubits). From this
point of view, the simulation of bosonic systems appears to be
impossible, since the non-existence of an exclusion principle implies
that the Hilbert space used to represent bosonic quantum states on a
lattice is infinite-dimensional; that is, there is no limit to the
number of bosons that can occupy a given mode @xmath . However,
sometimes it is necessary to simulate and study properties such that the
use of the complete Hilbert space is unnecessary, and only a finite
sub-basis of states is sufficient. This is the case for @xmath -mode
(e.g., @xmath sites) lattice systems with interactions given by the
boson-preserving Hamiltonian

  -- -------- -- --------
     @xmath      (2.52)
  -- -------- -- --------

where the operators @xmath ( @xmath ) create (destroy) a boson at site
@xmath , and @xmath is the number operator; that is

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath      (2.53)
  -- -------- -------- -------- -- --------

where the bosonic state @xmath represents a quantum state with @xmath
bosons in the @xmath -th mode (site).

The space dimension of the lattice is encoded in the parameters @xmath
and @xmath of the Hamiltonian. Since @xmath contains pairs of creation
and annihilation operators, the total number of bosons @xmath in the
system is preserved and the idea is to work in this finite sub-basis of
states (where the dimension of the associated Hilbert space depends on
the magnitude of @xmath ).

The corresponding bosonic commutation relations (in an
infinite-dimensional Hilbert space) are [ CDG98 ]

  -- -------- -- --------
     @xmath      (2.54)
  -- -------- -- --------

However, if the operators @xmath are restricted to the finite basis of
states represented by @xmath with @xmath , that is, @xmath is the
maximum number of bosons per site, they acquire the following matrix
representation (see Eqs. 2.53 )

  -- -------- -- --------
     @xmath      (2.55)
  -- -------- -- --------

where the symbol @xmath indicates the usual tensorial product between
matrices, and the @xmath dimensional matrices @xmath and @xmath are
given by

  -- -------- -- --------
     @xmath      (2.56)
  -- -------- -- --------

It is important to note that in this finite basis, the commutation
relations of the @xmath differ from the standard bosonic ones (Eq. 2.54
) [ BO02 ]

  -- -------- -- --------
     @xmath      (2.57)
  -- -------- -- --------

and clearly @xmath .

Since the goal is to simulate the bosonic system on a QC described by
the conventional model, a corresponding mapping between both operator
algebras must be given. Nevertheless, Eqs. 2.57 imply that the linear
span of the operators @xmath and @xmath is not closed under the
commutator, and a mapping between the bosonic operators and the Pauli
operators like the Jordan-Wigner transformation (Sec. 2.3.1 ) is not
possible. Therefore, such isomorphic mapping needs to be found by first
mapping quantum bosonic states onto quantum logical states in the
conventional model (i.e., a Hilbert space mapping).

The idea is to start by considering only the @xmath th mode in the
chain. Since this mode can be occupied with at most @xmath bosons, it is
possible to associate an @xmath -qubit quantum state to each particle
number state, in the following way:

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath      (2.58)
     @xmath            @xmath
     @xmath   @xmath   @xmath
  -- -------- -------- -------- -- --------

where @xmath denotes a quantum state with @xmath bosons in @xmath th
mode. Therefore, @xmath qubits for the simulation (where @xmath is the
total number of modes) are needed. An example of this mapping for a
quantum state with 7 bosons in a chain of 5 sites, where the maximum
number of bosons per site is @xmath , is shown in Fig. 2.9 .

By definition (see Eqs. 2.53 , 2.55 , and 2.56 ) @xmath , and this
operator in the conventional model maps to

  -- -------- -- --------
     @xmath      (2.59)
  -- -------- -- --------

where a pair @xmath refers to the @xmath th qubit in the chain of qubits
representing the @xmath th bosonic mode. The Pauli creation and
annihilation operators @xmath were previously defined in Sec. 2.1 . The
operator @xmath acts then on the @xmath -qubit chain representing the
@xmath th bosonic mode as

  -- -------- -- --------
     @xmath      (2.60)
  -- -------- -- --------

so its matrix representation in this basis is analogous to the matrix
representation of @xmath in the basis of bosonic states.

Similarly, the number operator is mapped as

  -- -------- -- --------
     @xmath      (2.61)
  -- -------- -- --------

so its action over the corresponding logical states is

  -- -------- -- --------
     @xmath      (2.62)
  -- -------- -- --------

Since the commutator @xmath the operators @xmath ( @xmath ) always keep
states within the same subspace.

The Hamiltonian of Eq. 2.52 in terms of Pauli operators is then

  -- -------- -- --------
     @xmath      (2.63)
  -- -------- -- --------

where the operators @xmath ( @xmath ) are given by Eqs. 2.59 , and
@xmath by Eq. 2.61 . In this way, physical properties of the bosonic
system such as the spectrum of @xmath can be obtained using a QC made of
qubits. The same methods can be used when simulating any other type of
boson-preserving quantum system.

##### Preparation of Initial Bosonic States

As in the fermionic case, the most general bosonic state of an @xmath
-mode lattice system with a maximum of @xmath bosons per site can be
written as a linear combination of bosonic product states like

  -- -------- -- --------
     @xmath      (2.64)
  -- -------- -- --------

where @xmath is a normalization factor, @xmath is the number of bosons
at site @xmath ( @xmath ), and @xmath is vacuum or no-boson state, that
is, @xmath .

Using the mapping described in Eq. 2.3.3 , the vacuum state in the
conventional model maps as

  -- -------- -- --------
     @xmath      (2.65)
  -- -------- -- --------

and the product state of Eq. 2.64 maps as

  -- -------- -- --------
     @xmath      (2.66)
  -- -------- -- --------

(see Fig. 2.9 for an example).

The preparation of the mapped bosonic state @xmath on a QC made of
qubits is then performed by flipping the states of the corresponding
qubits from a fully polarized state (i.e., the logical state with all
qubits in @xmath ), using for example the flip operations @xmath .
Nevertheless, more general bosonic states like

  -- -------- -- --------
     @xmath      (2.67)
  -- -------- -- --------

can also be realized as in the fermionic case. Again, the idea is to add
@xmath ancillas (extra qubits), perform controlled evolutions on their
states, and finally perform measurements on the state of the ancillas.
The state is successfully prepared with probability @xmath [ OGK01 ] .

##### Bosonic Evolutions

Again, the idea is to represent certain bosonic unitary evolution
operator @xmath , where @xmath is some boson-preserving Hermitian
operator such as the Hamiltonian of the system to be simulated (Eq. 2.52
), in terms of Pauli operators (Eq. 2.63 ). Usually, a first order
Trotter approximation [ Suz93 ] also needs to be performed to separate
those terms in @xmath that do not commute.

In general, @xmath (Eq. 2.52 ), where @xmath is a kinetic term and
@xmath a potential term. The kinetic term is a linear combination of
terms like @xmath . Therefore, a single-step evolution operator @xmath
is mapped onto Pauli operators as

  -- -------- -- --------
     @xmath
     @xmath      (2.68)
  -- -------- -- --------

where @xmath and @xmath is the maximal number of bosons per site. The
terms in the exponent of Eq. 2.68 commute with each other, so the
decomposition into elementary gates can be done using the methods
described in Sec. 2.1.2 . As an example, consider a system of two sites
with maximal one boson per site ( @xmath ). Thus, @xmath qubits are
needed for the simulation, and Eq. 2.59 implies that @xmath and @xmath .
The mapped bosonic operator @xmath in terms of Pauli operators is

  -- -------- -- --------
     @xmath      (2.69)
     @xmath
     @xmath
  -- -------- -- --------

and the decomposition of each of the terms in Eq. 2.69 in terms of
single and two-qubit elementary gates can be done, again, using the
methods described in Sec. 2.1.2 . An example of the decomposition of the
term @xmath , where the qubits were relabeled as @xmath (e.g., @xmath )
is shown in Fig. 2.10 .

Contrary to the fermionic case, the number of elementary operations
involved in the decomposition is not related to the distance between
sites, @xmath . Nevertheless, a physical bosonic operator @xmath , such
as the Hamiltonian of Eq. 2.52 , involves a polynomially large number
(with respect to @xmath ) of bosonic terms. Therefore, the corresponding
evolution @xmath can be efficiently performed on a QC by applying a
polynomially large number of elementary single and two-qubit gates.
Again, when using approximate methods like the Trotter decomposition,
the number of operations needed increases with the desired accuracy.
However, such an approximation does not destroy the efficiency of the
simulation.

### 2.4 Applications: The 2D fermionic Hubbard model

To clarify the methods described previously, in this section I present,
as an example, the QS of the finite two-dimensional fermionic Hubbard
model by using a CC that imitates a QC; that is, a quantum simulator .
Since this is a classical simulation, the CC must keep track of an
exponentially large number of quantum states, associated with the
Hilbert space of the quantum system. Nevertheless, this simulation
provides a good example for understanding the advantages and results
that can be obtained when using a real QC.

The physical system to be simulated consists of a rectangular lattice
(Fig. 2.11 ), with @xmath sites, where spin-1/2 fermions hop from site
to site under the interaction Hamiltonian

  -- -------- -- --------
     @xmath      (2.70)
  -- -------- -- --------

where the operators @xmath ( @xmath ) create (annihilate) a fermion with
spin component denoted by @xmath ( @xmath or @xmath ), at the site
located at @xmath . @xmath and @xmath are the hopping terms in the
@xmath and @xmath directions, respectively, and @xmath is the
corresponding number operator. ( @xmath denotes the Hermitian
conjugate). Periodic boundary conditions (PBC) are assumed: @xmath .

To use the QA for the obtention of the spectrum of @xmath , described in
Sec. 2.2.2 , it is necessary first to map the fermionic operators onto
Pauli operators using, for example, the Jordan-Wigner transformation
(Sec. 2.3.1 ). Considering that these are spin-1/2 fermions, the QA
needs @xmath qubits to represent the system (qubits system), plus the
ancilla qubit.

Assuming that one is mainly interested in obtaining the lowest energy of
Eq. 2.70 , the prepared initial state should be the ground state of Eq.
2.70 . However, since no algebraic methods exist to exactly diagonalize
Eq. 2.70 for large @xmath and @xmath , such a state is not known, and
therefore impossible to prepare. Nevertheless, the ground state of the
associated mean-field Hamiltonian

  -- -------- -- --------
     @xmath
     @xmath      (2.71)
  -- -------- -- --------

is known to be a fermionic product state (Slater determinant) @xmath ,
and its corresponding state in the conventional model can be efficiently
prepared by using the methods described in Sec. 2.3.1 ; that is, it can
be prepared by applying a polynomially large (with respect to @xmath )
set of elementary gates to the fully polarized state. For finite small
lattices, @xmath is a good approximation to the ground state of Eq. 2.70
and can be used to obtain the ground state energy.

The second step of the QA is to apply the unitary operator @xmath using
single and two-qubit gates (see Fig. 2.8 for @xmath )), where, in this
case, @xmath is the Hamiltonian of Eq. 2.70 in terms of Pauli operators,
@xmath is a real (fixed) parameter, and @xmath is the Pauli operator
associated with the ancilla qubit. Since @xmath is a linear combination
of non-commuting terms (Eq. 2.70 ), the operator @xmath can be
approximated by using, for example, the first order Trotter
decomposition [ Suz93 ] . That is, @xmath , where @xmath denotes the
kinetic energy associated with the fermions of spin @xmath and @xmath
denotes the potential energy. Then,

  -- -------- -- --------
     @xmath      (2.72)
  -- -------- -- --------

where @xmath and @xmath are the corresponding terms in Pauli operators.
Also, the same approximation can be used to decompose each term @xmath .
Such approximation leads to operators that can easily be decomposed in
terms of elementary gates by using the methods described in Sec. 2.1.2 .

The energy spectrum of the Hubbard model for a @xmath lattice is shown
in Fig. 2.12 . It has been obtained after running the classical
simulation for many different values of @xmath , and performing the
Fourier transform on the data. The peaks show the eigenvalues and the
results are compared to those of an exact diagonalization method.

The algorithm described allows one to easily obtain the energy spectra
of a finite small lattice. Nevertheless, the spectra of a large lattice
cannot be efficiently obtained using the same methods. The problem is
that the ground state of the mean-field approximation differs more from
the ground state of Eq. 2.70 as the system increases, and the QA needs
to be performed an exponentially large number of times (with respect to
@xmath ) to obtain the desired property [ SOG02 ] .

### 2.5 Quantum Algorithms: Efficiency and Errors

A QA for a physical simulation is considered efficient if the total
number of operations involved for the initial state preparation, the
evolution, and the measurement process, scales at most polynomially with
the system size and with @xmath , where @xmath is the maximal tolerable
error in the measurement of a relevant property.

While the decomposition of the operator @xmath can be done efficiently
(e.g., when using the Trotter approximation) if @xmath is a physical
operator, the preparation of a general initial state could be
inefficient. Such inefficiency would arise, for example, if the state
@xmath defined in Eq. 2.37 or Eq. 2.67 is a linear combination of an
exponentially large number of elementary product states. In this case,
@xmath , with @xmath the number of modes in the system and @xmath , so
an exponentially large number of trials need to be performed before
successful preparation. However, if @xmath , it can be prepared
efficiently. This construction generalizes to more general coherent
states (see Chap. 4 ).

The three main reasons for the existence of errors @xmath in the outcome
of the quantum computation are gate imperfections, the use of the
Trotter approximation in the evolution operator, and the statistics in
measuring the polarization of the ancilla qubit (Sec. 2.2.2 ). Gate
imperfections are very common in quantum information because, contrary
to classical information, quantum gates are usually dominated by a
continuous parameter. This problem can be solved by using quantum error
correction methods and fault tolerant quantum computation [ Ste96 ,
Kit97 , NC00 , Got97 ] . According to the accuracy threshold theorem,
provided that the physical gates have sufficiently low error, it is
possible to quantum compute accurately in an efficient way.

The type of error introduced by the discretization of the evolution
operator @xmath (e.g., by using the Trotter decomposition or other
approximations) is very similar to the error obtained when performing a
classical simulation, such as when using Monte Carlo methods. This error
can be estimated by a detailed analysis of the discretization and can
also be arbitrarily reduced in an efficient way.

Finally, when using the QAs described in Sec. 2.2.2 , the step
corresponding to the measurement process can also be performed
efficiently because it only involves the measurement of a single
(ancilla) qubit, regardless of the number of qubits needed for the
simulation. Nevertheless, repeatedly many same-simulations need to be
performed to get an accurate value of such measurement. This is an
inherent property of the quantum mechanichs where a single measurement
projects the quantum state (Sec. 2.1.1 ) and does not give sufficient
information. If the relevant signal at the end of the quantum
computation is small, like when obtaining the spectra of the
two-dimensional Hubbard model on a large lattice (Sec. 2.4 ), it is
necessary to run the algorithm a larger number of times and the
efficiency can be destroyed.

In brief, a QC can only be more efficient than a CC when simulating
quantum physical systems if the three main steps of the corresponding QA
can be performed efficiently. For example, the evaluation of certain
correlation functions over a quantum state that can be easily prepared,
can be efficiently done with a QC. In general (i.e., for non-integrable
Hamiltonians), there is no known way to evaluate such correlation
efficiently with a CC [ SOG02 , SOK03 ] .

### 2.6 Experimental Implementations of Quantum Algorithms

In this chapter, I have shown that if a large QC existed today, some
simulations of quantum systems could be performed more efficiently on it
than on a CC. Nevertheless, I did not discuss how the corresponding QAs
could be experimentally implemented. Although numerous proposals for
implementing quantum information processors (QIPs) are found in the
literature [ CZ95 , CLK00 , KLM01 ] , only few of them have been
successfully implemented to process more than one qubit. In particular,
liquid-state NMR devices allow one to simulate several systems by
manipulating, nowadays, up to ten qubits [ RBC04 ] .

The physical implementation of a large scale QC still remains one of the
most important challenges for today’s physicists. The problem is a QC
should be designed such that the interaction between its constituents
and the environment is small enough to keep coherence of the quantum
state. But if such interaction is too small, the manipulation and
control processes using external sources becomes impracticable. For this
reason, quantum decoherence has been one of the most important subjects
of study during the last decade. In general, decoherence phenomena is
hard to predict due to the infinite degrees of freedom associated with
the environment. Nevertheless, a QC is reliable whenever the time
required to perform a certain task is much smaller than the
corresponding decoherence time.

In this section, I describe the experimental setting of a liquid-state
NMR QIP and show how such devices can be used to execute the QAs
described previously. Later on, I will show the experimental NMR
simulation of a particular fermionic system, where some correlation
functions and energy spectra have been obtained.

#### 2.6.1 Liquid-State NMR Quantum Information Processor

Liquid-state NMR methods allow one to physically implement a slightly
different version of the conventional model of quantum computation, with
respect to the initial state preparation and the measurement process. In
this set-up the quantum register is represented by the average state of
the nuclear spin-1/2 of an ensemble of identical molecules. Each nuclear
spin is a two-level physical system and can then be considered a
possible qubit. Thus, the idea is to perform single and two-qubit
elementary gates by external radio-frequency (rf) pulses that interact
with the nuclear spin state. In the following, I present a basic
analysis about how these processors can be used as possible QCs.

In a liquid NMR setting, the molecules are placed in a strong magnetic
field @xmath T, so that the spin of the @xmath -th nucleus of a single
molecule precesses at its Larmor frequency @xmath (Fig. 2.13 ). In the
frame rotating with the @xmath th spin, its qubit state can then be
rotated by sending rf pulses in the XY plane at the resonant frequency
@xmath . If the duration of this pulse is @xmath , the corresponding
evolution operator in the rotating frame is [ LKC02 ]

  -- -------- -- --------
     @xmath      (2.73)
  -- -------- -- --------

where @xmath is the amplitude of the RF-pulse and @xmath is its phase
(i.e., orientation) in the XY plane ( @xmath ). Then, one can induce
single spin rotations ² ² 2 One actually is restricted to 90 and 180
degrees rotations for experimental calibration issues. around any axis
in that plane by adjusting @xmath and @xmath .

Single-qubit rotations around the @xmath axis can be implemented with no
experimental imperfection or physical duration simply by changing the
phase of the abstract rotating frame with which one is working. One has
then to keep track of all these phase changes with respect to a
reference phase associated with the spectrometer. Nevertheless, these
phase tracking calculations are linear with respect to the number of
pulses and spins, and can be efficiently done on a classical computer.
Together with the rotations around any axis in the XY plane, the @xmath
rotations can generate any single qubit rotation on the Bloch sphere.

Two-qubit gates, like the Ising gate @xmath (Sec. 2.1.1 ), can be
performed by taking advantage of the spin-spin interactions (i.e.,
nuclei interaction) present in the molecule, and then achieve universal
control. To first order in perturbation, this interaction, named the
@xmath -coupling, has the form

  -- -------- -- --------
     @xmath      (2.74)
  -- -------- -- --------

where @xmath denote the corresponding pair of qubits and @xmath is their
coupling strength. Under typical NMR operating conditions, these
interaction terms are small enough to be neglected when performing
single-qubit rotations with rf pulses of short duration. Nevertheless,
between two pulses they are driving the evolution of the system. By
cleverly designing a pulse sequence, i.e., a succession of pulses and
free evolution periods, one can easily apply two-qubit gates on the
state of the system. Indeed, the so-called refocusing techniques’
principle consists of performing an arbitrary Ising gate by flipping one
of the coupled spins ( @xmath -pulse), as shown in Fig 2.14 . The
interaction evolutions before and after the refocusing pulse compensate,
leading to the effective evolution

  -- -------- -- --------
     @xmath      (2.75)
  -- -------- -- --------

where the effective coupling strength @xmath is being determined by the
difference between the durations @xmath and @xmath .

Although the physics on a single molecule has been analyzed,
liquid-state NMR uses an ensemble of about @xmath molecules in a
solution maintained at room temperature ( @xmath ). For typical values
of the magnetic field, this thermal state is extremely mixed. Clearly,
this is not the usual state in which one initializes a quantum
computation since qubits are nearly randomly mixed. Nevertheless, known
NMR methods [ LKC02 ] can be used to prepare the so-called pseudo-pure
state ( @xmath ) ³ ³ 3 Even though efficient techniques to prepare a
pseudo-pure state exist in theory [ SV98 ] , they are very hard to
implement in practice, and one instead uses non-efficient methods that
suffer an exponential decay of the observed signal with respect to the
number of qubits in the pseudo-pure state.

  -- -------- -- --------
     @xmath      (2.76)
  -- -------- -- --------

where @xmath is the identity operator, @xmath is a density operator that
describes a pure state, and @xmath is a small real constant (i.e.,
@xmath decays exponentially with the number of atoms in the solution due
to the Boltzmann’s distribution).

Under the action of any unitary evolution @xmath , this state evolves as

  -- -------- -- --------
     @xmath      (2.77)
  -- -------- -- --------

The first term in Eq. 2.77 did not change because the identity operator
is invariant under any unitary transformation. Therefore, performing
quantum computation on the ensemble is equivalent to performing quantum
computation over the initial state represented only by @xmath .

At the end of the computation, the orthogonal components of the sample
polarization in the XY plane, @xmath , and @xmath are measured (Eq. 2.15
). Note that the invariant component of @xmath does not contribute to
the signal since @xmath . Because the polarization of each single spin,
@xmath and @xmath , precesses at its own Larmor frequency @xmath , a
Fourier transformation of the temporal recording (called FID, for Free
Induction Decay) of the total magnetization needs to be performed. By
doing so, one obtains the expectation value of the polarization of each
spin (averaged over all molecules in the sample).

Summarizing, a liquid-state NMR setting allows one to initialize a
register of qubits in a pseudo-pure state, apply any unitary
transformation to this state by sending controlled rf pulses or by
leaving free interaction periods, and measure the expectation value of
some quantum observables (i.e., the spin polarization). Hence, these
systems can be used as QIPs.

### 2.7 Applications: The Fano-Anderson Model

I now present the experimental QS of the fermionic one-dimensional (1D)
Fano-Anderson model using a liquid-state NMR [ NSO05 ] , by manipulating
the state of the spin nuclei as described in Sec. 2.6.1 . Such
simulation shows then how reliable these experimental methods are and
how well the elementary gates (Sec. 2.1.1 ) can be implemented using NMR
techniques.

The 1D fermionic Fano-Anderson model consists of an @xmath -sites ring
with an impurity in the center (Fig. 2.15 ), where spinless fermions can
hop between nearest-neighbors sites with hopping matrix element (overlap
integral) @xmath , or between a site and the impurity with matrix
element @xmath . Taking the single-particle energy of a fermion in the
impurity to be @xmath , and considering the translational invariance of
the system, the Fano-Anderson Hamiltonian can be written in the wave
vector representation as [ OGK01 ]

  -- -------- -- --------
     @xmath      (2.78)
  -- -------- -- --------

where the fermionic operators @xmath and @xmath ( @xmath and @xmath )
create (destroy) a spinless fermion in the conduction mode @xmath and in
the impurity, respectively. Here, the wave vectors (modes) are @xmath (
@xmath ) and the energies per mode are @xmath .

In this form, the Hamiltonian in Eq. 2.78 is almost diagonal and can be
exactly solved: There are no interactions between fermions in different
modes @xmath , except for the mode @xmath , which interacts with the
impurity. Therefore, the relevant physics comes from this latter
interaction, and its spectrum can be exactly obtained by diagonalizing a
@xmath Hermitian matrix, regardless of @xmath and the number of fermions
in the ring, @xmath . Nevertheless, its simulation in a liquid-state NMR
QIP is the first step in QSs of quantum many-body problems and
constitutes a proof of the principles described throughout this thesis.

In order to successfully simulate this system in a liquid-state NMR QIP,
the fermionic operators need to be mapped onto the Pauli operators (Sec.
2.3.1 ). This is done by using the following Jordan-Wigner
transformation

  -- -------- -- --------
     @xmath      (2.79)
  -- -------- -- --------

In this language, a logical state @xmath (with @xmath in the usual
spin-1/2 notation) corresponds to having a spinless fermion in either
the impurity, if @xmath , or in the mode @xmath , otherwise (Fig. 2.16
). (Again, the fermionic vacuum state @xmath maps onto @xmath .)

The algorithms described in Sec. 2.2.2 can be used, for example, to
evaluate the probability amplitude of having a fermion in mode @xmath at
time @xmath , if initially ( @xmath ) the quantum state is the Fermi sea
state with @xmath fermions; that is, @xmath . This probability is given
by the modulus square of the following dynamical correlation function:

  -- -------- -- --------
     @xmath      (2.80)
  -- -------- -- --------

where @xmath , @xmath is the time evolution operator, and @xmath .
Basically, @xmath is the overlap between the quantum state @xmath ,
which does not evolve, and the state @xmath , which does not vanish
unless the evolved state @xmath already contains a fermion in the
impurity site ( @xmath ), i.e., contains the fermion which initially was
in the @xmath mode. In terms of Pauli operators (see Eq. 2.79 ), this
correlation function reduces to a two-qubit problem [ OGK01 ] :

  -- -------- -- --------
     @xmath      (2.81)
  -- -------- -- --------

where @xmath is an evolution operator arising from the interaction terms
in Eq. 2.78 , with

  -- -------- -- --------
     @xmath      (2.82)
  -- -------- -- --------

and @xmath in the logical basis (i.e., the initial state with one
fermion in the @xmath mode).

In order to use the quantum circuit depicted in Fig. 2.7 , all operators
in Eq. 2.81 must be unitary. Because of the symmetries of @xmath , such
as the global @xmath - @xmath rotation that maps @xmath , leaving the
state @xmath invariant (up to a phase factor), then @xmath and @xmath .
Therefore, Eq. 2.81 can be written in terms of unitary operators as

  -- -------- -- --------
     @xmath      (2.83)
  -- -------- -- --------

Figure 2.17 shows the quantum circuit used to obtain @xmath . It is
derived from Fig. 2.7 by making the following identifications: @xmath ,
@xmath , and @xmath . The corresponding controlled operations C-A and
C-B transform into the well-known controlled-not (CNOT) gates (Sec.
2.1.3 ). All the unitary operations appearing in Fig. 2.17 were
decomposed into elementary NMR gates (single qubit rotations and Ising
interactions). In particular, the decomposition of @xmath can be found
in Ref. [ OGK01 ] , obtaining

  -- -------- -- --------
     @xmath      (2.84)
  -- -------- -- --------

where @xmath , with @xmath , and @xmath . The unitary operator @xmath is
decomposed as (Fig. 2.17 )

  -- -------- -- --------
     @xmath      (2.85)
  -- -------- -- --------

with the parameter @xmath satisfying @xmath , and @xmath .

The CNOT gates C-A and C-B can also be decomposed into elementary gates,
as explained in Sec. 2.1.2 . Therefore, @xmath can be obtained using an
NMR QIP by applying the appropriate rf pulses (Sec. 2.6.1 ). Remarkably,
only three qubits are required for the simulation (Fig. 2.17 ): The
ancilla qubit @xmath , one qubit representing the impurity site
(qubit-1), and one qubit representing the @xmath mode (qubit-2).

Similarly, the algorithm depicted in Fig. 2.8 can be used if interested
in obtaining the spectrum of the Hamiltonian @xmath of Eq. 2.78 ,
replacing @xmath . In particular, when @xmath (one site plus the
impurity), Eq. 2.78 in terms of Pauli operators reduces to @xmath , with
@xmath defined in Eq. 2.82 . In this case, the two eigenvalues @xmath (
@xmath ) of the one-particle subspace can be extracted from the
correlation function

  -- -------- -- --------
     @xmath      (2.86)
  -- -------- -- --------

which can be obtained by measuring the polarization of the ancilla qubit
after the quantum circuit shown in Fig. 2.8 has been applied. Since
@xmath is not an eigenstate of @xmath , it has a non-zero overlap with
the two one-particle eigenstates, called @xmath (see Appendix B ).

Again, the operator @xmath (Fig. 2.8 ) needs to be decomposed into
elementary gates for its implementation in an NMR QIP. Noticing that
@xmath , then

  -- -------- -- --------
     @xmath      (2.87)
  -- -------- -- --------

where the unitary operator @xmath is decomposed as in Eq. 2.85 . Figure
2.18 shows the corresponding circuit in terms of elementary gates.
Again, qubits 1 and 2 represent the impurity site and the @xmath mode,
respectively. @xmath denotes the ancilla qubit. Since the idea is to
perform a DFT on the results obtained from the measurement (see Appendix
B ), this circuit needs to be applied for several values of the
parameter @xmath (Sec. 2.1.3 ).

#### 2.7.1 Experimental Protocol and Results

The NMR setting used for the evaluation of @xmath and @xmath is based on
an ensemble solution of trans-crotonic acid and methanol dissolved in
acetone (Fig. 2.19 ). This molecule can be used as a seven-qubit
register, where methanol is used to perform rf-power selection and
accurately calibrate the rf pulses. In this way, the decoherence time (
@xmath ) is in the range from several hundreds of milliseconds to more
than a second, allowing one to perform around 1000 single-qubit gates
and around 100 two-qubit (Ising) gates.

The relevant nuclei of the molecule are denoted as @xmath , @xmath ,
@xmath , and @xmath , corresponding to the Carbon atoms, @xmath and
@xmath corresponding to the Hydrogen atoms, and M corresponding to the
methyl group. Although this is a seven-qubit register, the simulation of
the Fano-Anderson model requires only three qubits. Considering
different practical issues, such as the nuclei-nuclei interaction, the
selection has been made as follows: The spin nucleus @xmath represents
qubit-1, the spin nucleus represents qubit-2, and the spin nucleus
@xmath represents the ancilla qubit @xmath .

The idea is then to apply the desired elementary gates by sending
appropriate rf pulses. Nevertheless, designing a pulse sequence to
implement exactly the desired unitary transformation would require very
long refocusing schemes to cancel out all the unwanted naturally
occurring @xmath couplings (free evolutions). Then, the overall duration
of the pulse sequence increases and decoherence effects could destroy
the signal. Therefore, a pulse sequence compiler is used to approximate
the evolution and numerically optimize the delays between pulses to
minimize the error introduced by such approximation.

The approximate evolution is then applied to the corresponding initial
state @xmath , which is the density operator corresponding to the pure
state @xmath . Since the identity part @xmath is not an observable, the
pseudo-pure state @xmath , with @xmath and @xmath , can be used
equivalently. Then @xmath , which is a deviation of the completely mixed
state due to the high temperature of the ensemble (Sec. 2.6.1 ), can
easily be prepared using already developed NMR techniques [ LKC02 ] .

As mentioned in Sec. 2.2.2 , the desired result of the QA is encoded in
the polarization @xmath of the nucleus @xmath (i.e., ancilla qubit).
This component precesses at the @xmath -Larmor frequency @xmath . To
measure it, a Fourier transformation on the measured free induction
decay FID (i.e., the decay in the polarization due to the contribution
of different Larmor frequencies) must be performed, integrating only the
peak located at @xmath . Nevertheless, the absolute value of this signal
is irrelevant since it depends on many experimental parameters such as
the solution concentration, the probe sensitivity, and the gain of the
amplifier. The relevant quantity is its intensity relative to a
reference signal given by the observation of the initial state @xmath .
To get a good signal-to-noise ratio, each experiment (or scan ) was done
several times and the corresponding experimental data were added.
Moreover, to average over small magnetic fluctuations occurring within
the duration of the whole experiment the scans of the reference
experiment (i.e., the measurement of the reference signal) are
interlaced with scans of the actual complete pulse sequence. To increase
the spatial homogeneity of the field over the sample, several automated
shimming periods, consisting of fine tuning small additional coils
located around the sample, have been inserted.

In Fig. 2.20 , I show the experimental results obtained for the
evaluation of @xmath for @xmath and @xmath , and for different values of
@xmath . The duration of the optimized pulse sequences from the
beginning of the initialization step to the beginning of the data
acquisition, was 97 ms. For comparison, the analytical form of @xmath ,
as well as the simulated data points (i.e., data points obtained by
simulating the quantum algorithm on a conventional computer) are also
shown in the figure.

In Fig. 2.21 , I present the experimental results obtained for the
evaluation of @xmath , to obtain the corresponding eigenvalues for the
Hamiltonian, with @xmath , and @xmath . The pulse sequence applied is
the one corresponding to the quantum circuit shown in Fig. 2.18 with the
corresponding refocusing pulses. In Fig. 2.21 , I also show the
analytical and simulated data points. The DFT of the experimental data
is shown in Fig. 2.22 , revealing the expected peaks at the frequency
corresponding to the two one-particle eigenvalues of Eq. 2.78 , for the
above parameters.

The close agreement between the experimental results and the
corresponding simulations, using the refocusing pulses, suggests that
the main contribution to errors comes from the incomplete refocusing
scheme used in the optimization procedure. Therefore, increasing the
number of refocusing pulses might have led to more accurate results even
if they would have increased the overall duration of the pulse sequence.

### 2.8 Summary

Throughout this chapter, I have addressed several broad issues
associated with the simulation of physical phenomena with QCs. In
particular, I presented efficient ways to map the algebras of operators
associated to the physical system to be simulated onto the algebra of
Pauli operators. These mappings are sufficient to establish the
equivalence of the different physical models to a universal model of
quantum computation: The conventional model.

I also explored various issues associated with simulations (Sec. 2.3 ),
remarking that every step in a QA must be performed efficiently to have
an efficient simulation. Although a QC can simulate some quantum
physical systems more efficiently than its classical analogue, I showed
that many challenges still remain to prove this statement in a general
way (Sec. 2.5 ). As an example, I presented the QS of the
two-dimensional fermionic Hubbard model, where there is no known way to
obtain its ground state energy efficiently using a QC.

Finally, I described the experimental implementation of a QA using a
liquid-state NMR QIP (Sec. 2.7 ). This experiment allows one to
understand the advantages and disadvantages of simulating physical
systems with today’s QCs, and, in particular, to understand the power of
quantum computation.

## Chapter 3 Quantum Entanglement as an Observer-Dependent Concept

  “…Maximal knowledge of a total (quantum) system does not necessarily
  include total knowledge of all its parts, not even when these are
  fully separated from each other and at the moment are not influencing
  each other at all.”
  E. Schrödinger (1935).

Quantum Entanglement (QE) is referred to the existence of certain
correlations in a quantum system that have no classical interpretation.
This concept was first introduced by E. Schrödinger [ Sch35 ] as the
essence of quantum mechanics, and is responsible for many
counterintuitive physical processes like the violation of the local
realism. Naturally, it has been the main focus of philosophical
discussions since the early days of quantum mechanics, and it is now
known that entanglement is the defining resource that allows one to
perform certain protocols like quantum cryptography, quantum
teleportation, and even more efficient computation. For this reason, QE
has been one of the most important subjects of study in QIT during
recent years. Nevertheless, its analysis requires a good understanding
of the conceptual foundations of the quantum theory. For this purpose, a
historical introduction to the subject is given in the following
sections.
The EPR Paradox

In 1935, Einstein, Podolsky and Rosen designed an experiment, the so
called EPR paradox [ EPR35 ] , to prove that quantum mechanics was an
incomplete description of physical reality. Neither they nor others
agreed that the (probabilistic) outcome of a measurement performed on a
quantum system was not uniquely determined by its quantum state @xmath .
They believed, instead, that the result of a measurement was a property
associated with the quantum system right before the measurement was
performed.

To prove this statement, they considered a system composed of two
quantum particles where, although the position and momentum of each
particle were not well defined (uncertainty), the sum of their positions
and the difference of their momenta were. For pedagogical purposes, I
consider here a simpler version of this experiment by means of the
conventional model [ Boh51 ] where the qualitative results are
equivalent to those of the EPR paradox. This simplified model consists
of two qubits initially prepared in some state (Fig. 3.1 )

  -- -------- -- -------
     @xmath      (3.1)
  -- -------- -- -------

[Such a state represents, for example, the singlet state (total spin 0)
of two-spin 1/2.] Assuming that a measurement (in the logical basis) is
performed on qubit @xmath , quantum mechanics says that the outcome of
such measurement projects the state @xmath onto the state @xmath with
probability 1/2, and onto the state @xmath with the same probability
(Sec. 2.1.1 ). Thus, a measurement on qubit @xmath projects also the
state of qubit @xmath , such that the outcome of a later measurement
performed on it can be predicted with certainty.

What worried Einstein and others is the fact that, in principle, both
particles (qubits) could be very far apart in physical space. Therefore,
a person located close to qubit @xmath could gain information about the
state of qubit @xmath almost immediately, violating the principle of
locality; that is, some information could be propagated at infinitely
large speed. If such were the case, the existence of these quantum
correlations would be against the relativity theory, and the
understanding of the physical world would be completely different.
Nevertheless, a deeper analysis shows that such violation does not exist
and that quantum mechanics is right. Below, I present the experiments
suggested by Bell to show that quantum correlations exist in nature and
cannot be explained by means of classical theory.
Bell’s Inequalities

The idea of existence of hidden variables which determine the outcome of
a measurement in a quantum system was proved to be incompatible with
quantum mechanics by J. Bell [ Bel64 ] in 1964. Basically, he proposed a
similar experiment to the one described above but such that the
measurements could be performed in any direction, that is, in a possible
basis different to the logical one. For example, when working with
photons, such measurements could be performed by using polarizers
rotated by different angles.

Assuming that qubit @xmath is measured in some basis denoted by the
vector @xmath and qubit @xmath is measured in the basis denoted by
@xmath , such measurements project the state of either qubit in the
corresponding direction with eigenvalues @xmath (Sec. 2.1.1 ). In other
words, the state after the measurement of the @xmath th qubit can be
represented as a vector pointing in the direction @xmath (+1) or in the
opposite direction @xmath (-1).

The idea of Bell was to obtain the function @xmath , which denotes the
average product of the outcomes of the corresponding measurements for
different directions @xmath . It can be proved that if @xmath , then
@xmath for a Bell state of the form of Eq. 3.1 . This is because such
state can be written in the same form for other locally rotated basis.
For example

  -- -------- -- -------
     @xmath      (3.2)
  -- -------- -- -------

where @xmath are the eigenstates of the Pauli flip operator @xmath with
eigenvalue @xmath . Then, a local measurement of the Bell state in the
@xmath direction shows the same results as a measurement in the @xmath
direction (logical basis).

Equivalently, for the Bell state @xmath one obtains @xmath , and for
arbitrary directions, @xmath ; that is, the usual scalar product between
vectors in real space. Interestingly, such a result is associated with
the existence of correlations of quantum nature and cannot be obtained
by any classical theory, including hidden variables.

To show this, J. Bell first assumed that the complete state of both
qubits was characterized by the existence of uncontrollable hidden
variables, denoted by @xmath . He also assumed that the measurement
outcome of qubit @xmath was independent of the orientation @xmath where
qubit @xmath is measured (i.e., locality). Therefore, there exist two
functions @xmath and @xmath , which correspond to both measurements
outcomes, with values

  -- -------- -- -------
     @xmath      (3.3)
  -- -------- -- -------

In particular, both functions satisfy the desired result if @xmath (see
Eq. 3.1 ):

  -- -------- -- -------
     @xmath      (3.4)
  -- -------- -- -------

Nevertheless, if @xmath is the probability distribution for the hidden
variable, with @xmath , the average of the product of both outcomes
should be

  -- -------- -- -------
     @xmath      (3.5)
  -- -------- -- -------

and from Eq. 3.4 ,

  -- -------- -- -------
     @xmath      (3.6)
  -- -------- -- -------

Considering another unit vector @xmath and considering that the three
integers @xmath satisfy

  -- -------- -- -------
     @xmath      (3.7)
  -- -------- -- -------

and after some simple algebraic manipulations of Eq. 3.6 , together with
@xmath , the following Bell inequality is obtained:

  -- -------- -- -------
     @xmath      (3.8)
  -- -------- -- -------

Remarkably, this Bell inequality sometimes is violated in a quantum
mechanical system due to the existence of non-classical correlations.
For example, if the vectors @xmath and @xmath are orthogonal, and @xmath
lies between them making a @xmath angle (Fig. 3.1 ), then for the
quantum state of Eq. 3.1

  -- -------- -- -------
     @xmath      (3.9)
  -- -------- -- -------

and

  -- -------- -- --------
     @xmath      (3.10)
  -- -------- -- --------

Interpretation

The violation of Bell’s inequalities was experimentally proved in the
1980s using photon atomic transitions [ AGR82 ] . The results obtained
were in excellent agreement with the predictions of quantum mechanics,
assuring that no hidden variable theory could overcome the problem of
nonlocality. However, an analysis of the measurement process tells one
that the existence of non-classical correlations does not imply a
violation of causality, as Einstein, et. al., stated. In other words,
the almost instant influence of the measurement outcome of one qubit in
the measurement outcome of the other, cannot be regarded as the
existence of some sort of communication (i.e., travelling information)
between both qubits: The outcome of the measurement (projection) is
completely random.

Many different analysis about the nonclassical properties of quantum
systems are discussed in almost any book about quantum mechanics. In
most cases, the problem of measurement, which is not analyzed in detail
in the present work, is also considered. In this chapter, I mainly focus
on the study of these nonclassical correlations which define QE. In the
first place, I review the usual (or traditional) notion to prepare for a
more general concept denoted as generalized entanglement, which is also
presented here. Finally, I present some examples to show how generalized
entanglement can be used in a more general framework.

### 3.1 Quantum Entanglement

The standard setting for studying entanglement usually involves a
quantum system @xmath composed of two distinguishable subsystems @xmath
(for Alice) and @xmath (for Bob), with Hilbert spaces denoted by @xmath
and @xmath , respectively. Then the total Hilbert space for the joint
system is @xmath , with @xmath the usual tensor product. A quantum state
@xmath (i.e., its density operator) is said to be separable if and only
if

  -- -------- -- --------
     @xmath      (3.11)
  -- -------- -- --------

where @xmath , with @xmath ( @xmath ) being the corresponding
probabilities. The density operators @xmath and @xmath , which describe
pure states of Alice and Bob, respectively, need not describe orthogonal
states for different integers @xmath . A quantum state of the joint
system is then separable whenever it can be written as a probabilistic
(convex) combination or a mixture of product (separable) states. For
example, if both @xmath and @xmath are single qubits, the pure state

  -- -------- -- --------
     @xmath      (3.12)
  -- -------- -- --------

is separable because it can be rewritten as

  -- -------- -- --------
     @xmath      (3.13)
  -- -------- -- --------

Interestingly, separable states can be prepared by means of local
operations (e.g., rotations, local measurements, etc.) and classical
communication between the different parties of the system. Then, they do
not possess correlations of quantum nature and cannot be distinguished
from classical states. This property leads to the following definition:
A quantum state @xmath of a composite system is said to be entangled if
it is not separable and unentangled otherwise. For example, the Bell
state of Eq. 3.1 is entangled because there is no basis where it can be
written as a product state. Naturally, this definition of entanglement
applies not only to bipartite systems but to all systems composed of
many (i.e., more than two) distinguishable subsystems.

Finding a decomposition like Eq. 3.11 for a given quantum state @xmath
of a joint system, or even showing that @xmath describes an entangled
state (i.e., no such decomposition exists) is, in general, a very
difficult task. In fact, algebraic methods to check if @xmath is
entangled or not only exist for the case of bipartite systems, and for
Alice and Bob being single qubits or two level subsystems. However, if
the state is pure (i.e., @xmath ), simple methods to check separability
exist.

#### 3.1.1 Separability and von Neuman Entropy

The Schmidt decomposition of a pure quantum state @xmath provides a
useful tool to check its separability. When using this decomposition,
any state @xmath of a bipartite quantum system can be written as [ Per98
]

  -- -------- -- --------
     @xmath      (3.14)
  -- -------- -- --------

where the pure states @xmath and @xmath are orthonormal states of
subsystems @xmath and @xmath , respectively; that is

  -- -------- -- --------
     @xmath      (3.15)
  -- -------- -- --------

Without loss of generality, the coefficients @xmath of Eq. 3.14 are real
(i.e., the phases have been absorbed in the corresponding states) and,
from the normalization of @xmath , they satisfy @xmath . If @xmath and
@xmath denote the dimensions of the Hilbert spaces @xmath and @xmath ,
respectively, the integer @xmath satisfies

  -- -------- -- --------
     @xmath      (3.16)
  -- -------- -- --------

Obviously, the pure state @xmath is entangled whenever @xmath in the
decomposition and unentangled otherwise ( @xmath ). Moreover, @xmath is
entangled whenever it looks mixed from the point of view of either
observer (Alice or Bob). In other words, when obtaining the reduced
density operator of one subsystem by tracing out the other, such density
operator describes a mixed state when @xmath is non-separable or
entangled. This is only valid for pure states of the joint system. For
example, the reduced density operator @xmath associated to Alice is

  -- -------- -- --------
     @xmath      (3.17)
  -- -------- -- --------

Then, if @xmath (or equivalently @xmath ), the reduced density operator
@xmath describes a mixed state and @xmath is entangled. Similar results
are obtained from the point of view of Bob.

A useful way to quantify the entanglement of a pure bipartite state
@xmath is given by the von Neuman entropy @xmath of either @xmath or
@xmath . Its definition is

  -- -------- -- --------
     @xmath      (3.18)
  -- -------- -- --------

@xmath is zero (minimal) for a product state and takes its maximum value
( @xmath ) for maximally entangled states, such as the Bell state of Eq.
3.1 . Moreover, @xmath remains invariant or decreases under any
operation on @xmath performed locally by Alice or Bob. As I will show,
this is an important property for a measure of entanglement.

All the concepts described in this section can be naturally extended for
multipartite systems. Then a pure quantum state @xmath is entangled
whenever it looks mixed to, at least, one of the observers associated to
one of the parties. A von Neuman measure can be defined accordingly, by
measuring the entanglement of every single party with the rest of the
system.

#### 3.1.2 Mixed-State Entanglement and the Concurrence

As mentioned, checking the separability of a mixed quantum state is a
difficult task because of the many equivalent ways that the density
operator can be decomposed. Nevertheless, certain (classical) algorithms
to calculate the entanglement of a mixed state exist, but their
complexity scales with the dimension @xmath of the Hilbert space @xmath
associated to the joint quantum system. Such dimension is known to scale
exponentially with the system size. Thus, these algorithms can only be
applied to study the entanglement of small systems.

For a mixed state of a bipartite system @xmath , that is, the system
being in the pure state @xmath with probability @xmath , the
entanglement of formation @xmath is defined as

  -- -------- -- --------
     @xmath      (3.19)
  -- -------- -- --------

where @xmath is the von Neuman entropy defined in Eq. 3.18 . Each
possible decomposition of @xmath corresponds to a certain amount of
entanglement, so the minimum needs to be obtained. (Equation 3.19 is
trivially extended for multipartite systems.) For example, the mixed
state of a two-qubit system

  -- -------- -- --------
     @xmath      (3.20)
  -- -------- -- --------

where @xmath and @xmath are maximally entangled states (i.e., Bell
states), seems to be maximally entangled. However, @xmath is actually
separable and thus unentangled :

  -- -------- -- --------
     @xmath      (3.21)
  -- -------- -- --------

that is, a mixture of product states.

As mentioned, the entanglement for a mixed state of two qubits ( @xmath
and @xmath ) can be exactly computed without calculating the minimal
value of Eq. 3.19 [ Woo98 ] . For this purpose, the time reversal
operation needs first to be applied. That is, if @xmath is the state of
the two-qubit system, then

  -- -------- -- --------
     @xmath      (3.22)
  -- -------- -- --------

where @xmath is the complex conjugate of @xmath , is the corresponding
spin-flipped state. Remarkably, the entanglement of formation (Eq. 3.19
) for this system can be expressed as

  -- -------- -- --------
     @xmath      (3.23)
  -- -------- -- --------

where the real function @xmath is monotonically increasing with @xmath ,
and @xmath is denoted as the concurrence of @xmath [ Woo98 ] . (Due to
this property, one can use the concurrence as a measure of entanglement
in the two-qubit system, instead.) Defining the operator

  -- -------- -- --------
     @xmath      (3.24)
  -- -------- -- --------

the concurrence is defined by

  -- -------- -- --------
     @xmath      (3.25)
  -- -------- -- --------

where the @xmath s are the eigenvalues of @xmath in decreasing order (
@xmath ). Then, @xmath takes its maximum value [ @xmath ] for Bell
states (Eq. 3.1 ) and vanishes for any separable (mixed) state.

#### 3.1.3 Measures of Quantum Entanglement

A good measure of entanglement @xmath for a multipartite quantum system,
such as the entanglement of formation of Eq. 3.19 , needs to satisfy
certain requirements [ Vid00 ] . First, such a measure must take its
minimum value, @xmath , whenever @xmath describes a separable state.
Second, unitary local operations, local measurements, and classical
communication between different parties in the system (usually referred
to LOCC operations) cannot increase @xmath . It is reasonable that LOCC
operations do not transform, for example, a separable state into a
nonseparable one. Moreover, local measurements project the state
lowering its entanglement.

Other requirements also have to be considered when defining a good
measure of entanglement. These include continuity, convexity,
additivity, and subadditivity. For example, if two density operators
describe almost the same state, they must have similar amounts of
entanglement. That is, @xmath must be a continuous function of @xmath .
Also, the entanglement of a linear combination of two density operators
@xmath and @xmath , that is, @xmath (with @xmath ) must satisfy

  -- -------- -- --------
     @xmath      (3.26)
  -- -------- -- --------

A function satisfying Eq. 3.26 is said to be convex. Basically, the
reason for such convexity is because an operator like @xmath tends to
have less entanglement than the corresponding operators @xmath and
@xmath .

It is not very clear how important the requirements of additivity and
subadditivity are. The additivity property states that if the system is
composed of @xmath identical subsystems, all being in the state given by
the density operator @xmath , then

  -- -------- -- --------
     @xmath      (3.27)
  -- -------- -- --------

The subadditivity property states, however, that if the density operator
@xmath of the total (multipartite) system can be expressed as @xmath ,
then

  -- -------- -- --------
     @xmath      (3.28)
  -- -------- -- --------

In fact, the entanglement of formation for multipartite systems, as
defined by Eq 3.19 , does not satisfy the additivity property.

### 3.2 Generalized Entanglement

The main purpose of generalized entanglement (GE) is to extend the
concepts of traditional entanglement to a more general setting by
defining new measures that can be applied to any quantum system, even
when a nontrivial subsystem decomposition exists. In this way, GE is
considered as an observer-dependent property of a quantum state and, as
in the usual case, it is determined by a preferred set of observables of
the quantum system under study. It is expected that this new concept
allows for a better understanding of non-classical correlations in
quantum mechanics.

In this section, I rigorously define GE [ BKO03 , BKO04 ] in terms of
reduced states and I analyze the important case where the preferred set
of observables belong to a certain Lie algebra (i.e., an algebra closed
under commutation). Some examples to show how GE works in different
quantum systems will be presented and, in particular, I will show how
the traditional notion can be recovered.

#### 3.2.1 Generalized Entanglement: Definition

Assume that @xmath is a finite set of observables; that is, @xmath ,
with @xmath the Hermitian operators that linearly map quantum states of
a Hilbert space @xmath into quantum states of the same space. Such set
of observables is usually intrinsically associated to the quantum system
@xmath under study and depends on its nature, control access,
superselection rules (e.g., particle number conservation), etc. For a
quantum state with corresponding density matrix @xmath ( @xmath ; @xmath
), its @xmath -state (reduced state) is defined to be a linear
functional @xmath on the operators of @xmath according to

  -- -------- -- --------
     @xmath      (3.29)
  -- -------- -- --------

with @xmath , and @xmath its expectation value over the state @xmath .
In particular, if @xmath denotes the set of all linearly independent
observables associated to the quantum system, the set of @xmath -states
completely determine the state of the system, since @xmath can be
exactly recovered from those expectations.

Considering the set of all @xmath -states, it can be shown that such set
is closed under convex (or probabilistic) combination. In other words,
if @xmath are @xmath -states associated to different density matrices
@xmath , then @xmath is also a possible @xmath -state for any
probabilistic distribution @xmath ( @xmath , @xmath ). If the set @xmath
is compact then all @xmath -states can be obtained as combinations of
extremal states. Extremal states are those defined as the reduced states
that cannot be written as a convex combination or mixture of two or more
@xmath -states. In general, extremal states are least uncertainty states
so they are also referred to @xmath -pure states.

With these definitions and properties, a pure state @xmath (i.e., @xmath
) is said to be generalized unentangled relative to the distinguished
set of observables @xmath if its reduced state, that is, the state
defined by the expectations of the operators in @xmath , is pure or
extremal. Otherwise, @xmath is said to be generalized entangled relative
to @xmath .

Although such definition can be applied to any set of observables,
relevant physical applications are usually found when the set @xmath is
a Lie algebra of operators. In the following, I describe this important
case while giving a short description of Lie algebra theory.

#### 3.2.2 Generalized Entanglement and Lie Algebras

I now focus on the case when @xmath is a finite real @xmath -dimensional
Lie algebra of observables acting irreducibly on @xmath (the Hilbert
space), with bracket given by

  -- -------- -- --------
     @xmath      (3.30)
  -- -------- -- --------

(Here, no distinction between the abstract Lie algebra isomorphic to
@xmath , and the concrete matrix Lie algebra @xmath of observables
acting on the Hilbert space @xmath is made.) The corresponding induced
Lie group of @xmath is given by the map @xmath , with @xmath . Also,
@xmath is usually assumed to be semi-simple, that is, with no
commutative ideals ¹ ¹ 1 An ideal of @xmath is a subalgebra @xmath
invariant under the commutation with any element of @xmath . .

The projection map of a quantum state, with density matrix @xmath , onto
@xmath can be uniquely defined by the trace inner product as

  -- -------- -- --------
     @xmath      (3.31)
  -- -------- -- --------

where @xmath is the corresponding expectation value. Notice that only
the @xmath -state associated to @xmath must be known to build @xmath .
Similarly, the relative purity or @xmath -purity is defined as the
squared length of the projection; that is

  -- -------- -- --------
     @xmath      (3.32)
  -- -------- -- --------

and if the operators are Schmidt orthogonal satisfying @xmath , then

  -- -------- -- --------
     @xmath      (3.33)
  -- -------- -- --------

Here @xmath is a real constant for normalization requirements. The
@xmath -purity as defined by Eq. 3.33 is a group invariant function:

  -- -------- -- --------
     @xmath      (3.34)
  -- -------- -- --------

Interesting consequences from the definition of the relative purity are
obtained when the matrix Lie algebra @xmath acts irreducibly on the
Hilbert space @xmath associated to the system, that is, the
representation of @xmath is irreducible. In such a case, a pure quantum
state @xmath is extremal or @xmath -pure if and only if the @xmath
-purity takes its maximum value [ BKO03 ] . Such states are the
so-called generalized coherent states (GCSs) of @xmath and are
constructed as

  -- -- -- --------
           (3.35)
  -- -- -- --------

where @xmath , and @xmath is a reference state corresponding to the
highest (or lowest) weight state of @xmath . GCSs are a generalization
of the traditional coherent states of the harmonic oscillator or the
radiation field [ SZ02 ] , where in those cases @xmath is the vacuum or
no-excitation state. (The first term on the right hand side of Eq. 3.35
is a general displacement operator.)

In general, the reference state @xmath is a well defined object in
finite semi-simple Lie algebras, after a particular Cartan-Weyl (CW)
decomposition is performed. In a CW basis, the algebra is written as

  -- -------- -- --------
     @xmath      (3.36)
  -- -------- -- --------

Here, @xmath , with @xmath , is a Cartan subalgebra (CSA) of @xmath
defined as the biggest set of commuting operators in @xmath , and the
integer @xmath defines the rank of @xmath . The sets @xmath and @xmath ,
with @xmath , are usually referred to the sets of raising and lowering
operators, respectively. By notation, @xmath , the dimension of @xmath .
The corresponding commutation relations are

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (3.37)
     @xmath   @xmath   @xmath      (3.38)
     @xmath   @xmath   @xmath      (3.39)
     @xmath   @xmath   @xmath      (3.40)
  -- -------- -------- -------- -- --------

where the vectors @xmath are defined as the roots of the algebra, and
@xmath depends on the corresponding roots.

Equation 3.37 states that the operators in @xmath can be simultaneously
diagonalized. Their eigenstates in a given representation are the
corresponding weight states . A weight state @xmath of @xmath satisfies
the eigenvalue equation

  -- -------- -- --------
     @xmath      (3.41)
  -- -------- -- --------

where the eigenvalues @xmath are defined as the weights . Moreover, the
vectors @xmath are defined as the weight vectors .

Due to the commutation relations of Eq. 3.38 , a raising operator acting
over a weight state either annihilates it (i.e., @xmath ) or maps it to
a different weight state:

  -- -------- -- --------
     @xmath      (3.42)
  -- -------- -- --------

Similar results are obtained for the lowering operators @xmath from Eq.
3.39 . The simplest case is given by the algebra @xmath , where the
spin-1/2 representation is given by the Pauli matrices defined in Eq.
2.1 .

A weight vector @xmath is said to be positive if the first non-zero
component is positive. Then, a weight vector @xmath is said to be larger
than a weight vector @xmath if they differ on a positive weight vector.
In particular, the root vectors @xmath in Eq. 3.36 are weight vectors of
a representation of @xmath called adjoint representation (Appendix C ).
With no loss of generality, these vectors have been chosen to be
positive (or equivalently, @xmath to be negative) in the CW
decomposition.

The definition of positivity naturally extends to any weight vector in
any representation of @xmath . Therefore, a highest weight state @xmath
of @xmath is defined as the state with highest weight vector @xmath in
the representation. Similarly, a lowest weight state @xmath is defined
as the state with lowest weight vector in the representation. These
states are annihilated by every raising and lowering operator,
respectively:

  -- -------- -- --------
     @xmath      (3.43)
  -- -------- -- --------

Both, @xmath and @xmath , are possible reference states @xmath to
generate the GCSs or generalized unentangled states of @xmath (Eq. 3.35
). With no loss of generality, I will mainly use @xmath as the reference
state. Since its weight vector is positive, this state is then the
unique ground state of a Hamiltonian

  -- -------- -- --------
     @xmath      (3.44)
  -- -------- -- --------

where the sign of the coefficients @xmath depends on the weight.
Therefore, every GCS is the unique ground state of some Hamiltonian in
@xmath [ BKO03 ] .

A common uncertainty measure for the algebra @xmath is given by

  -- -------- -- --------
     @xmath      (3.45)
  -- -------- -- --------

Remarkably, GCSs of @xmath are also minimal uncertainty states. When
@xmath acts irreducibly on @xmath , the first term on the rhs of Eq.
3.45 is a Casimir, i.e. invariant, while the second term is the @xmath
-purity. Because GCSs have maximum purity, the corresponding uncertainty
is minimal.

It is important to realize that the relationships just mentioned between
maximal purity, generalized coherence, and generalized unentanglement
established for a pure state relative to an irreducibly represented Lie
algebra @xmath do not automatically extend to the case where @xmath acts
reducibly on @xmath . In fact, for a semi-simple Lie algebra @xmath , a
generic finite dimensional representation of @xmath may be decomposed as
a direct sum of irreducibly invariant subspaces, @xmath , with each of
the @xmath being in turn the direct sum of its weight spaces. Then, the
algebra acts irreducibly on each @xmath , with the corresponding
irreducible representation (irrep). In particular, every irrep appearing
in the decomposition has a highest (and lowest) weight state, and for
each of these irreps there is a manifold of GCSs constructed as the
orbit of a highest weight state for that irrep. Therefore, these GCSs
will not satisfy in general the extremality property that defines
generalized unentangled states. Indeed, the extremal weight vectors,
which correspond to generalized unentangled states, need not all have
the same length ( @xmath -purity). Also, the minimal uncertainty
property could be lost. Maximal purity remains then as a sufficient,
though no longer a necessary, condition for generalized unentanglement.
Nevertheless, all the statements obtained for the irreducible case still
apply for the examples and problems presented in this thesis.

#### 3.2.3 Generalized Entanglement and Mixed States

For mixed states on @xmath , the direct generalization of the squared
length of the projection onto @xmath as in Eq. ( 3.32 ) does not give a
GE measure with well-defined monotonicity properties under appropriate
generalizations of the LOCC set transformations as explained in Sec.
3.1.3 [ BKO03 ] . A proper extension of the quadratic purity measure
defined by Eq. 3.32 for pure states to mixed states may be naturally
obtained via a standard convex roof construction. If @xmath , with
@xmath and @xmath , the latter is obtained by calculating the maximum
@xmath -purity (minimum entanglement) over all possible convex
decompositions @xmath of the density operator @xmath as a pure-state
ensemble. In general, similarly to what happens for most mixed-state
entanglement measures, the required extremization makes the resulting
quantity very hard to compute. Nevertheless, the cases studied in this
thesis are always related with pure states and no extremization process
is required.

### 3.3 Relative Purity as a Measure of Entanglement in Quantum Systems

In order to understand its meaning as a measure of entanglement for pure
quantum states, I now apply the definition of relative purity to the
study of non-classical correlations in different physical systems.
First, I will focus on spin systems, showing that for particular subsets
of observables, the @xmath -purity can be reduced to the usual notion of
entanglement: The pure quantum states that can be written as a product
of states of each party are generalized unentangled in this case. For
this purpose, and because they will also be needed in future cases, I
introduce the following representative quantum states for @xmath spins
of magnitude @xmath :

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (3.46)
     @xmath   @xmath   @xmath
     @xmath   @xmath   @xmath
  -- -------- -------- -------- -- --------

where @xmath is a product state, and @xmath denotes the state of the
@xmath th party with @xmath -component of the spin equal to @xmath
(defining the relevant computational basis for the @xmath th subsystem).

However, for other physically natural choices of observable sets a
different notion of QE is obtained. In this way, one can go beyond the
usual (distinguishable) subsystem partition. For this reason, I will
focus later on the study of the @xmath -purity as a measure of
entanglement for fermionic systems. This is a good starting point to
understand how such a measure can be applied to quantum systems obeying
different particle statistics and/or described by different operator
languages.

#### 3.3.1 Two-Spin Systems

The simplest system to study a measure of entanglement is composed of
two spins. For simplicity, I begin by studying the GE of a two-qubit
system (two-spin-1/2, @xmath and @xmath ), where the most general pure
quantum state can be written as @xmath , with the complex numbers @xmath
, @xmath , @xmath , and @xmath satisfying @xmath . For a spin-1/2 system
the associations @xmath and @xmath are commonly considered. The
traditional measures of pure state entanglement in this case are well
understood (Sec. 3.1 ), indicating that the Bell states @xmath [ EPR35 ]
(and their local spin rotations such as the state of Eq. 3.1 ) are
maximally entangled with respect to the local Hilbert space
decomposition @xmath . On the other hand, calculating the purity
relative to the (irreducible) Lie algebra of all local observables
@xmath classifies the pure two-qubit states in the same way as the
traditional measures (Fig. 3.2 ). Here, the operators @xmath and @xmath
are the Pauli operators acting on qubits @xmath and @xmath ,
respectively. In this case, Eq. 3.32 simply gives

  -- -------- -- --------
     @xmath      (3.47)
  -- -------- -- --------

where Bell’s states are maximally entangled ( @xmath ) and product
states of the form @xmath (GCSs of the algebra @xmath ) are generalized
unentangled, with maximum purity. Therefore, the normalization factor
@xmath may be obtained by setting @xmath in such a product state. As
explained in Sec. 3.2.2 , @xmath is invariant under group operations,
i.e., local rotations in this case. Since all GCSs of @xmath belong to
the same orbit generated by the application of group operations to a
particular product state (a reference state like @xmath ), they all
consistently have maximum @xmath -purity ( @xmath ).

Another important insight may be gained by calculating the purity
relative to the algebra of all observables, @xmath in the case of
two-qubit system. One finds that any two-qubit pure state @xmath
(including the Bell’s states of Eq. 3.1 ) is generalized unentangled (
@xmath ; See Fig. 3.2 ). This property is a manifestation of the
relative nature of GE, since considering the set of all observables as
being physically accessible is equivalent to not making any preferred
subsystem decomposition. Accordingly, in this case any pure quantum
state becomes a GCS of @xmath .

In Fig. 3.2 I also show the GE for systems of two parties of spin-
@xmath relative to different algebras. It is observed that the purity
reduces again to the traditional concept of entanglement for higher spin
if it is calculated relative to the (irreducible) Lie algebra of all
local observables @xmath . For example, when interested in
distinguishing product states from entangled states in a two-spin-1
system, the purity relative to the (irreducible) algebra @xmath , needs
to be calculated. Here, the @xmath Hermitian and traceless matrices
@xmath are the well known Gell-Mann matrices [ Geo99 ] :

  -- -------- --
     @xmath
  -- -------- --

which satisfy @xmath . In this basis, the spin-1 states are represented
by the 3-dimensional vectors

  -- -------- -- --------
     @xmath      (3.48)
  -- -------- -- --------

Then, the relative purity for a generic pure state @xmath becomes

  -- -------- -- --------
     @xmath      (3.49)
  -- -------- -- --------

where @xmath denotes the expectation value of @xmath in the state @xmath
. In this way, product states like @xmath are generalized unentangled (
@xmath ) and states like @xmath (and states connected through local spin
unitary operations), are maximally entangled in this algebra ( @xmath ).

Different results are obtained if the purity is calculated relative to a
subalgebra of local observables . For example, the two-spin-1 product
state @xmath , where both spins have zero projection along @xmath ,
becomes generalized entangled relative to the (irreducible) algebra
@xmath of local spin rotations, which is generated by @xmath , the
spin-1 angular momentum operators @xmath for each spin being given by

  -- -------- -- --------
     @xmath      (3.50)
  -- -------- -- --------

Notice that access to local angular momentum observables suffices to
operationally characterize the system as describable in terms of two
spin-1 particles (by imagining, for instance, the performance of a
Stern-Gerlach-type of experiment on each particle). Thus, even when a
subsystem decomposition can be naturally identified from the beginning
in this case, states which are manifestly separable (unentangled) in the
standard sense may exhibit GE (see also Appendix D ). On the other hand,
this is physically quite natural in the example, since there are no
SU(2) @xmath SU(2) group operations (local rotations from exponentiating
@xmath ) that are able to transform the state @xmath into the
unentangled product state @xmath . In fact, @xmath is maximally
entangled with respect to @xmath (i.e., @xmath ).

The examples described in this section together with other examples of
states of bipartite quantum systems are shown in Fig. 3.2 . It is clear
that calculating the purity relative to different algebras gives
information about different types of quantum correlations present in the
system.

#### 3.3.2 @xmath-Spin Systems

The @xmath -purity distinguishes pure product states from entangled ones
if it is calculated relative to the (irreducible) algebra of local
observables @xmath (see Appendix D ) because of the group invariance of
the relative purity (Eq. 3.34 ), which, in this case, constitutes all
local rotations. Here @xmath denotes every subsystem (spin) of the total
system. For example, in the previous section I denoted the subsystem 1
to be @xmath (or Alice) and the subsystem 2 to be @xmath (or Bob).
Therefore, product states are GCSs and generalized unentangled relative
to the set @xmath of all local observables.

For example, the usual concept of QE in an @xmath -qubit quantum state
can be recovered if the purity is calculated relative to the local
algebra @xmath , where the Pauli operators @xmath ( @xmath ) were
introduced in Sec. 2.1.1 . The local purity is then

  -- -------- -- --------
     @xmath      (3.51)
  -- -------- -- --------

where the normalization factor @xmath was obtained by setting @xmath in
any product state of the form @xmath (i.e., a GCS of this algebra). With
this definition, states like @xmath , @xmath (with obvious notations),
and the well known cluster states @xmath introduced in Ref. [ BR01 ] ,
are maximally entangled ( @xmath ). Also, Eq. 3.51 can be shown to be
equivalent to the measure of QE introduced by Meyer and Wallach in Ref.
[ MW02 ] .

In Fig. 3.3 , I present some examples of the purity relative to the
local algebra @xmath for a @xmath -spin- @xmath system. I also show the
purity relative to the algebra of all observables @xmath , where any
pure quantum state is a GCS, thus generalized unentangled ( @xmath ).

#### 3.3.3 Fermionic Systems

The case of fermionic systems is important because it shows how the
concept of GE can be widely used. The system considered here consists of
@xmath (spinless) fermionic modes @xmath , where each mode is described
in terms of canonical creation and annihilation operators @xmath ,
@xmath , respectively, satisfying the anti-commutation rules of Eqs.
2.34 . For instance, different modes could be associated with different
sites in a lattice, or to delocalized momentum modes related to the
spatial modes through a Fourier transform (i.e., wave vectors). In
general, for any @xmath unitary matrix @xmath , any transformation
@xmath maps the original modes into another possible set of fermionic
modes (Bogolubov transformation [ BR86 ] ).

The commutation relations of quadratic fermionic operators can be
obtained using Eqs. 2.34 , finding that

  -- -------- -- --------
     @xmath      (3.52)
  -- -------- -- --------

Thus, the set of bilinear fermionic operators @xmath provides a
realization of the Lie algebra @xmath ² ² 2 A basis for the matrix Lie
algebra @xmath is given by all real @xmath matrices. in the @xmath
-dimensional Fock space @xmath of the system. The latter is constructed
as the direct sum of subspaces @xmath corresponding to a fixed fermion
number @xmath , with dim( @xmath . Here, it is more convenient to
express @xmath as the linear span of a Hermitian, orthonormal operator
basis, which can be chosen as

  -- -------- -- --------
     @xmath      (3.53)
  -- -------- -- --------

(the large left curly bracket means “is the span of”). The action of
@xmath on @xmath is reducible, because any operator in @xmath conserves
the total number of fermions @xmath . It turns out that the irrep
decomposition of @xmath is identical to the direct sum into
fixed-particle-number subspaces @xmath , each irrep thus appearing with
multiplicity one.

Using Eq. 3.32 , the @xmath -purity of a generic pure many-fermion state
relative to @xmath is

  -- -------- -- --------
     @xmath      (3.54)
  -- -------- -- --------

For reasons that will become clear shortly, the normalization factor was
chosen to be @xmath . In this case, the fermionic product states (Slater
determinants) of the form

  -- -------- -- --------
     @xmath      (3.55)
  -- -------- -- --------

with @xmath denoting the reference state with no fermions and @xmath
labeling a particular set of modes, are the GCSs of the @xmath algebra [
Gil74 , Per85 ] .

Because a Slater determinant carries a well defined number of particles,
each GCS belongs to an irrep space @xmath for some @xmath ; states with
different @xmath belonging to different orbits under @xmath . A fixed
GCS has maximum @xmath -purity when compared to any other state within
the same irrep space. Remarkably, it also turns out that any GCS of
@xmath gives rise to a reduced state which is extremal (thus generalized
unentangled) regardless of @xmath ; the @xmath -purity assuming the same
(maximum) value in each irrep. Using this property, the normalization
factor @xmath was calculated by setting @xmath in an arbitrary Slater
determinant. Thus, the purity relative to the @xmath algebra is a good
measure of entanglement in fermionic systems, in the sense that @xmath
in any fermionic product state, and @xmath for any other state,
irrespective of whether the latter has a well defined number of fermions
or not.

Due to the invariance of @xmath under group transformations (Eq. 3.34 ),
the property of a state being generalized unentangled is independent of
the specific set of modes that is chosen. That is, if @xmath is
generalized unentangled with respect to @xmath , so is the state @xmath
, with @xmath . Therefore, the @xmath -purity is a measure of
entanglement that goes beyond a particular subsystem decomposition in
this case and only distinguishes fermionic product states from those
which are not.

For example, if the system has only @xmath sites (modes), then a
fermionic state like @xmath is maximally entangled relative to the
algebra @xmath (that is, @xmath ) because there is no basis where it can
be written as a fermionic product state. However, the state @xmath is
unentangled with respect to @xmath (i.e., @xmath ) because it can also
be written in a certain basis as the fermionic product state @xmath ,
with @xmath .

### 3.4 Summary

In this Chapter I have introduced a generalization of entanglement which
provides a unifying framework for defining entanglement in an arbitrary
physical setting. For this purpose, I first presented the usual notion
of entanglement which referres to a particular subsystem decomposition
of the total system. The usual concept can be naturally extended to a
more general case by means of generalized entanglement. The latter is
regarded as an observer-dependent property of quantum states, being
definable relative to any physically relevant set of observables for the
system under study.

In particular, I implemented some steps for the purpose of associating
the theory of entanglement with the theory of generalized coherent
states in the Lie algebraic setting. I have shown that whenever the
preferred set of observables constitutes a Lie algebra acting
irreducibly on the Hilbert space associated with the system under study,
GCSs are unentangled relative to such a set, and possess minimal
uncertainty. Such properties are also obtained in the usual framework
with respect to local observables. That is, the usual notion of QE is
recovered from GE when choosing the algebra of all local observables,
corresponding to a particular subsystem decomposition.

Finally, some useful examples were presented to realize the dynamics of
this innovative approach.

## Chapter 4 Generalized Entanglement as a Resource in Quantum
Information

Because of the interesting non-classical features of entanglement,
physicists have been studying this quantum mechanical property almost
since the early years of quantum mechanics [ Sch35 , EPR35 ] .
Entanglement is considered nowadays to be a fundamental resource in
quantum information processing, where it can be exploited to perform
certain tasks like quantum cryptography, quantum teleportation, quantum
simulations, etc., which are difficult or impossible in a classical
setting. Nonetheless, it is not yet fully understood how or when QE can
be used to perform more efficient computation. In Chap. 2 , for example,
I have shown that certain properties related with the simulation of
physical systems, can be obtained more efficiently using a QC than a CC.
As I will explain later, this is valid only if entangled states are
involved in the simulation. However, if no entanglement is created at
any step of a deterministic QA (i.e., preparation of a pure initial
state, evolution, and measurement), the quantum state carried over the
whole process remains a product state (unentangled) and such simulation
can be performed on a CC using the same amount of resources.

On the other hand, it is also known that the creation of entanglement is
not a sufficient condition to claim that there is no classical algorithm
able to perform the simulation efficiently [ GK , Vid03 ] . In fact,
certain QSs which involve entangled states can be imitated on a CC with
the same efficiency. So, which problems can be solved more efficiently
using a QC? The answer to this question is not yet known: The lack of a
general theory of QE that can be applied to any system and any pure or
mixed quantum state is the principal reason behind the difficulty of
understanding and comparing quantum with classical complexity in a
general case.

In Chap. 3 , I introduced the notion of GE which constitutes a main step
towards the developing of a general theory of QE. In the following
sections I will show how this novel concept leads to a better
understanding about when QE can be used as a resource for more efficient
computation. In particular, I will show that the creation of generalized
entangled states relative to every small dimensional Lie algebra is a
necessary condition for a QA to be more efficient than the corresponding
(known) classical one. This result goes beyond the idea of creating
entangled states in the traditional way to gain efficiency.

This chapter is organized as follows: First, I present how QE can be
exploited to perform interesting protocols in quantum information
processing. Second, I focus on the study of the relation between the
concept of GE with classical and quantum complexity, showing that a wide
class of problems in quantum mechanics can be easily solved with a CC.
The problem of efficient state preparation is also considered.

### 4.1 Quantum Entanglement and Quantum Information

Here I present some examples of how the usual notion of QE can be
exploited to perform interesting tasks in quantum information. These
tasks involve the well known processes of quantum cryptography and
quantum teleportation. For simplicity, the setting used here usually
involves two qubits (or many copies of it), @xmath and @xmath for Alice
and Bob, which are initially prepared in some maximally entangled Bell
state.

#### 4.1.1 Quantum Cryptography

Quantum cryptography [ BB84 ] is the process that allows Alice and Bob
to share a secret conversation through the encryption of their messages.
Such an idea has been widely used in classical protocols. In a classical
framework, the secret conversation between Alice and Bob is done by
sending and receiving arrays of @xmath s and @xmath s. The encryption
and decryption of these arrays are done by using a key which is assumed
to be known only by them. This key is a random string of @xmath s and
@xmath s and its length is usually the same that the length of the
message to be sent. For example, assume that Alice wants to send Bob the
binary number @xmath . Then Alice creates a random key, such as the
array @xmath , and sends to Bob the encrypted message @xmath (i.e., sum
of binary numbers). Bob then receives the encrypted message and by using
the key it proceeds to its decryption by adding them: @xmath ,
corresponding to the original message. This cryptography method is
trivially extended to longer messages.

The type of encryption described is more secure if the key used is
changed in every sent message. Otherwise, a potential eavesdropper
@xmath (for Eve) could easily gain information about the key and
therefore ‘hear’ the conversation between @xmath and @xmath .
Nevertheless, more secure efficient methods exist in a quantum setting
by using entangled states. The reason is simple: If Eve tries to figure
out the key, which is now an entangled state, she needs to perform a
measurement, and therefore destroys the entangled state by projecting it
into some other unentangled one.

In more detail, the scheme for quantum cryptography consists in a source
that creates maximally entangled two-qubit Bell states @xmath (e.g.,
entangling photon polarizations, etc.), where one qubit is given to
Alice and the other is given to Bob (Fig. 4.1 ). In addition, each party
can measure the state of the corresponding qubit in a different basis,
if they want, from the logical one. (As mentioned in Chap. 3 , such
freedom is necessary to take advantage of the quantum correlations.) The
source then emits many copies of the Bell state and the parties measure
their corresponding qubits several times and different orientations.
After the measurements are performed, Alice and Bob have a classical
conversation where they tell each other about the chosen orientations
but they never talk about the results of the measurements. Because of
the nature of the Bell state, whenever they choose the same orientation,
the results of the corresponding measurements are the same. For example,
if Alice measures @xmath in the logical basis and Bob measures in the
same basis, Alice knows that Bob measured the qubit state @xmath . In
this way, they only keep the results obtained whenever the measurement
is performed in the same orientation. Such results constitute the key,
which was never discussed between them, for the encryption and
decryption of the message.

Although the scheme presented seems simple and successful, an
eavesdropper could still hear the conversation by, for example, stealing
entangled qubits used to build up the key. Many different cryptography
protocols have been designed for different situations and can be found
in the literature. Here I only discussed the basics of quantum
cryptography to show that entangled states play an important role in
information processes.

#### 4.1.2 Quantum Teleportation

Quantum teleportation [ BBC93 ] consists of the process of teleporting
the state of a distant quantum system by means of local quantum
operations, including measurements, and classical communication (LOCC).
The simplest case considers the teleportation of the state of a single
qubit. For this purpose assume that Alice possesses two qubits denoted
by @xmath and @xmath , and Bob possesses only one, denoted by @xmath .
Moreover, assume that qubits @xmath and @xmath are in a maximally
entangled state which was given by an external source. Such an entangled
state can then be used to teleport the state of qubit @xmath to qubit
@xmath .

The idea is the following: The global three-qubit state of Alice and Bob
together is given by @xmath . This state can also be written as

  -- -------- -- -------
     @xmath      (4.1)
     @xmath
  -- -------- -- -------

where Alice’s states @xmath and @xmath are the Bell states

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (4.2)
     @xmath   @xmath   @xmath
  -- -------- -------- -------- -- -------

respectively. Remarkably, in this basis (Eq. 4.2 ) the state of Bob’s
qubit looks very similar to the state to be teleported (i.e., the state
of @xmath ). Then, Alice performs a measurement in her two qubits
projecting them into one of the four possible Bell states. (Such a
measurement can be done using local operations only but I do not
describe it here.).

The state obtained by Alice corresponds to one of the four possibilities
shown in Eq. 4.2 . Alice then contacts Bob and tells him about the
result of the measurement, after which Bob acts on its qubit to recover
the state of @xmath . For example, if Alice projects its two-qubit state
into @xmath , then she tells this result (by means of a classical
communication) to Bob. He thereby transforms the state of his qubit by
using a flip operation transforming

  -- -------- -- -------
     @xmath      (4.3)
  -- -------- -- -------

which is the desired teleported state. Similar operations can be done
for any other state measured by Alice.

### 4.2 Quantum Entanglement and Quantum Computation

Perhaps the most important practical case where QE can be used as a
resource is in computational tasks. As mentioned before, parallelism is
one of the properties of the quantum world that needs to be exploited in
a quantum computation, and such a property is naturally associated to
QE. Shor’s factoring algorithm [ Sho94 ] constitutes a nice example
where entangled states are used to find the prime factors of a whole
number. It has been shown that using a QC, this algorithm can be
efficiently performed; that is, with a number of steps that scales at
most polynomially with the integer @xmath to be factorized. However, it
is not known how to perform such an algorithm efficiently on a CC: In
order to find the factors of @xmath it is necessary to divide it by all
the whole numbers between 1, and @xmath , and so on, constituting a time
consuming task.

To demonstrate Shor’s algorithm, I present the factorization of the
number @xmath . (Although the solution to this problem is immediately
found, @xmath , this method can be extended to the factorization of
larger numbers like @xmath , where finding the solution is more
complicated: @xmath .) As I will show, the problem of finding the
factors of @xmath is equivalent to the order-finding problem. Thus, a
random whole number @xmath between 1 and @xmath needs to be chosen
first. Assume that this number is @xmath . Second, a QA needs to be
performed to find the order @xmath of @xmath , modulo @xmath . Such
order is defined as the least positive integer such that @xmath , where
@xmath if @xmath is divisible by @xmath .

Then, the first step of the QA consists of performing @xmath Hadamard
gates to the initial @xmath -qubit polarized state @xmath . The number
@xmath of extra qubits has to be big enough to find the order @xmath
with high accuracy [ Sho94 ] . Here, @xmath . The other 4 qubits are
necessary to encode information about the factors of @xmath (i.e.,
@xmath ).

After the Hadamard gates have been applied (i.e., the gates that
transform @xmath ), the evolved state is

  -- -------- -- -------
     @xmath      (4.4)
  -- -------- -- -------

where @xmath is the state corresponding to the binary decomposition of
the integer @xmath in the logical basis; for example, @xmath . The next
step of the algorithm is to apply a unitary operation that transforms

  -- -------- -- -------
     @xmath      (4.5)
  -- -------- -- -------

This operation can be efficiently performed using controlled operations
on the state of the @xmath qubits, but I will not explain it here. After
this evolution, the evolved state is

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath
              @xmath   @xmath
  -- -------- -------- -------- --

where again I have chosen the integer representation of the states in
the logical basis. The state of Eq. 4.2 is a highly entangled state
between the @xmath qubits and qubits @xmath , @xmath , @xmath , and
@xmath .

By defining the states @xmath for qubits @xmath , as

  -- -------- -- -------
     @xmath      (4.7)
  -- -------- -- -------

where again @xmath is the not yet known order, Eq. 4.2 can be written as

  -- -------- -- -------
     @xmath      (4.8)
  -- -------- -- -------

A (inverse) quantum Fourier transform [ NC00 ] performed to the @xmath
qubits in the above state maps it to

  -- -------- -- -------
     @xmath      (4.9)
  -- -------- -- -------

where the state @xmath of the @xmath qubits is a product state which
depends on the coefficient @xmath as in the usual Fourier transform.
This transformation can also be efficiently implemented in a quantum
circuit. Therefore, the transformed state reads

  -- -------- -- --------
     @xmath      (4.10)
  -- -------- -- --------

In this way, the register of @xmath qubits is measured in the logical
basis to project the state @xmath and obtain one possible state @xmath .
After applying the same algorithm several times and by applying a
continued-fractions algorithm, it is possible to obtain the order @xmath
from the statistics of the measured states @xmath . In this case one
would obtain @xmath , such that @xmath . Such a solution could be
obtained if the result of the measurement in the register of @xmath
qubits gives, for example, @xmath (in the binary representation), where
I have used again the integer representation of states in the logical
basis. If this is the case, @xmath , resulting in @xmath . From this
information, one can obtain that @xmath as it is explained in Ref. [
Sho94 ] .

A factoring QA such as the one presented is more efficient than a
classical one only because entangled states have been created at some
step. Otherwise, no advantages can be gained, in general, from using a
deterministic QC. As a simple example, suppose (with no loss of
generality) that the initial pure state of a register of @xmath qubits
is the usual polarized state @xmath , and that the QA never does create
QE. That is, the set of unitary gates @xmath applied to the initial
state are only single qubit rotations transforming product states into
product states. Therefore,

  -- -------- -- --------
     @xmath      (4.11)
  -- -------- -- --------

where @xmath denotes the qubit rotated at the @xmath th step, and @xmath
is the axis of rotation. The evolved state is then

  -- -------- -- --------
     @xmath      (4.12)
  -- -------- -- --------

After the evolution is performed, certain qubit(s) is(are) measured in,
for example, the logical basis. As usual, this is the last step of a
deterministic QA (Sec. 2.2 ). If the @xmath th qubit is measured, the
result obtained is

  -- -------- -- --------
     @xmath      (4.13)
  -- -------- -- --------

The fact is that such QA can be simulated classically and the
expectation value of Eq. 4.13 can be computed in a CC with the same
amount of resources (i.e., same efficiency). The idea is to only keep
track of the information about @xmath if @xmath , because the other
qubits are not measured. If the QA is performed efficiently, only a
polynomially large number of pairs @xmath are kept. A classical
algorithm to obtain the result of Eq. 4.13 would consist of updating at
each step the state of the @xmath th qubit only. For example, if at the
@xmath th step the state is @xmath and the gate @xmath is performed
after, the evolved state becomes

  -- -------- -- --------
     @xmath      (4.14)
  -- -------- -- --------

and since @xmath is the corresponding flip operation, @xmath and @xmath
. Updating the values of the complex coefficients @xmath and @xmath can
be easily done with a conventional computer. At the end of the total
evolution the state of the @xmath th qubit is @xmath . Therefore, the
result of Eq. 4.13 is

  -- -------- -- --------
     @xmath      (4.15)
  -- -------- -- --------

which can be efficiently computed with a CC.

However, if some of the gates @xmath create entanglement, there is no
known way, in general, to classically evaluate Eq. 4.13 efficiently.
Naturally, the elementary two-qubit gates, like the @xmath or the CNOT
gate introduced in Sec. 2.1.3 , are responsible for creating
entanglement. For example, if the initial state is the product
(unentangled) state @xmath , applying the CNOT gate evolves it into
@xmath , which is known to be one of the Bell states, that is, maximally
entangled. Nonetheless, I will show in the next section that creation of
QE is not a sufficient condition to claim that Eq. 4.13 cannot be
obtained efficiently by using a classical algorithm.

### 4.3 Efficient Classical Simulations of Quantum Physics

The purpose of this section is to generalize the concepts described
previously, presenting a wide set of problems which can be solved
efficiently with both, a QC or a classical one. To show this, I will
exploit the notion of GE, which was presented in Sec. 3.2 . Again, an
algorithm is said to be efficient with respect to a certain variable
@xmath , whenever the amount of resources required to perform it is
bounded by a polynomial in @xmath . Otherwise, the algorithm is said to
be inefficient. It is important to remark that here I only make a
comparison between efficient and inefficient algorithms, with the
previous definition, and do not compare the total amount of resources
needed. For example, if a QA can be performed in @xmath operations and
the corresponding classical one in @xmath operations then, despite being
more convenient to use the former, both are considered efficient.

In most cases, the type of problems one encounters in quantum mechanics
are related with the evaluation of a certain expectation value or
correlation function

  -- -------- -- --------
     @xmath      (4.16)
  -- -------- -- --------

where @xmath is an operator acting on a finite quantum system @xmath in
some state @xmath . ( @xmath is the Hilbert space associated to @xmath
.) In Sec. 2.2 , I presented some QAs that allow one to compute Eq. 4.16
in a QC described by the conventional model, whenever the operator
algebra associated to the system @xmath could be mapped onto the Pauli
operators (Sec. 2.3 ). The main steps of those QAs consist of the
preparation of the state @xmath , from some initial (boot-up) reference
state like @xmath , then an evolution, and finally the measurement of
the ancilla qubit @xmath . Similarly, in the rest of this section I
assume that the algebra of operators used to describe the quantum
computational model and/or the algebra associated to the system @xmath
are not necessarily described by the conventional model, but a
one-to-one efficient mapping between both exists.

Since I am mainly interested in comparing the efficiencies of obtaining
Eq. 4.16 using a QC or a classical (conventional) one, the efficiency is
defined relative to a certain variable @xmath which here is, in general,
the number of quantum mechanical elements that compose the system @xmath
. I assume that there exists a QA that evaluates Eq. 4.16 efficiently,
that is, using at most @xmath resources. These are the so-called bounded
polynomial quantum algorithms (BPQA). This is usually valid whenever the
QC can be efficiently initialized and every step, including the
preparation of @xmath , can be efficiently performed. These results were
previously discussed in Sec. 2.5 .

The most common classical algorithm to evaluate Eq. 4.16 consists of
writing the matrix representation of @xmath , and obtaining the
corresponding matrix element. This is usually a hard task because of the
dimension of the Hilbert space @xmath growing exponentially with @xmath
. However, in some cases this complexity can be highly reduced. The
simplest case is when the state @xmath of Eq. 4.16 is known to be an
eigenstate of @xmath , so that the corresponding expectation is simply
the known eigenvalue.

Nonetheless, a more general result can be obtained in a Lie algebraic
framework. For this purpose, I start by pointing out that, with no loss
of generality, the state @xmath of Eq. 4.16 can be obtained by
transforming any reference state @xmath ; that is

  -- -------- -- --------
     @xmath      (4.17)
  -- -------- -- --------

where @xmath (unitary). Moreover, the reference state can be chosen to
be the highest (or lowest) weight state @xmath of certain finite
semi-simple Lie algebra @xmath , with @xmath (Sec. 3.2.2 ). In this
case, @xmath also admits a Cartan-Weyl decomposition: @xmath , with
@xmath the Cartan subalgebra (CSA) of @xmath , and @xmath and @xmath the
set of raising and lowering operators, respectively (Sec. 3.2.2 ).

Now suppose that the transformation @xmath of Eq. 4.17 is a group
operation induced by @xmath ; that is

  -- -------- -- --------
     @xmath      (4.18)
  -- -------- -- --------

Then @xmath is a GCS and generalized unentangled state (extremal) of
@xmath . Moreover, suppose that @xmath of Eq. 4.16 can be decomposed as

  -- -------- -- --------
     @xmath      (4.19)
  -- -------- -- --------

where @xmath , and @xmath . In general, @xmath does not have the form of
Eq. 4.19 and it belongs to a Lie algebra other than @xmath . Then,
@xmath must be considered as the Lie algebra that contains both. (The
important case when @xmath , i.e. the group induced by @xmath , is
discussed in the next section.)

In this way, computing classically Eq. 4.16 is equivalent to evaluating

  -- -------- -- --------
     @xmath      (4.20)
  -- -------- -- --------

The operators

  -- -------- -- --------
     @xmath      (4.21)
  -- -------- -- --------

are also elements in @xmath because they are transformed by a group
operation. The coefficients @xmath of Eq. 4.21 can be computed by means
of the representation theory. A matrix representation of @xmath is the
mapping @xmath such that

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (4.22)
     @xmath   @xmath   @xmath
  -- -------- -------- -------- -- --------

where @xmath is the commutator and the complex matrices @xmath are
@xmath dimensional. A representation @xmath is said to be faithful when
maps linearly independent elements in @xmath to linearly independent
@xmath matrices. If the Lie algebra @xmath is compact, one can always
find a faithful representation satisfying the inner product

  -- -------- -- --------
     @xmath      (4.23)
  -- -------- -- --------

with @xmath being the trace of @xmath . For example, the well known
adjoint representation (Appendix C ), which associates an @xmath matrix
to every operator in @xmath ( @xmath is the dimension of @xmath ), is
faithful and satisfies Eq. 4.23 . Nevertheless, smaller dimensional
faithful representations ( @xmath ) can usually be found. Then, if
@xmath is faithful,

  -- -------- -- --------
     @xmath      (4.24)
  -- -------- -- --------

which is the matrix representation of Eq. 4.21 . Since this is a matrix
operation, the matrices @xmath of Eq. 4.24 can be classically computed
with @xmath computational operations ¹ ¹ 1 Here @xmath denotes the order
of required operations. (addition and multiplication of complex
numbers). Each coefficient @xmath is then classically obtained by using
the inner product equation, that is

  -- -------- -- --------
     @xmath      (4.25)
  -- -------- -- --------

which also requires @xmath computational operations ² ² 2 To obtain
@xmath at accuracy @xmath the order of @xmath operations are needed.
Nevertheless, in this section I consider that the calculation is done at
the computational accuracy given by the particular type of CC used. .

Similarly, in the CW basis,

  -- -------- -- --------
     @xmath      (4.26)
  -- -------- -- --------

where @xmath (CSA), @xmath , and @xmath (Sec. 3.2.2 ). The coefficients
@xmath and @xmath of Eq. 4.26 can also be obtained classically with
@xmath computational operations by the trace inner product: The
operators @xmath , @xmath , and @xmath are usually a simple linear
combinations of the operators @xmath .

By definition, @xmath is an eigenstate of the operators in the CSA, that
is

  -- -------- -- --------
     @xmath      (4.27)
  -- -------- -- --------

where the eigenvalues @xmath are assumed to be known. Then,

  -- -------- -- --------
     @xmath      (4.28)
  -- -------- -- --------

In other words, Eq. 4.20 can be classically computed by only keeping the
elements of @xmath (Eq. 4.21 ) belonging to @xmath :

  -- -------- -- --------
     @xmath      (4.29)
  -- -------- -- --------

and

  -- -------- -- --------
     @xmath      (4.30)
  -- -------- -- --------

Since the coefficients @xmath are assumed to be known, and the
coefficients @xmath and @xmath can be classically obtained with @xmath ,
Eq. 4.30 can be computed with @xmath computational operations. If @xmath
, then @xmath . Also, the existence of the adjoint representation
(Appendix C ) guarantees that one can always find @xmath such that
@xmath . Therefore, Eq. 4.30 can be efficiently computed with a
conventional computer. A more detailed proof about the number of
operations required, including the approximation of the exponential
matrix, is given in the Appendix E .

In brief, when the state @xmath of Eq. 4.16 is a GCS of a polynomially
large dimensional Lie algebra @xmath , and the operator @xmath is an
element of @xmath , Eq. 4.16 can be efficiently computed with both, a
classical and a quantum device.

However, in some cases @xmath or @xmath (Eq. 4.17 ) are associated with
an exponentially large dimensional Lie algebra and the corresponding
classical simulation is inefficient. Nevertheless, it is important to
remark that for mixed states of the form

  -- -------- -- --------
     @xmath      (4.31)
  -- -------- -- --------

where @xmath , and @xmath being GCSs and generalized unentangled states
of a polynomially large dimensional Lie algebra, the computation of

  -- -------- -- --------
     @xmath      (4.32)
  -- -------- -- --------

can also be efficiently performed with a CC if @xmath .

#### 4.3.1 Higher Order Correlations

The previous results can be extended to the computation of higher order
correlations. For simplicity, I start by studying the case of two-body
correlations of the form

  -- -------- -- --------
     @xmath      (4.33)
  -- -------- -- --------

where @xmath is the product of the observables @xmath and @xmath .
Again, @xmath and @xmath are considered to be elements of a Lie algebra
@xmath , and @xmath is assumed to be a GCS of @xmath ; that is

  -- -------- -- --------
     @xmath      (4.34)
  -- -------- -- --------

with @xmath , and @xmath the highest weight state of @xmath . In this
way, Eq. 4.33 reads

  -- -------- -- --------
     @xmath      (4.35)
  -- -------- -- --------

Since @xmath ,

  -- -------- -- --------
     @xmath      (4.36)
  -- -------- -- --------

where @xmath .

Equation 4.33 can be efficiently computed with a classical computer if
the dimension @xmath of @xmath scales at most polynomially with the
variable @xmath ; i.e. @xmath . To show this, I first decompose the
corresponding operators as

  -- -------- -- --------
     @xmath      (4.37)
     @xmath      (4.38)
  -- -------- -- --------

which transform under the action of @xmath as

  -- -------- -- --------
     @xmath      (4.39)
  -- -------- -- --------

In a CW basis of @xmath , the transformed observables @xmath can be
decomposed as in Eq. 4.26 . Such decomposition can be done efficiently
with a CC (i.e., computing the coefficients @xmath and @xmath ) by
working in low-dimensional faithful representation of @xmath (Appendix C
). Then,

  -- -------- -- --------
     @xmath      (4.40)
  -- -------- -- --------

with

  -- -------- -------- -------- -- --------
     @xmath   @xmath               (4.41)
                       @xmath
                       @xmath
  -- -------- -------- -------- -- --------

where C.C. denotes the complex conjugate, and the expectation values are
now taken over the highest weight state, i.e. @xmath . Since raising
operators annihilate @xmath only a few expectations do not vanish in Eq.
4.41 . These are

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (4.42)
     @xmath   @xmath   @xmath      (4.43)
  -- -------- -------- -------- -- --------

where the coefficients @xmath are the components of the root vector
@xmath (Sec. 3.2.2 ) and @xmath are the known weights of @xmath .

In brief, Eq. 4.33 takes the form

  -- -------- -- --------
     @xmath      (4.44)
  -- -------- -- --------

which can be efficiently computed with a CC if @xmath .

Higher order correlation functions of the form

  -- -------- -- --------
     @xmath      (4.45)
  -- -------- -- --------

can also be computed efficiently for a fixed integer @xmath , whenever
there is a polynomially large dimensional Lie algebra @xmath associated
to the problem. Obviously, the complexity of this problem increases as
@xmath does. Again, the idea is to keep only the nonzero expectations of
the transformed operator @xmath , where @xmath . For this purpose, all
the raising operators @xmath appearing in @xmath must be taken to the
right side, by using the commutation relations of the algebra, so that
they destroy the state @xmath . This problem is analogous to the one
given by Wick’s theorem [ Wic50 ] for fermionic operators. In Appendix F
, I describe an efficient method for the classical computation of Eq.
4.45 .

### 4.4 Generalized Entanglement and Quantum Computation

In Sec. 4.3 I presented a class of classical algorithms that allows one
to efficiently obtain certain correlation functions of quantum systems
in a conventional computer. Here, I analyze some advantages of having a
QC. For example, assume then that one is interested in the evaluation of
the correlation function of Eq. 4.16 , when there is no polynomially
large dimensional Lie algebra @xmath associated with the problem. That
is, either @xmath is not a GCS of @xmath or @xmath is not an element or
group element induced by @xmath . Then, if a bounded polynomial quantum
algorithm (BPQA) like the ones introduced in Sec. 2.2 exists in this
case, Eq. 4.16 can be efficiently computed using a QC. Usually, no known
classical algorithm can be used to compute such a correlation
efficiently and this represents, in some cases, an exponential speed-up
of the quantum simulation with respect to the classical one.

In Sec. 2.5 , I discussed the complexity of simulating physical systems
using QCs. Although certain QSs have been shown to be efficient, others,
like the obtention of the ground state properties in the two-dimensional
Hubbard model, remained inefficient. The problem relied in the
complexity of preparing the desired initial state @xmath . When
simulating quantum systems, this state is usually not completely known
(e.g., it is the ground state of some non-solvable Hamiltonian) and an
approximated state, having a non-zero overlap with @xmath , needs to be
prepared. The purpose of the following section is then to show a wide
class of quantum states that can be prepared efficiently by quantum
networks. Again, the results obtained are independent of the physical
representation of the QC whenever an efficient mapping between the
operators used to describe the system to be simulated and the operators
describing the computational model, exists.

#### 4.4.1 Efficient Initial State Preparation

I start by describing the simple case when the initial state to be
prepared is given by

  -- -------- -- --------
     @xmath      (4.46)
  -- -------- -- --------

where @xmath is the highest weight of some Lie algebra @xmath , and is
considered to be the boot-up state of the computer, which can be
efficiently initialized. If the operator @xmath of Eq. 4.46 is a group
operation induced by @xmath , that is, @xmath and @xmath , and @xmath ,
then @xmath can be prepared efficiently with arbitrary accuracy by
using, for example, a first order Trotter decomposition [ Suz93 ] . In
this case, the state @xmath is generalized unentangled and GCS of @xmath
. Then, @xmath and

  -- -------- -- --------
     @xmath      (4.47)
     @xmath      (4.48)
  -- -------- -- --------

Assuming that every operation @xmath is either an elementary gate or can
be performed by applying a small number of them, the evolution @xmath
can be then approximated by applying a polynomially large number of
these gates. Particular examples were discussed in Sec. 2.3 .

Another interesting case is when the state @xmath is not given in the
form of Eq. 4.46 but some information, like the expectation values of a
set of observables (i.e., its reduced state), @xmath , is known or can
be easily obtained. If @xmath is a semi-simple Lie algebra, with @xmath
, and @xmath is shown to be a GCS of @xmath by calculating, for example,
the @xmath -purity (Sec. 3.2.2 ), then it can be prepared efficiently
with a QC. To show this, one needs to obtain first the operator @xmath
such that @xmath is the transformation of Eq. 4.46 .

For this purpose, I define the fictitious Hamiltonian

  -- -------- -- --------
     @xmath      (4.49)
  -- -------- -- --------

whose expectation value over the state @xmath is

  -- -------- -- --------
     @xmath      (4.50)
  -- -------- -- --------

If @xmath is another GCS of @xmath , with @xmath a unitary group
operation that transforms as

  -- -------- -- --------
     @xmath      (4.51)
  -- -------- -- --------

then

  -- -------- -- --------
     @xmath      (4.52)
  -- -------- -- --------

Since the @xmath matrix defined by the real coefficients @xmath is
orthogonal, one obtains (Schur’s inequality)

  -- -------- -- --------
     @xmath      (4.53)
  -- -------- -- --------

Therefore, @xmath is the unique GCS and ground state that minimizes such
expectation value.

Assume now that @xmath can be efficiently diagonalized with a
conventional computer, obtaining

  -- -------- -- --------
     @xmath      (4.54)
  -- -------- -- --------

where @xmath is a unitary group operation and

  -- -------- -- --------
     @xmath      (4.55)
  -- -------- -- --------

is an unperturbed Hamiltonian (i.e., @xmath are elements in the CSA of
@xmath ). Such a diagonalization algorithm is described in Sec. 5.2.1 .
Defining @xmath , one obtains

  -- -------- -- --------
     @xmath      (4.56)
  -- -------- -- --------

which takes its minimum value, by definition, for a certain weight state
@xmath . In particular, the coefficients @xmath of Eq. 4.55 can be
chosen such that @xmath (see Chap. 5 ). Therefore, @xmath , and @xmath
is the desired group operation. Again, @xmath can be approximated by
applying a polynomially large number of elementary gates so @xmath can
be prepared efficiently with a QC.

### 4.5 Summary

In this chapter I have addressed several issues relating the concept of
GE with quantum and classical complexity. I have shown that the creation
of GE relative to every polynomially large dimensional Lie algebra is a
necessary requirement to gain efficiency over the known classical
algorithms. Otherwise, efficient classical simulations exist, which
realize the computation by working in low-dimensional representations of
the algebra. This result goes beyond the requirement of creating
entangled states in the usual sense. For example, a quantum algorithm
involving gates induced by the Lie algebra @xmath , which is presented
in detail in the next chapter, creates entangled states in the standard
sense (i.e., non-separable). However, since the dimension of @xmath is
polynomially large, such quantum computation can be efficiently
simulated with a CC.

The efficient preparation of a wide class of states by quantum networks
has also been studied. Again, any GCS or generalized unentangled state
of a polynomially large dimensional Lie algebra can be efficiently
prepared on a QC.

## Chapter 5 Generalized Entanglement and Many-Body Physics

  Information is inevitably physical.
  Rolf Landauer

Every QC has associated certain physical representation (e.g., spin-1/2
system, etc.). The fact that information is not just an abstract entity
and is always linked to a physical system, implies that it must be
governed by the laws of physics. In Quantum Information Theory, for
example, the manipulation and control of information is based on the
foundations and laws of the quantum mechanics. On the other hand, many
concepts, such as QE, have been developed only from an
information-theory point of view. It is expected then that these
concepts are also useful for the analysis of physical phenomena. In this
chapter, I apply the notion of GE (Chap. 3 ) to the study of different
problems in many-body physics.

First, I will focus on the characterization of quantum phase transitions
(QPTs) in matter. QPTs are qualitative changes occurring in the
properties of the ground state of a many-body system due to
modifications either in the interactions among its constituents or in
their interactions with an external probe [ Sac99 ] , while the system
remains at zero temperature. Typically, such changes are induced as a
parameter @xmath in the system Hamiltonian @xmath is varied across a
point at which the transition is made from one quantum phase to a
different one. Often some correlation length diverges at this point, in
which case the latter is called a quantum critical point . Because
thermal fluctuations are inhibited, QPTs are purely driven by quantum
fluctuations. Thus, these are purely quantum phenomena: A classical
system in a pure state cannot exhibit quantum correlations. Prominent
examples of QPTs are the quantum paramagnet to ferromagnet transition
occurring in Ising spin systems under an external transverse magnetic
field [ LSM61 , Pfe70 , BM71 ] , the superconductor to insulator
transition in high- @xmath superconducting systems, and the superfluid
to Mott insulator transition originally predicted for liquid helium and
recently observed in ultracold atomic gases [ GME02 ] .

Since entanglement is a property inherent to quantum states and
intimately related to quantum correlations (Chap. 3 ), one would expect
that, in some appropriately defined sense, the entanglement present in
the ground state undergoes a substantial change across a point where a
QPT occurs. Thus, the concept of GE becomes specially well suited for
this study because it is directly applicable to any algebraic language
associated to the system under study.

Another important problem in quantum mechanics is to exactly diagonalize
and obtain the spectrum of a Hamiltonian of a many-body system. In this
case, no approximate methods (e.g., mean field theory) are needed and
one has complete knowledge of the physical properties of the system
through algebraic methods. By using information-theory concepts such as
the ones described for the efficient simulation of physical systems
(Sec. 4.3 ), I will show that whenever there is a Lie algebraic
structure behind a problem in quantum physics, and the dimension of the
associated Lie algebra is small enough, such problems can be solved
easily by using a CC. This constitutes the final part of my thesis after
which come the conclusions (Chap. 6 ).

### 5.1 Entanglement and Quantum Phase Transitions

In this section, I characterize the QPTs present in the
Lipkin-Meshkov-Glick (LMG) model and in the anisotropic XY model in an
external magnetic field through the GE notion, relative to a particular
subset of observables which will be appropriately chosen in each case.
Interestingly, for both of these models the ground states can be
computed exactly by mapping the set of observable operators involved in
the system Hamiltonian to a new set of operators which satisfy the same
commutation relations; thus, preserving the underlying algebraic
structure. In the new operator language, the models are seen to contain
some symmetries that make them exactly solvable, allowing one to obtain
the ground state properties in a number of operations that scales
polynomially with the system size. It is possible then to understand
which quantum correlations give rise to the QPTs in these cases.

Several issues should be considered when looking for an algebra @xmath
of observables that may make the corresponding relative purity a good
indicator of a QPT. First, one observes that in each of these cases a
preferred Lie algebra exists, where the respective ground state would
have maximum @xmath -purity independently of the interaction strengths
in the Hamiltonian. The purity relative to such an algebra remains
constant, therefore it does not identify the QPT. (In these cases, this
algebra is in fact the Lie algebra generated by the parametrized family
of model Hamiltonians, as the parameters are varied.) Thus, one needs to
extract a subalgebra relative to which the ground state may be
generalized entangled, depending on the parameters in the Hamiltonian. A
second, closely related observation is that the purity must contain
information about quantum correlations which undergo a qualitative
change as the transition point is crossed: thus, the corresponding
degree of entanglement, as measured by the purity, must depend on the
interaction strengths governing the phase transition. Finally, whenever
a degeneracy of the ground state exists or emerges in the thermodynamic
limit, a physical requirement is that the purity be the same for all
ground states.

Although these restrictions together turn out to be sufficient for
choosing the relevant algebra of observables in the following two
models, they do not provide an unambiguous answer when solving a
non-integrable model whose exact ground state solution cannot be
computed efficiently. Typically, in the latter cases the ground states
are GCSs of Lie algebras for each of which the dimension increases
exponentially with the system size. Choosing the observable subalgebra
that contains the proper information on the QPTs (such as information on
critical exponents) then becomes, in general, a difficult task.

A concept of general mean-field Hamiltonians (GMFH) emerges from these
considerations. Given a Hilbert space @xmath of dimension @xmath (with
@xmath an integer @xmath ), I define a GMFH as the Hermitian operator

  -- -------- -- -------
     @xmath      (5.1)
  -- -------- -- -------

which is an element of an irreducibly represented Lie algebra of
Hermitian operators @xmath , whose dimension scales at most polynomially
in @xmath that is, @xmath . When the ground state of @xmath is
non-degenerate, it turns out to be a GCS of @xmath [ BKO03 ] , while the
remaining eigenstates (some of which may also be GCSs) and energies can
be efficiently computed. The connection between Lie-algebraic mean-field
Hamiltonians and their efficient solvability deserves careful analysis
in its own right, and will be presented in the following section.

#### 5.1.1 Lipkin-Meshkov-Glick Model

Originally introduced in the context of nuclear physics [ LMG65 ] , the
Lipkin-Meshkov-Glick (LMG) model is widely used as a testbed for
studying critical phenomena in (pseudo) spin systems. This model was
shown to be exactly-solvable in Ref. [ OSD05 ] . In this section, I
investigate the critical properties of this model by calculating the
purity relative to a particular subset of observables, which will be
chosen by analyzing the classical behavior of the ground state of the
system. For this purpose, I first need to map the model to a single
spin, where it becomes solvable and where the standard notion of
entanglement is not immediately applicable.

The model is constructed by considering @xmath fermions distributed in
two @xmath -fold degenerate levels (termed upper and lower shells). The
latter are separated by an energy gap @xmath , which will be set here
equal to 1. The quantum number @xmath ( @xmath or @xmath ) labels the
level while the quantum number @xmath denotes the particular degenerate
state in the level (for both shells, @xmath ). In addition, I consider a
“monopole-monopole” interaction that scatters pairs of particles between
the two levels without changing @xmath . The model Hamiltonian may be
written as

  -- -------- -------- -------- --
     @xmath   @xmath   @xmath
              @xmath   @xmath
  -- -------- -------- -------- --

where @xmath , and the fermionic operators @xmath ( @xmath ) create
(annihilate) a fermion in the level identified by the quantum numbers
@xmath and satisfy the fermionic commutation relations given in Sec.
2.3.1 . Thus, the interaction @xmath scatters a pair of particles
belonging to one of the levels, and the interaction @xmath scatters a
pair of particles belonging to different levels. Note that the factor
@xmath must be present in the interaction terms for stability reasons,
as the energy per particle must be finite in the thermodynamic limit.

Upon introducing the pseudospin operators

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (5.3)
     @xmath   @xmath   @xmath      (5.4)
     @xmath   @xmath   @xmath      (5.5)
  -- -------- -------- -------- -- -------

which satisfy the @xmath commutation relations of the angular momentum
algebra,

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (5.6)
     @xmath   @xmath   @xmath      (5.7)
  -- -------- -------- -------- -- -------

the Hamiltonian of Eq. 5.1.1 may be rewritten as

  -- -------- -- -------
     @xmath      (5.8)
  -- -------- -- -------

As defined by Eq. 5.8 , @xmath is invariant under the @xmath inversion
symmetry operation @xmath that transforms @xmath , and it also commutes
with the (Casimir) total angular momentum operator @xmath . Therefore,
the non-degenerate eigenstates of @xmath are simultaneous eigenstates of
both @xmath and @xmath , and they may be obtained by diagonalizing
matrices of dimension @xmath (whereby the solubility of the model).
Notice that, by definition of @xmath as in Eq. 5.5 , the maximum
eigenvalue of @xmath and @xmath is @xmath . In particular, for a system
with @xmath fermions as assumed, both the ground state @xmath and the
first excited state @xmath belong to the largest possible angular
momentum eigenvalue @xmath [ LMG65 ] (so-called half-filling
configurations); thus, they can be computed by diagonalizing a matrix of
dimension @xmath .

The Hamiltonian of Eq. 5.8 does not exhibit a QPT for finite @xmath . It
is important to remark that some critical properties of the LMG model in
the thermodynamic limit @xmath can be understood by using a
semiclassical approach (note that the critical behavior is essentially
mean-field): first, I replace the angular momentum operators in @xmath
(with @xmath given in Eq. 5.8 ) by their classical components (Fig. 5.1
); that is

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (5.9)
     @xmath   @xmath   @xmath      (5.10)
  -- -------- -------- -------- -- --------

where @xmath is the resulting classical Hamiltonian and @xmath , @xmath
. In this way, one can show that in the thermodynamic limit (Appendix G
)

  -- -------- -- --------
     @xmath      (5.11)
  -- -------- -- --------

so the ground state energy per particle @xmath can be easily evaluated
by minimizing

  -- -------- -- --------
     @xmath      (5.12)
  -- -------- -- --------

As mentioned, the ground and first excited states have maximum angular
momentum @xmath . In Fig. 5.2 I show the orientation of the angular
momentum in the ground states of the classical Hamiltonian @xmath ,
represented by the vectors @xmath , @xmath , and @xmath , for different
values of @xmath and @xmath . When @xmath we have @xmath and the
classical angular momentum is oriented in the negative @xmath
-direction. However, when @xmath we have @xmath and the classical ground
state becomes two-fold degenerate (notice that @xmath is invariant under
the transformation @xmath ). In this region and for @xmath the angular
momentum is oriented in the XZ plane ( @xmath ) while for @xmath it is
oriented in the YZ plane ( @xmath ). The model has a gauge symmetry in
the line @xmath , @xmath , where @xmath can take any possible value.

##### First and Second Order QPTs, and Critical Behavior

For the Hamiltonian of Eq. 5.1.1 , the quantum system undergoes a second
order QPT at the critical boundary @xmath , where for @xmath the ground
and first excited states @xmath and @xmath become degenerate in the
thermodynamic limit, and the inversion symmetry @xmath breaks. The order
parameter is given by the mean number of fermions in the upper shell
@xmath , which in the thermodynamic limit converges to its classical
value,

  -- -------- -- --------
     @xmath      (5.13)
  -- -------- -- --------

Obviously, for @xmath one has @xmath , and @xmath , otherwise (Fig. 5.2
). The critical exponents of the order parameter are easily computed by
making a Taylor expansion near the critical points ( @xmath ). Defining
the quantities @xmath and @xmath , one obtains

  -- -------- --
     @xmath
  -- -------- --

where the critical exponents are @xmath and @xmath .

In Fig. 5.3 I show the exact ground state energy per particle @xmath
(with @xmath ) as a function of @xmath and @xmath in the thermodynamic
limit (Eqs. 5.11 ). One can see that also in the broken symmetry region
( @xmath ) the system undergoes a first order QPT at @xmath ; that is,
the first derivative of the ground state energy with respect to @xmath
is not continuous in this line.

##### Purity as an Indicator of the QPTs in the LMG Model

The standard notion of entanglement is not directly applicable to the
LMG model as described by Eq. 5.8 , as this is a single spin system and
no physically natural partition into subsystems is possible. Therefore,
using the @xmath -purity as a measure of entanglement becomes an
advantage from this point of view, since the latter only depends on a
particular subset of observables and no partition of the system is
necessary. The first required step is the identification of a relevant
Lie algebra of observables relative to which the purity has to be
calculated.

Since both the ground and first excited states of the quantum LMG model
may be understood as states of a system carrying total angular momentum
@xmath , a first possible algebra to consider is the @xmath algebra
acting on the relevant @xmath -dimensional eigenspace. Relative to this
algebra, @xmath is generalized unentangled for arbitrary values of
@xmath and @xmath , thus the corresponding purity remains constant and
does not signal the QPTs. However, the family of Hamiltonians of Eq. 5.8
do not generate this Lie algebra, but rather an @xmath algebra.

Thus a natural choice, suggested by the commutation relationships of
Eqs. 5.6 and 5.7 , is to study the purity relative to the spin- @xmath
representation of the angular momentum Lie algebra @xmath :

  -- -------- -- --------
     @xmath      (5.14)
  -- -------- -- --------

where the normalization factor @xmath is chosen to ensure that the
maximum of @xmath is equal to 1 (Eq. 3.32 ). With this normalization
factor, @xmath can be calculated exactly in the thermodynamic limit by
relying on the semi-classical approach described earlier (Appendix G and
Eq. 5.9 ). For @xmath and arbitrary @xmath , @xmath which is a GCS of
@xmath and has @xmath . For generic interaction values such that @xmath
, the classical angular momentum depicted in Fig. 5.2 is oriented along
the @xmath direction and is not degenerate: Because @xmath , only @xmath
contributes to @xmath . By recalling that @xmath , this gives @xmath ,
so that as far as relative purity is concerned the ground state behaves
asymptotically like a coherent state in the thermodynamic limit .
Physically, this means that with respect to the relevant fluctuations,
GCSs of @xmath are a good approximation of the quantum ground state for
large particle numbers, as is well established for this model [ GF78 ] .
However, in the region @xmath the ground state (both classical and
quantum) is two-fold degenerate in the @xmath limit, and the value of
@xmath depends in general on the particular linear combination of
degenerate states. This can be understood from Fig. 5.2 , where
different linear combinations of the two degenerate vectors @xmath and
@xmath imply different values of @xmath for @xmath and different values
of @xmath for @xmath , while @xmath remains constant. With these
features, the purity relative to the @xmath algebra will not be a good
indicator of the QPT.

An alternative option is then to look at a subalgebra of @xmath . In
particular, if I only consider the purity relative to the single
observable @xmath (i.e., a particular CSA of @xmath ), and retain the
same normalization as above, then

  -- -------- -- --------
     @xmath      (5.15)
  -- -------- -- --------

This new purity will be a good indicator of the QPT, since @xmath only
for @xmath in the thermodynamic limit, and in addition @xmath does not
depend on the particular linear combination of the two-fold degenerate
states in the region @xmath , where @xmath . Obviously, in this case
@xmath is straightforwardly related to the order parameter (Eq. 5.13 );
the critical exponents of @xmath are indeed the same ( @xmath and @xmath
).

In the region @xmath where @xmath , the quantum ground state of the LMG
model (Eq. 5.8 ) does not have a well defined @xmath -component of
angular momentum except at @xmath ( @xmath if @xmath ), thus in general
it does not lie on a coherent orbit of this algebra for finite @xmath .
However, as discussed above, it behaves asymptotically (in the infinite
@xmath limit) as a GCS (in the sense that @xmath ).

In Fig. 5.4 I show the behavior of @xmath as a function of the
parameters @xmath and @xmath . The purity relative to @xmath is then a
good indicator not only of the second order QPT but also of the first
order QPT (the line @xmath , @xmath ).

#### 5.1.2 Anisotropic XY Model in a Transverse Magnetic Field

In this section, I exploit the purity relative to the @xmath algebra
(introduced in Sec. 3.3.3 ) as a measure of GE which is able to identify
the paramagnetic-to-ferromagnetic QPT in the anisotropic one-dimensional
spin-1/2 XY model in a transverse magnetic field and classify its
universality properties.

The model Hamiltonian for a chain of @xmath sites is given by (Fig. 5.5
)

  -- -------- -- --------
     @xmath      (5.16)
  -- -------- -- --------

where the operators @xmath ( @xmath ) are the Pauli spin-1/2 operators
on site @xmath (Sec. 2.1 ), @xmath is the parameter one may tune to
drive the QPT, and @xmath is the amount of anisotropy in the XY plane.
In particular, for @xmath , Eq. 5.16 reduces to the Ising model in a
transverse magnetic field [ Pfe70 ] , while for @xmath the model becomes
isotropic. Periodic boundary conditions are considered here, that is
@xmath , for all @xmath and @xmath .

When @xmath and @xmath the model is Ising-like. In this limit, the
spin-spin interactions are the dominant contribution to the Hamiltonian
(Eq. 5.16 ), and the ground state becomes degenerate in the
thermodynamic limit, exhibiting ferromagnetic long-range order
correlations in the @xmath direction: @xmath , where @xmath is the
magnetization in the @xmath direction. In the opposite limit where
@xmath , the external magnetic field becomes important, the spins tend
to align in the @xmath direction, and the magnetization in the @xmath
direction vanishes: @xmath . Thus, in the thermodynamic limit the model
is subject to a paramagnetic-to-ferromagnetic second order QPT at a
critical point @xmath that will be determined later, with critical
behavior belonging to the two-dimensional Ising model universality
class.

This model can be exactly solved using the Jordan-Wigner transformation
[ JW28 ] , which maps the Pauli (spin 1/2) algebra into the canonical
fermion algebra through (Sec. 2.3.1 )

  -- -------- -- --------
     @xmath      (5.17)
  -- -------- -- --------

In order to find the exact ground state, I first need to write the
Hamiltonian given in Eq. 5.16 in terms of these fermionic operators,

  -- -------- -- --------
     @xmath      (5.18)
  -- -------- -- --------

where @xmath is an operator that commutes with the Hamiltonian, and
@xmath is the total number operator (here, I choose @xmath to be even).
Then, the eigenvalue of @xmath is a good quantum number, and noticing
that @xmath , one obtains @xmath whenever the (non-degenerate)
eigenstate of @xmath is a linear combination of states with an even
(odd) number of fermions. In particular, the numerical solution of this
model in finite systems (with @xmath even) indicates that the ground
state has eigenvalue @xmath , implying anti-periodic boundary conditions
in Eq. 5.18 .

The second step is to rewrite the Hamiltonian in terms of the fermionic
operators @xmath ( @xmath ), defined by the Fourier transform of the
operators @xmath ( @xmath ):

  -- -------- -- --------
     @xmath      (5.19)
  -- -------- -- --------

where the set @xmath of possible @xmath is determined by the
anti-periodic boundary conditions in the fermionic operators: @xmath .
Therefore,

  -- -------- -- --------
     @xmath      (5.20)
  -- -------- -- --------

The third and final step is to diagonalize the Hamiltonian of Eq. 5.20
using the Bogolubov canonical transformation [ BR86 ]

  -- -- --

  -- -- --

where the real coefficients @xmath and @xmath satisfy the relations

  -- -------- -- --------
     @xmath      (5.21)
  -- -------- -- --------

with

  -- -------- -- --------
     @xmath      (5.22)
  -- -------- -- --------

and @xmath given by

  -- -------- -- --------
     @xmath      (5.23)
  -- -------- -- --------

In this way, the quasiparticle creation and annihilation operators
@xmath and @xmath , also satisfy the canonical fermionic
anti-commutation relations of Eq. 2.34 , and the Hamiltonian may be
finally rewritten as

  -- -------- -- --------
     @xmath      (5.24)
  -- -------- -- --------

where @xmath is the quasiparticle energy. Since in general @xmath , the
ground state is the quantum state with no quasiparticles (BCS state [
Tak99 ] ), such that @xmath . Thus, one finds

  -- -------- -- --------
     @xmath      (5.25)
  -- -------- -- --------

where @xmath is the state with no fermions ( @xmath ).

Excited states with an even number of fermions ( @xmath ) can be
obtained applying pairs of quasiparticle creation operators @xmath to
the @xmath state. However, one should be more rigorous when obtaining
excited states with an odd number of particles, since @xmath implies
periodic boundary conditions in Eq. 5.18 , and the new set of possible
@xmath ’s (wave vectors) is @xmath (different from @xmath ).

##### QPT and Critical Point

In Fig. 5.6 I show the order parameter @xmath as a function of @xmath in
the thermodynamic limit and for different anisotropies @xmath [ BM71 ] .
Then, @xmath for @xmath and @xmath for @xmath , so the critical point is
located at @xmath , regardless of the value of @xmath . The value of
@xmath can also be obtained by setting @xmath in Eq. 5.24 , where the
gap vanishes.

The Hamiltonian of Eq. 5.16 is invariant under the transformation that
maps @xmath ( @xmath symmetry), implying that @xmath for all @xmath .
However, since in the thermodynamic limit the ground state becomes
two-fold degenerate, for @xmath , it is possible to build up a ground
state where the discrete @xmath symmetry is broken, i.e. @xmath . This
statement can be easily understood if we consider the case of @xmath ,
where for @xmath the ground state has no magnetization in the @xmath
direction: For @xmath , the spins align with the magnetic field, while
an infinitesimal spin interaction disorders the system and @xmath . On
the other hand, for @xmath the states @xmath and @xmath with @xmath and
@xmath , become degenerate in the thermodynamic limit, and a ground
state with @xmath can be constructed from a linear combination.

Remarkably, this paramagnetic-to-ferromagnetic QPT does not exist in the
isotropic limit ( @xmath ). In this case, the Hamiltonian of Eq. 5.16
has a continuous @xmath symmetry; that is, it is invariant under any
@xmath rotation of the form @xmath . Since the model is one-dimensional,
this symmetry cannot be spontaneously broken, regardless of the
magnitude of the coupling constants. Nevertheless, a simple calculation
of the ground state energy indicates a divergence in its second
derivative at the critical point @xmath , thus, a second order
non-broken symmetry QPT. For @xmath all the spins (in the ground state)
are aligned with the external magnetic field, with total magnetization
in the @xmath direction @xmath , and the quantum phase is gapped. For
@xmath , the total magnetization in the @xmath direction is @xmath , the
gap vanishes, and the quantum phase becomes critical (i.e., the
spin-spin correlation functions decay with a power law), with an
emergent @xmath gauge symmetry [ BO04 ] . Then, in terms of fermionic
operators (Eq. 5.18 ), an insulator-metal (or superfluid) like second
order QPT exists at @xmath for the isotropic case, with no symmetry
order parameter. It is a Lifshitz transition.

##### @xmath-Purity in the BCS State and Critical Behavior

The @xmath state of Eq. 5.25 is a GCS of the algebra of observables
@xmath . This is spanned by an orthonormal Hermitian basis which is
constructed by adjoining to the basis of @xmath , given in Eq. 3.53 ,
the following set @xmath of number-non-conserving fermionic operators:

  -- -------- -- --------
     @xmath      (5.26)
  -- -------- -- --------

Then, the @xmath state is generalized unentangled with respect to the
@xmath algebra and its purity @xmath contains no information about the
phase transition: @xmath . Therefore, in order to characterize the QPT
one needs to look at the possible subalgebras of @xmath . A natural
choice is to restrict to operators which preserve the total fermion
number, that is, to consider the @xmath algebra defined in Sec. 3.3.3 ,
relative to which the @xmath state may become generalized entangled.
(Note that as mentioned in Sec. 3.3.3 , the @xmath algebra can also be
written in terms of the fermionic operators @xmath and @xmath , with
@xmath belonging to the set @xmath .)

In the @xmath state, @xmath only if @xmath , thus using Eq. 3.54 the
purity relative to @xmath is:

  -- -------- -- --------
     @xmath      (5.27)
  -- -------- -- --------

where the coefficients @xmath can be obtained from Eqs. 5.22 and 5.23 .
In particular, for @xmath the spins are aligned with the magnetic field
and the fully polarized @xmath state is generalized unentangled in this
limit (a GCS of @xmath with @xmath ). In the thermodynamic limit, the
purity relative to the @xmath algebra can be obtained by integrating Eq.
5.27 :

  -- -------- -- --------
     @xmath      (5.28)
  -- -------- -- --------

leading to the following result:

  -- -------- -- --------
     @xmath      (5.29)
  -- -------- -- --------

Although this function is continuous, its derivative is not and has a
drastic change at @xmath , where the QPT occurs. Moreover, @xmath is
minimum for @xmath implying maximum entanglement at the transition point
and in the ordered (ferromagnetic) phase. Remarkably, for @xmath and
@xmath , where the ground state of the anisotropic XY model in a
transverse magnetic field is two-fold degenerate, @xmath remains
invariant for arbitrary linear combinations of the two degenerate
states.

As defined, for large @xmath the purity @xmath approaches a constant
value which depends on @xmath . It is convenient to remove such
dependence in the ordered phase by introducing a new quantity @xmath
(shifted purity). Thus,

  -- -- -- --------
           (5.30)
  -- -- -- --------

The new function @xmath behaves like a disorder parameter for the
system, being zero in the ferromagnetic (ordered) phase and different
from zero in the paramagnetic (disordered) one. The behavior of @xmath
as a function of @xmath in the thermodynamic limit is depicted in Fig.
5.7 for different values of @xmath . In the special case of the Ising
model in a transverse magnetic field ( @xmath ), one has the simple
behavior @xmath for @xmath and @xmath if @xmath .

The critical behavior of the system is characterized by a power-law
divergence of the correlation length @xmath , which is defined such that
for @xmath ,

  -- -------- -- --------
     @xmath      (5.31)
  -- -------- -- --------

Thus, @xmath signals the emergence of long-range correlations in the
ordered region @xmath . Near the critical point ( @xmath ), the
correlation length behaves as @xmath , where @xmath is a critical
exponent and the value @xmath corresponds to the Ising universality
class. Let the parameter @xmath . The fact that the purity contains
information about the critical properties of the model follows from the
possibility of expressing @xmath for @xmath as a function of the
correlation length,

  -- -------- -- --------
     @xmath      (5.32)
  -- -------- -- --------

where a known relation between @xmath , @xmath , and @xmath has been
exploited [ BM71 ] . Performing a Taylor expansion of Eq. 5.32 in the
region @xmath , one obtains (Fig. 5.8 )

  -- -------- -- --------
     @xmath      (5.33)
  -- -------- -- --------

Thus, the name disorder parameter for @xmath is consistent.

Some physical insight into the meaning of the ground-state purity may be
gained by noting that Eq. 5.27 can be written in terms of the
fluctuations of the total fermion operator @xmath

  -- -------- -- --------
     @xmath      (5.34)
  -- -------- -- --------

where the @xmath -property @xmath has been used. In general, the purity
relative to a given algebra can be written in terms of fluctuations of
observables [ BKO03 ] .

Since fluctuations of observables are at the root of QPTs, it is not
surprising that this quantity succeeds at identifying the critical
point. Interestingly, by recalling that @xmath , the @xmath -purity can
also be formally expressed as

  -- -------- -- --------
     @xmath      (5.35)
  -- -------- -- --------

where the sum only extends to the non-number-conserving @xmath
-generators belonging to the set @xmath specified in Eq. 5.26 . Thus,
the purity is entirely contributed by expectations of operators
connecting different @xmath -irreps, the net effect of correlating
representations with a different particle number resulting in the
fluctuation of a single operator, given by @xmath . In Fig. 5.9 , I show
the probability @xmath of having @xmath fermions in a chain of @xmath
sites for @xmath . For @xmath the fluctuations remain almost constant,
and so does the purity.

Again, the isotropic case ( @xmath ) is particular in the sense that
@xmath (or @xmath , see Fig. 5.7 ), without identifying the
corresponding metal-insulator QPT. The reason is that in this limit, the
Hamiltonian of Eq. 5.18 contains only fermionic operators that preserve
the number of particles (i.e., @xmath ), and the ground state of the
system is always a GCS of the @xmath algebra. Therefore, in order to
obtain information about this QPT, one should look at algebras other
than @xmath , relative to which the ground state is generalized
entangled. A more detailed analysis can be found in Ref. [ SOB04 ] .

### 5.2 General Mean-Field Hamiltonians

A Lie-algebraic analysis of many-body problems leads to a powerful tool
for finding the spectrum and eigenstates of the Hamiltonian that
describes the interactions in the system:

  -- -------- -- --------
     @xmath      (5.36)
  -- -------- -- --------

where the Hermitian operators @xmath are linearly independent
Schmidt-orthogonal elements of a Lie algebra @xmath (Sec. 3.2.2 ). Each
operator @xmath corresponds to a @xmath matrix acting on the Hilbert
space @xmath (of dimension @xmath ) associated with the physical system.
In general, @xmath is infinite or scales exponentially with a certain
variable @xmath , like the volume of the system, etc. For example, for a
@xmath -spin-1/2 system one obtains @xmath . However, if the system is
bosonic or is composed of harmonic oscillators, then @xmath . Throughout
this section, I will assume that @xmath .

Without loss of generality, one can consider @xmath to be a semi-simple
Lie algebra acting irreducibly on @xmath : The Casimir elements in
@xmath behave as constants (symmetries) and do not change the physics.
If the dimension of @xmath satisfies @xmath , then @xmath is defined to
be a general mean field Hamiltonian and is denoted as @xmath . Since
@xmath admits a CW decomposition (see Sec. 3.2.2 ), one obtains

  -- -------- -- --------
     @xmath      (5.37)
  -- -------- -- --------

where @xmath and @xmath are known (or can easily be computed)
coefficients, @xmath (i.e., the CSA of @xmath ), @xmath are ladder
operators, and @xmath .

The eigenstates @xmath of @xmath (i.e., the weight states of the
standard representation given by @xmath ) and the corresponding
eigenvalues @xmath , satisfying

  -- -------- -- --------
     @xmath      (5.38)
  -- -------- -- --------

are assumed to be known with high accuracy. In particular, every weight
state can always be obtained by the (efficient) successive application
of lowering operators to a highest weight state @xmath :

  -- -------- -- --------
     @xmath      (5.39)
  -- -------- -- --------

where @xmath is a normalization factor ( @xmath ). If @xmath is the
highest weight vector (associated with @xmath ), then

  -- -------- -- --------
     @xmath      (5.40)
  -- -------- -- --------

Therefore, all the information about the weight states of @xmath can be
obtained from @xmath , its weights, and the root vectors @xmath . This
applies to every irreducible representation of @xmath .

The diagonal form @xmath of Eq. 5.37 is the Hermitian operator

  -- -------- -- --------
     @xmath      (5.41)
  -- -------- -- --------

where @xmath is a unitary operator ( @xmath ). In principle, @xmath and
@xmath can be obtained by a simple matrix diagonalization algorithm
working in some low-dimensional faithful representation of @xmath .
However, this is not sufficient to show that the eigenvectors and
eigenvalues obtained correspond to a group operation and an element in
@xmath , respectively. Nevertheless, an important result in Lie theory
states that an operator such as @xmath can always be chosen to be a
group operator induced by @xmath , that is

  -- -------- -- --------
     @xmath      (5.42)
  -- -------- -- --------

Because @xmath , its eigenstates are the weight states @xmath of Eq.
5.39 . Then,

  -- -------- -- --------
     @xmath      (5.43)
  -- -------- -- --------

are the eigenstates of @xmath . In particular, @xmath can be chosen such
that @xmath is the ground state of Eq. 5.41 ¹ ¹ 1 Equivalently, one can
choose @xmath such that the lowest weight state @xmath is a ground state
of @xmath . and

  -- -------- -- --------
     @xmath      (5.44)
  -- -------- -- --------

is the ground state of Eq. 5.37 . Therefore, @xmath is generalized
unentangled and GCS of @xmath . Moreover, considering that @xmath is a
similarity transformation, the spectrum of Eq. 5.37 is then given by

  -- -------- -- --------
     @xmath      (5.45)
  -- -------- -- --------

where the weights @xmath can be obtained from the highest weight vector
as in Eq. 5.40 .

In brief, Eq. 5.37 is diagonalized if the coefficients @xmath of Eq.
5.41 and @xmath of Eq. 5.42 are obtained. This can be done in any
faithful representation of @xmath . To show this, assume that @xmath is
any faithful matrix representation associated to the operator @xmath .
From the definition of the exponential mapping, one obtains

  -- -------- -- --------
     @xmath      (5.46)
  -- -------- -- --------

and, equivalently,

  -- -------- -- --------
     @xmath      (5.47)
  -- -------- -- --------

which is the matrix representation of Eq. 5.46 . Since @xmath , then
@xmath can be exactly diagonalized ² ² 2 By exact diagonalization, I
mean efficient diagonalization. using the classical algorithm given in
the following section.

#### 5.2.1 Diagonalization Procedure

Any element @xmath of a real semi-simple Lie algebra @xmath can be
diagonalized through a similarity group transformation induced by @xmath
. Based on Ref. [ Wil93 ] , in this section I introduce a classical
algorithm for the diagonalization when @xmath is also a compact Lie
algebra. This algorithm is a generalization of the well known Jacobi’s
algorithm [ PTV92 ] used for general matrix diagonalization.

Assume then that @xmath is a faithful matrix representation of @xmath ,
satisfying

  -- -------- -- --------
     @xmath      (5.48)
  -- -------- -- --------

with @xmath . Equation 5.48 is always satisfied in the case of compact
Lie algebras if working with the adjoint representation. In general, an
orthogonal basis is given by the Hermitian matrices @xmath , @xmath ,
and @xmath (up to normalization factors), which are representations of
the operators in the CSA of @xmath and in the set of ladder operators,
respectively. Therefore, the trace inner product of Eq. 5.48 allows one
to project any operator in @xmath onto the sets @xmath , @xmath , and
@xmath . That is, the coefficients @xmath and @xmath of Eq. 5.37 can be
obtained by projecting the matrix @xmath , associated to @xmath , onto
the representations of the corresponding operators.

To find the group operation @xmath of Eq. 5.41 , one starts by searching
classically the index @xmath such that @xmath . Second, one needs to
perform a particular group (unitary) operation @xmath such that the
transformed operator @xmath , with @xmath , is

  -- -------- -- --------
     @xmath      (5.49)
  -- -------- -- --------

The operator @xmath can be obtained by noticing the existence in @xmath
of the @xmath Lie algebra

  -- -------- -- --------
     @xmath      (5.50)
  -- -------- -- --------

where @xmath are the components of the associated root vector. The
operators @xmath and @xmath are obtained from the relations @xmath .
Since @xmath , @xmath , and @xmath satisfy the commutation relations
defined in Sec. 3.2.2 , the operators @xmath , @xmath , and @xmath
satisfy the @xmath commutation relations of Eqs. 2.4 (i.e., spin
operators). Equation 5.37 can then be written as

  -- -------- -- --------
     @xmath      (5.51)
  -- -------- -- --------

where @xmath , and @xmath is an element of the orthogonal complement
@xmath as defined by Eq. 5.48 .

Therefore, @xmath is defined as the operator in the group @xmath that
diagonalizes @xmath . That is,

  -- -------- -- --------
     @xmath      (5.52)
  -- -------- -- --------

where @xmath , and

  -- -------- -- --------
     @xmath      (5.53)
  -- -------- -- --------

This is a diagonalization problem in @xmath and the defining
coefficients @xmath of Eq. 5.52 can be obtained through the
diagonalization of a @xmath matrix ³ ³ 3 In fact, different sets of
coefficients @xmath can be used to diagonalize this problem allowing one
to choose the sign of the proportionality coefficient .

Remarkably, @xmath leaves invariant the decomposition

  -- -------- -- --------
     @xmath      (5.54)
  -- -------- -- --------

where @xmath and @xmath are the sets of operators in @xmath and @xmath ,
respectively, which are orthogonal to @xmath . To show this, I first
notice that

  -- -------- -- --------
     @xmath      (5.55)
  -- -------- -- --------

or otherwise a group operation in @xmath could transform operators in
@xmath into operators in @xmath . This is not allowed due to the
orthogonalization property of Eq. 5.48 . For the same reason,

  -- -- -- --------
           (5.56)
  -- -- -- --------

Equations 5.55 and 5.56 are sufficient to guarantee the invariance of
the decomposition in Eq. 5.54 under the action of @xmath . Then, such
@xmath anihilates the @xmath -component of @xmath and transforms it as
in Eq. 5.49 .

The same @xmath -diagonalization procedure is applied to @xmath and so
on, to obtain @xmath . In each step, a certain component @xmath is
eliminated as described above. Therefore, @xmath gets closer to a
diagonal form and

  -- -------- -- --------
     @xmath      (5.57)
  -- -------- -- --------

To show this, I first write @xmath as

  -- -------- -- --------
     @xmath      (5.58)
  -- -------- -- --------

where @xmath and @xmath , @xmath . The square distance of @xmath to
@xmath is defined as

  -- -------- -- --------
     @xmath      (5.59)
  -- -------- -- --------

which is equivalent to count for the off-diagonal elements as in the
Jacobi’s diagonalization algorithm for symmetric matrices [ PTV92 ] . In
particular, @xmath when @xmath . If @xmath denotes the index of the
biggest @xmath in the @xmath iteration, then

  -- -------- -- --------
     @xmath      (5.60)
  -- -------- -- --------

Moreover, since @xmath leaves @xmath invariant (Eq. 5.54 ), then

  -- -------- -- --------
     @xmath      (5.61)
  -- -------- -- --------

Therefore,

  -- -------- -- --------
     @xmath      (5.62)
  -- -------- -- --------

that is,

  -- -------- -- --------
     @xmath      (5.63)
  -- -------- -- --------

Since @xmath , then

  -- -------- -- --------
     @xmath      (5.64)
  -- -------- -- --------

The group operation @xmath of Eq. 5.41 is then

  -- -------- -- --------
     @xmath      (5.65)
  -- -------- -- --------

where @xmath is the index for the biggest @xmath at step @xmath .
Nevertheless, Eq. 5.63 assures a rapid convergence and @xmath can be
well approximated by a finite product of operators (i.e., @xmath ). If
the desired accuracy is denoted by @xmath , the number @xmath of
required iterations is defined by

  -- -------- -- --------
     @xmath      (5.66)
  -- -------- -- --------

which is satisfied if (see Eq 5.63 )

  -- -------- -- --------
     @xmath      (5.67)
  -- -------- -- --------

Naturally, the larger the dimension @xmath of @xmath is (i.e., the
larger @xmath is), the larger the number @xmath of iterations required
to obtain such an accuracy.

To obtain @xmath as a function of @xmath , I start by rewriting Eq. 5.67
as ( @xmath )

  -- -------- -- --------
     @xmath      (5.68)
  -- -------- -- --------

Since @xmath , the following approximation can be performed:

  -- -------- -- --------
     @xmath      (5.69)
  -- -------- -- --------

where @xmath referres to some characteristic reference distance.
Therefore, Eq. 5.67 reads

  -- -------- -- --------
     @xmath      (5.70)
  -- -------- -- --------

that is, the desired accuracy @xmath in the diagonalization is
guaranteed if @xmath satisfies Eq. 5.70 . In particular, if @xmath , the
integer @xmath is bounded above by a polynomial of second order in
@xmath (i.e., @xmath for @xmath ).

Equation 5.70 is necessary but not sufficient to assure the efficiency
of this diagonalization method. It remains to be shown then that @xmath
can be obtained efficiently. For this purpose, I consider a simple
classical algorithm based mainly on standard matrix multiplication. The
idea is to work in a certain @xmath dimensional and faithful
representation of @xmath , such as the adjoint representation (Appendix
C ). In brief, the algorithm is based on two main steps: The search for
the biggest @xmath and the diagonalization in @xmath . These steps are
repeated @xmath times to diagonalize @xmath . If @xmath (where @xmath )
is the matrix representation of @xmath , the biggest @xmath is found by
projecting the corresponding matrix onto the matrices @xmath and @xmath
, with @xmath (i.e., the representations of the ladder operators). This
can be done with a conventional computer in @xmath computational
operations (i.e., addition and multiplication of complex numbers). Once
@xmath has been found, the corresponding @xmath -rotation has to be
performed. This operation is also represented by a @xmath matrix and the
representation @xmath of @xmath can be obtained with @xmath
computational operations.

In brief, the coefficients defining @xmath in Eq. 5.58 can be obtained
with computational accuracy in @xmath computational operations. From Eq.
5.70 and if @xmath and @xmath satisfies @xmath , then @xmath can be
efficiently obtained ⁴ ⁴ 4 This evaluation is done at the computational
accuracy given by the CC. Such an accuracy decreases polynomially in the
number of computational operations, so the method is efficient. in, at
most, @xmath operations.

#### 5.2.2 Example: Fermionic Systems

Consider a fermionic lattice system with Hamiltonian given by

  -- -------- -- --------
     @xmath      (5.71)
  -- -------- -- --------

where @xmath is the size of the lattice, @xmath , and @xmath ( @xmath )
the fermionic creation (annihilation) operators for site @xmath . Such a
Hamiltonian is known to be exactly solvable and can be diagonalized
through a Bogolubov transformation [ BR86 ] . Nevertheless, it
constitutes a simple example to apply the methods described above.

For this purpose, I start by noticing that @xmath , where @xmath is the
Lie algebra of dimension @xmath introduced in Sec. 3.3.3 . Therefore, it
can be efficiently diagonalized by working in a low-dimensional,
faithful, representation of @xmath such as the one given by

  -- -------- -- --------
     @xmath      (5.72)
  -- -------- -- --------

where @xmath are the @xmath matrices with +1 in the @xmath th row and
@xmath th column, and zeros otherwise. In this representation, @xmath
has associated the following matrix:

  -- -------- -- --------
     @xmath      (5.73)
  -- -------- -- --------

which can be easily diagonalized in a conventional computer, obtaining

  -- -------- -- --------
     @xmath      (5.74)
  -- -------- -- --------

where @xmath is a @xmath unitary matrix. In this representation, @xmath
span the whole set of @xmath matrices, and any possible @xmath is
directly associated with a group element induced by @xmath . For this
reason, the diagonalization procedure described in the previous section
to assure a group transformation needs not be performed. Therefore, Eq.
5.74 defines the diagonal form of @xmath through

  -- -------- -- --------
     @xmath      (5.75)
  -- -------- -- --------

where @xmath , the eigenvalues of @xmath , are now the single-fermion
energies.

In this case, the diagonalization method used turns out to be exactly
equivalent to the one based on the Bogolubov transformation for
fermionic quadratic Hamiltonians. It is also directly applicable to
diagonalize a bigger family defined by the fermionic operators of the
algebra @xmath (Sec. 5.1.2 ). Additionally, this method can also be used
to diagonalize more complex problems in which a Bogolubov transformation
is not straightforward to implement.

### 5.3 Summary

In this chapter, I have addressed two important problems in condensed
matter theory through a quantum information theory point of view: The
characterization of quantum phase transitions and the efficient
diagonalization of many-body Hamiltonians. It has been shown that the
concept of GE, which becomes very useful when there is a Lie algebraic
structure associated with the problem, plays a significant role in these
cases.

First, since QE is related to the existence of quantum correlations and
these dominate the different phases, I have shown that by choosing a
relevant set of observables, the relative purity contains information
about the critical exponents of the phase transitions in two models of
interest. Second, as motivated by the results of Chap. 4 , I have shown
that whenever an interaction Hamiltonian is an element of a
low-dimensional semi-simple Lie algebra, it can be diagonalized
efficiently through algebraic methods. This constitutes a major result
in condensed matter theory and, in principle, it could be extended for
the case of infinite dimensional Lie algebras which are generated by a
finite set of functions [ OSD05 ] .

## Chapter 6 Conclusions

When is a quantum computer useful?; Which problems can be solved more
efficiently with a quantum computer than with a conventional one?
Although not known yet, finding the answer to these questions
constitutes the main reason that makes the science of quantum
information a prospering and rapid-growing field. In this thesis, I have
addressed various subjects in quantum information theory, including the
quantum simulations of physical systems, quantum entanglement, and
quantum complexity, to prove some of the capabilities of quantum
computation. The main idea can be briefly stated as follows: To
efficiently simulate a physical system with a quantum computer, the laws
of quantum mechanics need to be exploited to our advantage. Quantum
entanglement, a non-classical property, is at the core of many tasks in
quantum information and, if entangled states are created in a quantum
simulation, such phenomena cannot be easily reproduced with a
conventional computer. Therefore, it is expected that a computer which
imitates the system to be simulated, i.e., a quantum computer, will be
the most efficient device for this purpose. In the following, I present
the principal results and conclusions from each chapter of this thesis.

In Chap. 2 , I addressed several broad issues associated with the
simulation of physical phenomena by quantum networks. I first introduced
the conventional model of quantum computation (Sec. 2.1.1 ) as the main
model used to perform these simulations. I studied the implementation of
deterministic quantum algorithms (Sec. 2.2 ) which allow one to obtain
relevant physical properties, usually related with the evaluation of
some correlation function of the system under study. In general, the
physical system one is interested in simulating is expressed by some
operator algebra that may differ from the operator algebra associated
with the quantum computer (i.e., Pauli operators). I pointed out that
efficient mappings between these two sets of operators exist in many
cases (Sec. 2.3 ) and are sufficient to establish the equivalence of the
different physical models to a universal model of quantum computation
such as the conventional model. In Sec. 2.3 , I explained how these
mappings can be used to perform quantum simulations of fermionic,
anyonic, and bosonic systems, respectively, in a quantum computer made
of qubits.

I also explored various issues associated with efficient quantum
simulations. A simulation is said to be efficient when the amount of
resources required is bounded above by a polynomial in some variable
@xmath , such as the size of the physical system to be simulated. The
main topics I addressed were how to reduce the number of qubits and
elementary quantum gates needed for the simulation and how to increase
the amount of physical information measurable. I showed that the
evaluation of some correlation functions in efficiently prepared initial
quantum states, like fermionic product states (Sec. 2.3.1 ), can be
efficiently done on a quantum computer. In some cases, this presents an
exponential speed-up with respect to the corresponding classical
simulation (Sec. 2.5 ), where no known efficient algorithms exist (i.e.,
it would require an exponentially large amount of resources). However,
it remains to be shown wether other tasks related with physical
simulations on quantum computers can be performed efficiently or not.
For example, there is no known efficient quantum algorithm to obtain the
ground state energy of the two-dimensional Hubbard Hamiltonian. This is
due to an exponential decay of the overlap between the efficiently
prepared initial state and the actual ground state of the model (Sec.
2.4 ).

As a proof of principles, in Sec. 2.6 I presented the simulation of a
quantum many-fermion system, the Fano-Anderson model, using a
liquid-state NMR based quantum information processor. Relevant
correlation functions were obtained by executing the quantum algorithms
described in Sec. 2.3 . For this purpose, a pulse sequence consisting of
rf pulses acting on an ensemble of trans-crotonic acid molecules was
performed. Moreover, different approximation and refocusing schemes were
used to optimize such pulse sequence and minimize the errors of the
simulation. The results obtained were very accurate because the overall
duration of the simulation was much smaller than the decoherence time of
the system. This quantum simulation was performed efficiently, i.e.,
with polynomial complexity in the system size.

Although the studies on efficiency were done by considering the
conventional model of quantum computation, the results obtained are
independent of the actual physical representation of the quantum
computer. A generalization of these results can be obtained by means of
the notion of generalized entanglement, which was presented in Chap. 3 .
This generalization of entanglement goes beyond the standard
subsystem-based approach, and is a feature of quantum states relative to
a preferred set of observables of the system under study: it is an
observer-dependent concept. To understand the main differences with the
usual notion, I described the main properties of quantum entanglement in
Sec. 3.1 . In Sec. 3.2.2 I tied together the theory of entanglement and
the theory of coherent states whenever the preferred set of observables
is a semi-simple Lie algebra. Important results were obtained in this
case, where generalized unentangled states were defined as the extremal
states of the algebra or generalized coherent states. Furthermore, these
states present least uncertainty and can be considered as the most
classical states in some sense. Some examples were presented in Sec. 3.3
.

The main conclusion of Chap. 3 is then that conventional entanglement is
a special case of a much more general theory, and this should be deeply
analyzed to take advantage of the quantum world in different quantum
information protocols like quantum teleportation, quantum computation,
etc. For this purpose, in Chap. 4 , I studied some of the capabilities
of generalized entanglement. Since traditional entanglement is known to
be a resource for several tasks in quantum information (Sec. 4.1 ),
including quantum computation (Sec. 4.2 ), one would expect that a more
general theory of entanglement would allow one to better understand the
reasons lying behind the power of quantum computers. Therefore, in Sec.
4.3 I presented a wide class of problems that can be solved efficiently
on both, a quantum computer and a conventional one. These problems are
related with the evaluation of a particular type of correlation
function. In these special cases, the corresponding quantum simulation
involves only generalized unentangled states relative to a certain
polynomially large (or polynomially bounded) set of observables (Sec.
4.4 ). I showed that if no generalized entangled states, with respect to
these sets, is created at some step of the quantum simulation, this task
can be efficiently reproduced with a conventional computer.

This important result indicates that although entangled states (in the
usual sense) could be involved in the quantum simulation, this is not a
sufficient condition to state that a quantum computer is more powerful
than a classical one for these simulations. Nevertheless, if generalized
entangled states relative to all polynomially large sets of observables
are created in the quantum simulation, such phenomena cannot be easily
reproduced with a conventional computer, and no known efficient
classical algorithms exist in this case. This represents, again, an
exponential speed-up with respect to the classical simulation.

In Chap. 2 , I discussed some issues related with efficient initial
state preparation when simulating a physical system with a quantum
computer made of qubits. These results have been generalized in Sec.
4.4.1 from the point of view of Lie algebras. Again, if the initial
state to be prepared is the generalized coherent state of a Lie algebra
with polynomially large (or polynomially bounded) dimension, such a
state can be prepared efficiently; that is, it can be prepared by
applying a polynomially large number of elementary gates. The type of
gates depend on the physical representation of the quantum computer but
the existence of one-to-one mappings makes this result independent of
such representation.

In Chap. 5 , I addressed two important topics in condensed matter
theory: The characterization of broken-symmetry quantum phase
transitions and the exact diagonalization of Hamiltonians, from the
point of view of generalized entanglement. In Sec. 5.1 , I showed that
the relative purity, which constitutes a measure of generalized
entanglement in the Lie algebraic case, successfully distinguishes
between the different phases present in the LMG model and in the
anisotropic XY model in a transverse magnetic field. In these cases, the
corresponding ground states can be exactly obtained, so choosing the
preferred set of observables that contains the relevant correlations in
the different phases becomes relatively easy. Nevertheless, applying
these concepts to a more general case can be done, in principle, by
following the same strategy. However, determining in a systematic way
the minimal set of observables whose relative purity is able to signal
and characterize the quantum phase transition requires, in general, an
elaborate analysis.

Finally, in Sec. 5.2 I introduced the general mean-field Hamiltonians as
those operators that are elements of polynomially large (or polynomially
bounded) dimensional Lie algebras. This is a generalization of the known
mean-field Hamiltonians such as the one composed by quadratic fermionic
or bosonic operators. I pointed out that the existence of
low-dimensional faithful representations guarantees the existence of
efficient classical algorithms for their diagonalization (Sec. 5.2.1 ).
In particular, the Bogolubov transformation is a special case of this
type (Sec. 5.2.2 ).

Much remains to be done to really understand the power of quantum
computers. As is the case for other investigators in the field, I
believe that a complete understanding of quantum entanglement for pure
and mixed states is the key that will unlock such power. I hope that
this thesis has been an interesting approach to the subject. In the
following section, I list a set of problems that may deserve further
investigation but are out of the scope of the present work.

### 6.1 Future Directions

Most of the results about efficiency in quantum simulations of physical
systems (Chap. 2 ) were based on the implementation of a particular type
of algorithms. Nowadays, adiabatic quantum computation [ FGG00 ] has
emerged as an important topic in which it is expected that certain
quantum states, such as the ground state of the two-dimensional Hubbard
model, could be efficiently prepared by slowly changing some Hamiltonian
interactions. It is important then to investigate wether there is a
connection between the quantum complexity associated to both types of
algorithms.

Regarding the theory of generalized entanglement, several issues related
to mixed-state entanglement also need further investigation. First, the
natural extension makes any measure, such as the relative purity, very
hard to compute and more efficient ways for its evaluation need to be
studied. Second, it is important to extend the results about efficiency
to the mixed-state case. For example, the simplest case would be to
consider mixed states which are a finite convex combination of
generalized unentangled states relative to a polynomially large
dimensional Lie algebra. Here, the computation of some correlation
functions would still be tractable (efficient) on a conventional
computer.

The classical algorithms described in Chap. 4 were used to show that
certain tasks, like the evaluation of some correlation functions, can be
done with polynomial complexity on a conventional computer. However, it
may be possible to find even more efficient classical algorithms for
this purpose, and it would be worthwhile to compare their complexity
with that of the corresponding quantum one. In fact, many quantum
algorithms found in the literature, like Grover’s algorithm, do not have
an exponential speed-up with respect to their classical simulation.

In Chap. 5 , I analyzed some quantum phase transitions from the point of
view of generalized entanglement. It yet remains to be understood how to
choose the set of observables that captures the most relevant
correlations, which distinguish different quantum phases, in a more
general case. That is, by just performing a Lie algebraic analysis of
the interaction in the Hamiltonian, can we always distinguish the
preferred set of observables that characterizes the phase transition?

Finding the solution to these and other problems, like characterizing a
bigger set of exactly-solvable systems in a Lie algebraic framework,
constitute, together with the results obtained throughout this thesis,
an advance towards the unification of Physics and Information Processing
Theory. At the end, information is physical.

## Appendix A Discrete Fourier Transforms

In practice, to evaluate the discrete Fast Fourier Transform (DFFT) one
uses discrete samples, therefore Eq. 2.33 must be modified accordingly.
From Fig. 2.12 it is observed that instead of having @xmath -functions
(Dirac’s functions), there are finite peaks in some range of energies,
close to the eigenvalues of the Hamiltonian. Accordingly, one cannot
determine the eigenvalues with the same accuracy as other numerical
calculations. However, there are some methods that give the results more
accurately than the DFFT.

As a function of the frequency @xmath , the DFFT ( @xmath ) is given by:

  -- -------- -- -------
     @xmath      (A.1)
  -- -------- -- -------

where @xmath are the different times at which the function @xmath is
sampled (Eq. 2.32 ), @xmath are the possible frequencies to evaluate the
FFT of @xmath ¹ ¹ 1 Only a discrete set of frequencies can be obtained
from the evaluation of the DFT over a discrete sample. In this case, the
Nyquist critical frequency is given by @xmath . , and @xmath is the
number of samples.

Since one is interested in @xmath (Eq. 2.32 ), then

  -- -------- -- -------
     @xmath      (A.2)
  -- -------- -- -------

and

  -- -------- -- -------
     @xmath      (A.3)
  -- -------- -- -------

If @xmath is close to one of the eigenvalues @xmath , and these are
sufficiently far apart to be well resolved, all terms in the sum of Eq.
A.3 , other than @xmath , can be neglected. Taking @xmath and @xmath ,
both close to @xmath in such a way that @xmath , then

  -- -------- -- -------
     @xmath      (A.4)
  -- -------- -- -------

After simple algebraic manipulations (and approximating @xmath and the
same for the denominator in Eq. A.4 ) the correction to the energy is

  -- -------- -- -------
     @xmath      (A.5)
  -- -------- -- -------

with

  -- -------- -- -------
     @xmath      (A.6)
  -- -------- -- -------

## Appendix B Discrete Fourier Transform and Propagation of Errors

Theoretically, the function @xmath of Eq. 2.86 is a linear combination
of two complex functions having different frequencies: @xmath , where
@xmath are the eigenvalues of the one-particle eigenstates, defined as
@xmath , in the Fano-Anderson model with @xmath site and the impurity
(Sec. 2.7 ), and @xmath , with @xmath . However, the liquid-state NMR
setting used to experimentally measure @xmath adds a set of errors that
cannot be controlled, and the function @xmath shown in Fig. 2.21 is no
longer a contribution of only two different frequencies.

As mentioned in Sec. 2.7 , @xmath was obtained experimentally for a
discrete set of values @xmath , with @xmath and @xmath s. Its DFT is
given by Eq. A.1 . Since one is evaluating the spectrum of a physical
(Hermitian) Hamiltonian, the imaginary part of @xmath is zero ¹ ¹ 1 Due
to experimental errors, the imaginary part of @xmath could be different
from zero. However, I only consider its real part because it contains
all the desired information. . In Fig. 2.22 , I show @xmath obtained
from the experimental points @xmath of Fig. 2.21 . Its error bars (i.e.,
the size of the line in the figure) were calculated by considering the
experimental error bars of @xmath in the following way: First, I rewrite
Eq. A.1 as

  -- -------- -- -------
     @xmath      (B.1)
  -- -------- -- -------

with @xmath (real). Then, the approximate standard deviation @xmath of
@xmath depends on the errors @xmath of @xmath as (considering a normal
distribution [ Tay97 ] )

  -- -------- -- -------
     @xmath      (B.2)
  -- -------- -- -------

On the other hand, @xmath is calculated as [ Tay97 ]

  -- -------- -- -------
     @xmath      (B.3)
  -- -------- -- -------

where @xmath and @xmath are the standard deviations of the real and
imaginary parts of @xmath (see Fig. 2.21 ), respectively. For
experimental reasons (Sec. 2.7.1 ) these errors are almost constant,
having @xmath independently of @xmath (see Fig. 2.21 ), where @xmath is
taken as the largest standard deviation. Combining Eqs. B.2 and B.3 , we
obtain

  -- -------- -- -------
     @xmath      (B.4)
  -- -------- -- -------

In the experiment, @xmath and @xmath , obtaining @xmath , which
determines the (constant) error bars (i.e., the size of the dots
representing data points) shown in Fig. 2.22 .

The standard deviation @xmath in the frequency domain is due to the
resolution of the sampling time @xmath . This resolution is related to
the error coming from the implementation of the @xmath rotations in the
refocusing procedure. A bound for this error is given by the resolution
of the spectrum; that is,

  -- -------- -- -------
     @xmath      (B.5)
  -- -------- -- -------

## Appendix C The Adjoint Representation

The adjoint representation of an @xmath -dimensional abstract Lie
algebra @xmath is the transformation that maps every operator in @xmath
into a @xmath dimensional complex matrix given by the structure factors
of @xmath [ Geo99 ] . If

  -- -------- -- -------
     @xmath      (C.1)
  -- -------- -- -------

where @xmath is the antisymetric form (e.g., the commutator) and @xmath
are the structure factors, the matrices @xmath given by the elements

  -- -------- -- -------
     @xmath      (C.2)
  -- -------- -- -------

define the adjoint representation of @xmath . In other words

  -- -------- -- -------
     @xmath      (C.3)
  -- -------- -- -------

where @xmath is the usual commutator between matrices. Since the
operators @xmath are Hermitian, the factors @xmath are real and the
adjoint representation is pure imaginary.

The Killing form is the bilinear form @xmath given by the following
mapping:

  -- -------- -- -------
     @xmath      (C.4)
  -- -------- -- -------

This mapping defines a convenient inner product in @xmath . In
particular, if @xmath is compact one can always choose a linear
transformation of the operators in @xmath such that

  -- -------- -- -------
     @xmath      (C.5)
  -- -------- -- -------

In this case, the observables @xmath are said to be Schmidt-orthogonal.
Moreover, if the algebra @xmath is semi-simple and Eq. C.5 is satisfied,
the adjoint representation is a faithful representation of @xmath ; that
is, every operator @xmath has associated a unique, linearly independent,
@xmath matrix.

A group operation induced by @xmath is a linear unitary transformation
of the form

  -- -------- -- -------
     @xmath      (C.6)
  -- -------- -- -------

where @xmath , and @xmath . The exponential mapping @xmath is defined by

  -- -------- -- -------
     @xmath      (C.7)
  -- -------- -- -------

Then, its action over an element of the algebra is given by

  -- -------- -- -------
     @xmath      (C.8)
  -- -------- -- -------

which also belongs to the algebra, that is, @xmath . The real
coefficients @xmath define an @xmath dimensional matrix @xmath , whose
properties are given by the nature of the adjoint representation of
@xmath . To see this, consider the following decomposition:

  -- -------- -- -------
     @xmath      (C.9)
  -- -------- -- -------

where the infinitesimal group operation @xmath can be approximated by

  -- -------- -- --------
     @xmath      (C.10)
  -- -------- -- --------

Naturally, this infinitesimal transformation induces another
infinitesimal transformation over @xmath given by the matrix

  -- -- -- --------
           (C.11)
  -- -- -- --------

where @xmath is an @xmath dimensional matrix with real coefficients
@xmath .

Keeping the first-order terms in Eq. C.8 , one obtains

  -- -------- -- --------
     @xmath      (C.12)
  -- -------- -- --------

The matrix @xmath is then given by the adjoint representation @xmath of
the element @xmath as defined by Eq. C.2 :

  -- -------- -- --------
     @xmath      (C.13)
  -- -------- -- --------

and the infinitesimal transformation is given by

  -- -------- -- --------
     @xmath      (C.14)
  -- -------- -- --------

Since @xmath is obtained after the successive application of @xmath ,
one obtains

  -- -------- -- --------
     @xmath      (C.15)
  -- -------- -- --------

where the @xmath dimensional matrix @xmath is obtained by exponentiating
the adjoint representation of @xmath . Equation C.15 is usually referred
to the adjoint action of the group. In many cases ¹ ¹ 1 That is, only
valid for simply connected Lie algebras. , the matrix @xmath defines the
adjoint representation of the group induced by @xmath .

## Appendix D Separability, Generalized Unentanglement, and Local
Purities

For a quantum system @xmath whose pure states @xmath belong to a Hilbert
space @xmath of dimension dim @xmath , the purity relative to the (real)
Lie algebra of all traceless observables @xmath spanned by an
orthogonal, commonly normalized Hermitian basis @xmath , @xmath , is,
according to Eq. 3.32 , given by:

  -- -------- -- -------
     @xmath      (D.1)
  -- -------- -- -------

The normalization factor @xmath depends on @xmath and is determined so
that the maximum purity value is 1. If Tr @xmath (as for the standard
spin- @xmath Gell-Mann matrices), then @xmath , whereas in the case Tr
@xmath (as for ordinary spin- @xmath Pauli matrices), @xmath . Recall
that any quantum state @xmath can be obtained by applying a group
operator @xmath to a reference state @xmath [a highest or lowest weight
state of @xmath ]; that is

  -- -------- -- -------
     @xmath      (D.2)
  -- -------- -- -------

with @xmath , and @xmath . Therefore, any quantum state @xmath is a GCS
of @xmath , thus generalized unentangled relative to the algebra of all
observables: @xmath for all @xmath .

Let’s now assume that @xmath is composed of @xmath distinguishable
subsytems, corresponding to a factorization @xmath , with dim @xmath ,
@xmath . Then the set of all local observables on @xmath becomes @xmath
. An orthonormal basis which is suitable for calculating the local
purity @xmath may be obtained by considering a collection of orthonormal
bases @xmath , @xmath , each acting on the @xmath th subsystem; that is,

  -- -------- -- -------
     @xmath      (D.3)
  -- -------- -- -------

where @xmath . Then for any pure state @xmath one may write

  -- -------- -- -------
     @xmath      (D.4)
  -- -------- -- -------

By letting @xmath be the Lie algebra of traceless Hermitian operators
acting on @xmath alone, the above equation is also naturally rewritten
as

  -- -------- -- -------
     @xmath      (D.5)
  -- -------- -- -------

The @xmath -purity @xmath may be simply related to the conventional
subsystem purity. Let @xmath be the reduced density operator describing
the state of the @xmath th subsystem. Because the latter can be
represented as

  -- -------- -- -------
     @xmath      (D.6)
  -- -------- -- -------

Eq. D.4 can be equivalently expressed as

  -- -------- -- -------
     @xmath      (D.7)
  -- -------- -- -------

that is, @xmath . Clearly, the maximum value of either Eqs. D.5 or D.7
will be attained if, and only if, each of the conventional purities
@xmath @xmath @xmath for all @xmath , which allows one to determine the
@xmath -normalization factor as

  -- -------- -- -------
     @xmath      (D.8)
  -- -------- -- -------

Accordingly,

  -- -------- -- -------
     @xmath      (D.9)
  -- -------- -- -------

and the equivalence with the standard notions of separability and
entanglement are recovered. Note that for the case of @xmath qubits
considered in Sec. 3.3.2 , the above value simplifies to @xmath which in
turn gives the purity expression of Eq. 3.51 once the standard
unnormalized Pauli matrices are used ( @xmath , thus removing the
overall factor 2).

## Appendix E Approximations of the exponential matrix

To classically compute the correlation function

  -- -------- -- -------
     @xmath      (E.1)
  -- -------- -- -------

one works in a low dimensional representation of the algebra @xmath ,
such as the adjoint representation. Here, @xmath is a highest weight
state of @xmath in some representation associated with the Hilbert space
@xmath , and @xmath and @xmath are operators that map states in @xmath
into states in the same space. As before, I consider such an algebra to
be compact semi-simple. Then, if @xmath , there is a Killing form (for
the adjoint representation) such that

  -- -------- -- -------
     @xmath      (E.2)
  -- -------- -- -------

where @xmath is the matrix representation of the operator @xmath .

In order to approximate a matrix, it is necessary to define a suitable
norm. Here, I use the second norm defined by

  -- -------- -- -------
     @xmath      (E.3)
  -- -------- -- -------

where @xmath is a @xmath matrix and @xmath is a unit vector. If @xmath
can be diagonalized, this norm is equivalent to the largest eigenvalue.
Nevertheless, the results and proofs of this appendix apply to any
definition of matrix norm.

The first step is to obtain, with the best possible method, a good
approximation to the exponential matrix @xmath , where @xmath is the
representation of the operator @xmath . In Ref. [ ML03 ] , the authors
state that the best method to evaluate such an exponential is the so
called scaling and squaring method , which uses Padé approximants. This
method is the one used in software like MatLab, etc. (However, if one is
interested in evaluating @xmath for different values of @xmath , the
method of obtaining the eigenvalues and eigenvectors of the Hermitian
matrix @xmath might be more efficient.)

A Padé approximation to @xmath ( @xmath ) is defined by

  -- -------- -- -------
     @xmath      (E.4)
  -- -------- -- -------

with

  -- -------- -- -------
     @xmath      (E.5)
  -- -------- -- -------

and

  -- -------- -- -------
     @xmath      (E.6)
  -- -------- -- -------

Interestingly, Padé approximants can be used if @xmath is not too large.
In this case, choosing @xmath gives the best approximation. To calculate
the matrices @xmath or @xmath takes the order of @xmath flop operations,
defined as the computational operation @xmath . The idea is then to use
the property

  -- -------- -- -------
     @xmath      (E.7)
  -- -------- -- -------

Therefore, @xmath must be chosen such that it is a power of two and for
which @xmath can be efficiently computed. Then, the final matrix is
obtained by @xmath matrix multiplications.

A common criteria for choosing @xmath is given by

  -- -------- -- -------
     @xmath      (E.8)
  -- -------- -- -------

This is a criteria that might be too restrictive, but I will use it
here. Then, @xmath , where @xmath will be given by Eq. E.8 . In this
way, the matrix @xmath can be efficiently computed by using a Taylor
expansion or a Padé approximant.

In particular, if @xmath is approximated by @xmath , then @xmath must be
chosen such that the approximation has a small error. In the following,
I present some proofs obtained in the Appendix of the mentioned paper
and which I do not describe in detail here.

First, if @xmath is a matrix with @xmath , then

  -- -------- -- -------
     @xmath      (E.9)
  -- -------- -- -------

Second, if @xmath and @xmath , then

  -- -------- -- --------
     @xmath      (E.10)
  -- -------- -- --------

Third, if @xmath , then

  -- -------- -- --------
     @xmath      (E.11)
  -- -------- -- --------

where

  -- -------- -- --------
     @xmath      (E.12)
  -- -------- -- --------

The @xmath matrix @xmath can be shown to commute with the matrix @xmath
. This is because @xmath must be a function of @xmath , since the Padé
approximants are functions of @xmath , too.

Then, if @xmath , @xmath , I obtain

  -- -------- -- --------
     @xmath      (E.13)
  -- -------- -- --------

with

  -- -------- -- --------
     @xmath      (E.14)
  -- -------- -- --------

Naturally, a low ratio between norms would give a good approximation. In
the following, I relate these results with the specific problem of
evaluating the correlation functions of Eq. E.1 .

As mentioned before, I am interested in the approximation of the matrix
@xmath (i.e., @xmath ), where @xmath is some low-dimensional matrix
representation of the operator

  -- -------- -- --------
     @xmath      (E.15)
  -- -------- -- --------

Here, @xmath denotes the dimension of the compact semi-simple Lie
algebra @xmath . If a Killing form exists for the representation, I
obtain

  -- -------- -- --------
     @xmath      (E.16)
  -- -------- -- --------

Then, if each @xmath , where @xmath is some bound for the coefficients
that build the operator @xmath , I obtain

  -- -------- -- --------
     @xmath      (E.17)
  -- -------- -- --------

Assuming that @xmath , then

  -- -------- -- --------
     @xmath      (E.18)
  -- -------- -- --------

yielding to

  -- -------- -- --------
     @xmath      (E.19)
  -- -------- -- --------

Equivalently,

  -- -------- -- --------
     @xmath      (E.20)
  -- -------- -- --------

Equation E.20 tells one that the exponential can be approximated by an
amount of products of matrices @xmath efficiently in @xmath .

The error of the approximation is given by

  -- -------- -- --------
     @xmath      (E.21)
  -- -------- -- --------

Because of the properties of the norm (i.e., @xmath and @xmath ), one
obtains

  -- -------- -- --------
     @xmath      (E.22)
  -- -------- -- --------

and considering that

  -- -------- -- --------
     @xmath      (E.23)
  -- -------- -- --------

with @xmath , then

  -- -------- -- --------
     @xmath      (E.24)
  -- -------- -- --------

Evenmore, because @xmath can be diagonalized (it commutes with @xmath )
we obtain @xmath . (This property might be satisfied for every matrix).
Then,

  -- -------- -- --------
     @xmath      (E.25)
  -- -------- -- --------

Equation E.25 tells one that for small values of @xmath , the
approximation can be performed with high accuracy. Then, if

  -- -------- -- --------
     @xmath      (E.26)
  -- -------- -- --------

I obtain

  -- -------- -- --------
     @xmath      (E.27)
  -- -------- -- --------

where @xmath is the maximum tolerable error in the approximation. This
error determines @xmath , which determines the integer @xmath of Eq.
E.14 . In fact, for a constant error @xmath , the higher @xmath is, the
smaller @xmath . Then @xmath increases and the approximation needs to be
done by higher order Padé approximants.

Since I am interested in the case when @xmath , where @xmath is an
integer that depends on the dimension @xmath of the Hilbert space @xmath
, it remains to be shown that for fixed @xmath , the integer @xmath
scales at most polynomially with @xmath or @xmath . First, Eq. E.27
tells one that for fixed @xmath , I can consider

  -- -------- -- --------
     @xmath      (E.28)
  -- -------- -- --------

where @xmath is the coefficient of proportionality. Then (see Eq. E.14 )

  -- -------- -- --------
     @xmath      (E.29)
  -- -------- -- --------

[The previous analysis did not consider roundoff errors and these might
be taken into account if needed. Nevertheless, one can consider that
every step was done at the accuracy given by the number of bits of our
computer (Turing machine). Also, some bounds to the errors can be
improved.]

### e.1 Scaling of the Method

In this section, I am interested in obtaining the number of operations
required to obtain @xmath as a function of norms of operators, etc.
First, Eq. E.14 can be bounded as follows:

  -- -------- -- --------
     @xmath      (E.30)
  -- -------- -- --------

Since

  -- -------- -- --------
     @xmath      (E.31)
  -- -------- -- --------

I obtain

  -- -------- -- --------
     @xmath      (E.32)
  -- -------- -- --------

where I have assumed that @xmath . Since

  -- -------- -- --------
     @xmath      (E.33)
  -- -------- -- --------

I obtain

  -- -------- -- --------
     @xmath      (E.34)
  -- -------- -- --------

for the desired accuracy.

Because calculating @xmath or @xmath takes @xmath flop operations in the
adjoint representation, calculating the approximated exponential matrix
takes @xmath flops. Then, to obtain the approximated matrix @xmath one
needs @xmath operations. That is,

  -- -------- -- --------
     @xmath      (E.35)
  -- -------- -- --------

flops, where I have considered @xmath .

## Appendix F Efficient Classical Evaluation of High-Order Correlation
Functions

In this case, I am interested in the evaluation of correlation functions
of the form

  -- -------- -- -------
     @xmath      (F.1)
  -- -------- -- -------

where @xmath is the highest weight state of a compact semi-simple Lie
algebra @xmath , where each Hermitian operator @xmath maps states of the
Hilbert space @xmath into states in the same space.

In a Cartan-Weyl decomposition, each operator @xmath can be decomposed
as

  -- -------- -- -------
     @xmath      (F.2)
  -- -------- -- -------

Again, the roots @xmath are considered to be positive so that the state
@xmath satisfies

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (F.3)
     @xmath   @xmath   @xmath      (F.4)
  -- -------- -------- -------- -- -------

Assume that @xmath is a vector whose @xmath components can take an
integer value in the set @xmath (where @xmath is the number of positive
roots). Then, I want to show that

  -- -------- -- -------
     @xmath
     @xmath      (F.5)
  -- -------- -- -------

where @xmath is also a positive root. To show this I use an inductive
method. For this purpose, some commutation relations are needed. These
are

  -- -------- -------- -------- -- -------
     @xmath   @xmath   @xmath      (F.6)
     @xmath   @xmath   @xmath      (F.7)
  -- -------- -------- -------- -- -------

Then, for @xmath , the desired result is satisfied:

  -- -------- -------- -------- -- --------
     @xmath   @xmath   @xmath      (F.8)
     @xmath   @xmath   @xmath      (F.9)
     @xmath   @xmath   @xmath      (F.10)
  -- -------- -------- -------- -- --------

where Eqs. F.3 and F.4 have been used here. ( @xmath if they differ in a
positive root.)

I now assume that Eq. F.5 is valid for some value of @xmath . Then, I
need to show that it remains valid for @xmath . In the latter case, I
need to obtain

  -- -------- -- --------
     @xmath
     @xmath      (F.11)
  -- -------- -- --------

where @xmath is also a positive root and @xmath . Again, one can show
the validity of Eq. F.11 using the commutation relations of Eqs. F.7 and
F.6 .

Consider then that @xmath . Therefore,

  -- -------- -- --------
     @xmath      (F.12)
  -- -------- -- --------

where each operator @xmath behaves as the constant @xmath when acting
over the corresponding weight states. The validity of Eq. F.11 is
obtained by noticing that the operator @xmath acting on the state of Eq.
F.5 increases the order @xmath in 1. For this case, the coefficients
@xmath can be obtained from the coefficients @xmath in the following
way:

  -- -------- -- --------
     @xmath      (F.13)
  -- -------- -- --------

while the other coefficients remain zero.

Consider now that @xmath . Then,

  -- -------- -- --------
     @xmath      (F.14)
  -- -------- -- --------

where @xmath is a positive root. Because of Eq. F.5 , the first term on
the rhs is a linear combination of states with order @xmath in @xmath ,
while the second term is of order @xmath . Then, Eq. F.11 is satisfied
for this case, too. The coefficients can now be obtained by the
following recursion:

  -- -------- -- --------
     @xmath      (F.15)
  -- -------- -- --------

while the other coefficients remain zero.

Similar results are obtained for the case @xmath . Then,

  -- -------- -- --------
     @xmath      (F.16)
  -- -------- -- --------

where @xmath is a positive root. Again, Eq. F.5 tells one that the first
term on the rhs is a linear combination of states of order @xmath in
@xmath while the second term is just a weight state of order @xmath in
@xmath . Therefore, Eq. F.5 is satisfied and the coefficients can be
obtained as

  -- -------- -- --------
     @xmath      (F.17)
  -- -------- -- --------

while the others remain zero.

For a fixed value of @xmath , the number @xmath of coefficients @xmath
is given by

  -- -------- -- --------
     @xmath      (F.18)
  -- -------- -- --------

and considering that @xmath , where @xmath is the order of the
correlation in Eq. F.1 , the total number @xmath of coefficients @xmath
satisfies

  -- -------- -- --------
     @xmath      (F.19)
  -- -------- -- --------

These coefficients can be computed easily, in polynomial time with
respect to @xmath , by using Eqs. F.13 , F.15 , and F.17 . The
calculation of every coefficient is needed for the following results.

Remarkably, Eq. F.5 yields to the same results for the action of the
operators @xmath as defined by Eq. F.2 :

  -- -------- -- --------
     @xmath
     @xmath      (F.20)
  -- -------- -- --------

The idea is then to update the coefficients @xmath whenever one of the
operators @xmath is multiplied by the left of Eq. F.20 until @xmath (see
Eq. F.1 ). The result is then

  -- -------- -- --------
     @xmath      (F.21)
  -- -------- -- --------

For this purpose, one needs to present a recursive method to update
these coefficients. First, if the operator @xmath acts on the state
@xmath , the coefficients can be easily updated as

  -- -------- -- --------
     @xmath      (F.22)
  -- -------- -- --------

where @xmath . For a fixed value of @xmath , the number of computational
operations to update all the coefficients @xmath due to the action of a
single operator @xmath is given by

  -- -------- -- --------
     @xmath      (F.23)
  -- -------- -- --------

However, if the operator @xmath acts on the state @xmath , the
coefficients need to be updated as

  -- -------- -- --------
     @xmath      (F.24)
  -- -------- -- --------

while the other coefficients need not be updated or remain zero. The
number of operations to update all the coefficients in this case is

  -- -------- -- --------
     @xmath      (F.25)
  -- -------- -- --------

Finally, when the operator @xmath acts on the state @xmath , the
coefficients need to be updated, too. For this purpose, I first rewrite
Eq. F.20 as

  -- -------- -- --------
     @xmath      (F.26)
  -- -------- -- --------

where the vector @xmath has @xmath components which can take values in
the set @xmath . Therefore,

  -- -------- -- --------
     @xmath      (F.27)
  -- -------- -- --------

Then, the coefficients are updated as

  -- -------- -- --------
     @xmath      (F.28)
  -- -------- -- --------

Given that the coefficients @xmath are known, the calculation of the
coefficients in Eq. F.28 take @xmath computational operations.
Therefore, the number of operations to update all the coefficients in
this case is given by

  -- -------- -- --------
     @xmath      (F.29)
  -- -------- -- --------

In brief, to update the coefficients due to the action of the operator
@xmath over the state @xmath it takes

  -- -------- -- --------
     @xmath      (F.30)
  -- -------- -- --------

computational operations (assuming that the coefficients @xmath are
known). Therefore, the total number of computational operations @xmath
to obtain the coefficients @xmath for the state @xmath satisfies

  -- -------- -- --------
     @xmath      (F.31)
  -- -------- -- --------

that is, it takes at most a polynomially large amount of operations,
with respect to @xmath and @xmath , to classically compute the
correlation of Eq. F.1 . (Though, the same is not true with respect to
@xmath . In fact, the complexity of the method described here increases
exponentially with @xmath , the order of the correlation function.)

If @xmath (i.e., the dimension of @xmath ) satisfies

  -- -------- -- --------
     @xmath      (F.32)
  -- -------- -- --------

and @xmath , where @xmath is the dimension of the associated Hilbert
space, the method presented here allows one to compute Eq. F.1
efficiently on a conventional computer.

## Appendix G Classical Limit in the LMG Model

As I mentioned in Sec. 5.1.1 , some critical properties of the LMG, such
as the order parameter or the ground state energy per particle in the
thermodynamic limit, may be obtained using a semi-classical approach.
Here, I sketch a rough analysis of why such approximation is valid (for
a more extensive analysis, see Ref. [ SOB04 ] ).

Defining the collective operators

  -- -------- -- -------
     @xmath      (G.1)
  -- -------- -- -------

where @xmath and the fermionic operators @xmath ( @xmath ) have been
defined in Sec. 2.3.1 . The collective operators satisfy the @xmath
commutation relations; that is

  -- -------- -- -------
     @xmath      (G.2)
  -- -------- -- -------

If the number of degenerate levels @xmath is very large, it is useful to
define the intensive collective operators @xmath , with commutation
relations

  -- -------- -- -------
     @xmath      (G.3)
  -- -------- -- -------

Therefore, the intensive collective operators commute in the limit
@xmath , they are effectively classical and can be simultaneously
diagonalized. Similarly, the intensive angular momentum operators @xmath
, @xmath , and @xmath (with @xmath defined in Eqs. 5.3 , 5.4 , and 5.5 )
commute with each other in the thermodynamic limit, so they can be
thought of as the angular momentum operators of a classical system.

Since the intensive LMG Hamiltonian @xmath , with @xmath given in Eq. (
5.8 ), can be written in terms of the intensive angular momentum
operators, it can be regarded as the Hamiltonian describing a classical
system. The ground state of the LMG model @xmath is then an eigenstate
of such intensive operators when @xmath : @xmath , @xmath being the
corresponding eigenvalue. In other words, when obtaining some
expectation values of intensive operators such as @xmath or @xmath the
ground state @xmath can be pictured as a classical angular momentum with
fixed coordinates in the three-dimensional space (see Fig. 5.1 ).

This point of view makes it clear why such operators ought to be
intensive. Otherwise, such a classical limit is not valid and terms of
@xmath (order 1) would be important for the calculations of the
properties of the LMG model. Obviously, all these concepts can be
extended to more complicated Hamiltonians such as the extended LMG
model, or even Hamiltonians including interactions of higher orders as
in [ Gil81 ] .
